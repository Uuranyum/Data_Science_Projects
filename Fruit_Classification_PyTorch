{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a3925fd7",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:43.052529Z",
     "iopub.status.busy": "2024-06-06T12:25:43.052093Z",
     "iopub.status.idle": "2024-06-06T12:25:52.363820Z",
     "shell.execute_reply": "2024-06-06T12:25:52.362558Z"
    },
    "papermill": {
     "duration": 9.323699,
     "end_time": "2024-06-06T12:25:52.366765",
     "exception": false,
     "start_time": "2024-06-06T12:25:43.043066",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import os\n",
    "import random\n",
    "from operator import itemgetter\n",
    "import cv2\n",
    "import copy\n",
    "import time\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.image as mpimg\n",
    "from matplotlib.image import imread\n",
    "import torch \n",
    "import torchvision\n",
    "from torchvision.datasets import ImageFolder\n",
    "from torchvision.utils import make_grid\n",
    "import torchvision.transforms as transform\n",
    "from torch.utils.data import Dataset, DataLoader, ConcatDataset\n",
    "from sklearn.model_selection import train_test_split\n",
    "import torch.nn as nn\n",
    "import torchvision.models as models\n",
    "import torch.nn.functional as F\n",
    "from mlxtend.plotting import plot_confusion_matrix\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "63ba0513",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:52.383237Z",
     "iopub.status.busy": "2024-06-06T12:25:52.381857Z",
     "iopub.status.idle": "2024-06-06T12:25:52.387528Z",
     "shell.execute_reply": "2024-06-06T12:25:52.386355Z"
    },
    "papermill": {
     "duration": 0.016547,
     "end_time": "2024-06-06T12:25:52.390176",
     "exception": false,
     "start_time": "2024-06-06T12:25:52.373629",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "example_train_path = '/kaggle/input/fruits/fruits-360_dataset/fruits-360/Training'\n",
    "path = '/kaggle/input/fruits/fruits-360_dataset/fruits-360'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "e56fc24f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:52.405544Z",
     "iopub.status.busy": "2024-06-06T12:25:52.405132Z",
     "iopub.status.idle": "2024-06-06T12:25:52.739741Z",
     "shell.execute_reply": "2024-06-06T12:25:52.738235Z"
    },
    "papermill": {
     "duration": 0.346148,
     "end_time": "2024-06-06T12:25:52.742871",
     "exception": false,
     "start_time": "2024-06-06T12:25:52.396723",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shape: (100, 100, 3)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "img = mpimg.imread(example_train_path + \"/Avocado/104_100.jpg\")\n",
    "print(\"Shape:\", img.shape)\n",
    "plt.imshow(img);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cc306fba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:52.760514Z",
     "iopub.status.busy": "2024-06-06T12:25:52.760047Z",
     "iopub.status.idle": "2024-06-06T12:25:53.145306Z",
     "shell.execute_reply": "2024-06-06T12:25:53.143816Z"
    },
    "papermill": {
     "duration": 0.398167,
     "end_time": "2024-06-06T12:25:53.148652",
     "exception": false,
     "start_time": "2024-06-06T12:25:52.750485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def plotHist(img):\n",
    "    fig, (ax1, ax2) = plt.subplots(1,2, figsize=(10,5))\n",
    "    ax1.imshow(img, cmap='gray')\n",
    "    ax1.axis('off')\n",
    "    ax2.hist(img.ravel(), \n",
    "             bins=10,\n",
    "            lw=0,\n",
    "            color='g',\n",
    "            alpha=0.5)\n",
    "    ax2.set_xlabel('Pixel Intensity')\n",
    "    ax2.set_ylabel('Count')\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "plotHist(img)    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ddb0bda9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:53.168212Z",
     "iopub.status.busy": "2024-06-06T12:25:53.167580Z",
     "iopub.status.idle": "2024-06-06T12:25:53.175315Z",
     "shell.execute_reply": "2024-06-06T12:25:53.173982Z"
    },
    "papermill": {
     "duration": 0.020481,
     "end_time": "2024-06-06T12:25:53.177739",
     "exception": false,
     "start_time": "2024-06-06T12:25:53.157258",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "transformer = transform.Compose([transform.ToTensor(),\n",
    "                                transform.Normalize([0.6840562224388123, 0.5786514282226562, 0.5037682056427002],\n",
    "                                                    [0.3034113645553589, 0.35993242263793945, 0.39139702916145325])\n",
    "                                ])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "cf2e671e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:25:53.196533Z",
     "iopub.status.busy": "2024-06-06T12:25:53.196076Z",
     "iopub.status.idle": "2024-06-06T12:36:06.213603Z",
     "shell.execute_reply": "2024-06-06T12:36:06.211972Z"
    },
    "papermill": {
     "duration": 613.030984,
     "end_time": "2024-06-06T12:36:06.217123",
     "exception": false,
     "start_time": "2024-06-06T12:25:53.186139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "batch_size = 50\n",
    "\n",
    "training = ImageFolder(path+'/Training',transform = transformer)\n",
    "\n",
    "trainset, valset = train_test_split(training,\n",
    "                                    test_size=0.05,\n",
    "                                    shuffle=True,\n",
    "                                    random_state=42)\n",
    "\n",
    "loaders ={'train':DataLoader(trainset,\n",
    "                             batch_size=batch_size,\n",
    "                            num_workers=4,\n",
    "                            pin_memory=False),\n",
    "         'val': DataLoader(valset,\n",
    "                          batch_size=batch_size,\n",
    "                          num_workers=4,\n",
    "                          pin_memory=False)}\n",
    "\n",
    "dataset_sizes = {'train' :len(trainset),\n",
    "                'val': len(valset)}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a8aa88c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:36:06.236425Z",
     "iopub.status.busy": "2024-06-06T12:36:06.235950Z",
     "iopub.status.idle": "2024-06-06T12:37:15.507173Z",
     "shell.execute_reply": "2024-06-06T12:37:15.505197Z"
    },
    "papermill": {
     "duration": 69.284399,
     "end_time": "2024-06-06T12:37:15.510133",
     "exception": false,
     "start_time": "2024-06-06T12:36:06.225734",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " |channel:1| train - mean: 0.00042781111551448703, std:1.0008412599563599\n",
      " |channel:1| val - mean: -0.008321082219481468, std:1.0031312704086304\n",
      " |channel:2| train - mean: 0.00013076762843411416, std:0.9998195171356201\n",
      " |channel:2| val - mean: -0.0021140899043530226, std:0.9977585673332214\n",
      " |channel:3| train - mean: 0.0004075282486155629, std:0.9987913966178894\n",
      " |channel:3| val - mean: -0.0015955622075125575, std:0.9983242154121399\n"
     ]
    }
   ],
   "source": [
    "channels = 3\n",
    "\n",
    "for channel in range(channels):\n",
    "    for x in ['train', 'val']:\n",
    "        num_pxl = dataset_sizes[x]*100*100\n",
    "        total_sum = 0\n",
    "        for batch in loaders[x]:\n",
    "            layer = list(map(itemgetter(channel), batch[0]))\n",
    "            layer = torch.stack(layer, dim=0)\n",
    "            total_sum += layer.sum()\n",
    "        mean = total_sum / num_pxl\n",
    "        \n",
    "        sum_sqrt = 0\n",
    "        for batch in loaders[x]:\n",
    "            layer = list(map(itemgetter(channel),batch[0]))\n",
    "            sum_sqrt += ((torch.stack(layer, dim=0)-mean).pow(2)).sum()\n",
    "        std = torch.sqrt(sum_sqrt / num_pxl)\n",
    "        \n",
    "        print(f' |channel:{channel+1}| {x} - mean: {mean}, std:{std}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "778234f4",
   "metadata": {
    "papermill": {
     "duration": 0.008173,
     "end_time": "2024-06-06T12:37:15.526833",
     "exception": false,
     "start_time": "2024-06-06T12:37:15.518660",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "This code calculates the mean and standard deviation values for each channel on a data set. The code works as follows:\n",
    "\n",
    "The line **channels = 3** specifies the number of channels in the data set.\n",
    "\n",
    "The first for loop is used to operate on each channel.\n",
    "\n",
    "The second for loop operates on two different data sets, **'train' and 'val'**.\n",
    "\n",
    "The variable **num_pxl** calculates the total number of pixels in the dataset. This is obtained by multiplying **dataset_sizes[x] (the number of objects in the dataset) by 100 (the default size).**\n",
    "\n",
    "The variable **total_sum** is used to hold the sum of the pixels of each channel. This value is calculated and summed for each batch.\n",
    "\n",
    "The mean **variable is total_sum** divided by num_pxl and represents the average value of the channel.\n",
    "\n",
    "The **sum_sqrt** variable is used to calculate the standard deviation. For each batch, the pixel values are subtracted from the mean, squared and summed.\n",
    "\n",
    "The **std** variable is obtained by dividing **sum_sqrt by num_pxl** and taking the square root. This represents the standard deviation of the channel.\n",
    "\n",
    "Finally, the mean and standard deviation values for each channel and dataset ('train' or 'val') are printed to the screen.\n",
    "\n",
    "This script can be used to calculate the mean and standard deviation values of the channels of images in a data set. These values can be used in data preprocessing steps or may be required for specific tasks."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f4d4a354",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:37:15.546305Z",
     "iopub.status.busy": "2024-06-06T12:37:15.545824Z",
     "iopub.status.idle": "2024-06-06T12:37:16.364118Z",
     "shell.execute_reply": "2024-06-06T12:37:16.362363Z"
    },
    "papermill": {
     "duration": 0.831252,
     "end_time": "2024-06-06T12:37:16.366736",
     "exception": false,
     "start_time": "2024-06-06T12:37:15.535484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(tensor(-0.0501), tensor(0.9727))"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x, y = next(iter(loaders['train']))\n",
    "x.mean(), x.std()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "917f8c81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:07:56.026337Z",
     "iopub.status.busy": "2024-06-06T12:07:56.025786Z",
     "iopub.status.idle": "2024-06-06T12:07:56.050391Z",
     "shell.execute_reply": "2024-06-06T12:07:56.048611Z",
     "shell.execute_reply.started": "2024-06-06T12:07:56.026287Z"
    },
    "papermill": {
     "duration": 0.008361,
     "end_time": "2024-06-06T12:37:16.383755",
     "exception": false,
     "start_time": "2024-06-06T12:37:16.375394",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The line x, y = next(iter(loaders['train'])) retrieves the next item (instance or batch) from the loaders['train'] iterator (iterator). This item usually consists of an input and a target pair. This line assigns this pair to the variables x and y.\n",
    "\n",
    "The expressions x.mean() and x.std() calculate the mean and standard deviation of the channels of the tensor x (input data).\n",
    "\n",
    "x.mean() computes the mean of all channels and all dimensions of the tensor x and returns a scalar value. This is done by averaging over all samples.\n",
    "\n",
    "x.std() computes the standard deviation of all channels and all dimensions of the tensor x and returns a scalar value. This is done by calculating the standard deviation from each sample and then averaging the standard deviations of all samples.\n",
    "\n",
    "These codes are often used for normalization or standardization of a data set. Normalization transforms the data into a specific range (usually [0, 1] or [-1, 1]). \n",
    "\n",
    "Standardization scales the data so that the mean value is 0 and the standard deviation is 1.\n",
    "\n",
    "These operations can help machine learning models perform better during training. It can also be used to understand the overall characteristics of the dataset (mean and standard deviation)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "830465c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:37:16.403656Z",
     "iopub.status.busy": "2024-06-06T12:37:16.403229Z",
     "iopub.status.idle": "2024-06-06T12:37:17.566505Z",
     "shell.execute_reply": "2024-06-06T12:37:17.565217Z"
    },
    "papermill": {
     "duration": 1.176969,
     "end_time": "2024-06-06T12:37:17.569325",
     "exception": false,
     "start_time": "2024-06-06T12:37:16.392356",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y = next(iter(loaders['train']))\n",
    "img_norm = x[0].permute(1,2,0).numpy()\n",
    "plotHist(img_norm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "de716637",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:37:17.590872Z",
     "iopub.status.busy": "2024-06-06T12:37:17.589834Z",
     "iopub.status.idle": "2024-06-06T12:37:17.598252Z",
     "shell.execute_reply": "2024-06-06T12:37:17.597057Z"
    },
    "papermill": {
     "duration": 0.022188,
     "end_time": "2024-06-06T12:37:17.600958",
     "exception": false,
     "start_time": "2024-06-06T12:37:17.578770",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "131"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(training.classes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6251fddd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:37:17.621918Z",
     "iopub.status.busy": "2024-06-06T12:37:17.621176Z",
     "iopub.status.idle": "2024-06-06T12:39:58.640919Z",
     "shell.execute_reply": "2024-06-06T12:39:58.639705Z"
    },
    "papermill": {
     "duration": 161.033721,
     "end_time": "2024-06-06T12:39:58.644112",
     "exception": false,
     "start_time": "2024-06-06T12:37:17.610391",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dic = {}\n",
    "\n",
    "for classes in training.classes:\n",
    "    for filename in os.listdir(path+'/Training/'+classes):\n",
    "        dic[classes] = [len([os.path.join(path+'/Training/'+classes, filename) for filename in os.listdir(path+'/Training/'+classes)])]\n",
    "        \n",
    "train_samplesize = pd.DataFrame.from_dict(dic)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c196248",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 0.008994,
     "end_time": "2024-06-06T12:39:58.662700",
     "exception": false,
     "start_time": "2024-06-06T12:39:58.653706",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "The line dic = {} creates an empty dictionary.\n",
    "\n",
    "The first for loop operates on each class in the training.classes list. This represents the different classes in the dataset.\n",
    "\n",
    "The second for loop lists the filenames for each class in the path+'/Training/'+classes directory.\n",
    "\n",
    "In the dictionary (dic), a key is created for each class and the corresponding value is the result of the expression len([os.path.join(path+'/Training/'+classes, filename) for filename in os.listdir(path+'/Training/'+classes)]). This expression collects the full paths of all image files of a given class into a list and calculates the length of this list. This number represents the number of images in the training dataset for that class.\n",
    "\n",
    "The line train_samplesize = pd.DataFrame.from_dict(dic) creates a Pandas data frame (DataFrame) from the generated dictionary (dic). The columns of this data frame will be the keys (classes) in the dictionary and the values in each column will contain the number of images belonging to that class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d428575b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-06T12:39:58.684189Z",
     "iopub.status.busy": "2024-06-06T12:39:58.683758Z",
     "iopub.status.idle": "2024-06-06T12:39:58.713816Z",
     "shell.execute_reply": "2024-06-06T12:39:58.712693Z"
    },
    "papermill": {
     "duration": 0.043833,
     "end_time": "2024-06-06T12:39:58.716692",
     "exception": false,
     "start_time": "2024-06-06T12:39:58.672859",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Apple Braeburn</th>\n",
       "      <th>Apple Crimson Snow</th>\n",
       "      <th>Apple Golden 1</th>\n",
       "      <th>Apple Golden 2</th>\n",
       "      <th>Apple Golden 3</th>\n",
       "      <th>Apple Granny Smith</th>\n",
       "      <th>Apple Pink Lady</th>\n",
       "      <th>Apple Red 1</th>\n",
       "      <th>Apple Red 2</th>\n",
       "      <th>Apple Red 3</th>\n",
       "      <th>...</th>\n",
       "      <th>Tomato 2</th>\n",
       "      <th>Tomato 3</th>\n",
       "      <th>Tomato 4</th>\n",
       "      <th>Tomato Cherry Red</th>\n",
       "      <th>Tomato Heart</th>\n",
       "      <th>Tomato Maroon</th>\n",
       "      <th>Tomato Yellow</th>\n",
       "      <th>Tomato not Ripened</th>\n",
       "      <th>Walnut</th>\n",
       "      <th>Watermelon</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>492</td>\n",
       "      <td>444</td>\n",
       "      <td>480</td>\n",
       "      <td>492</td>\n",
       "      <td>481</td>\n",
       "      <td>492</td>\n",
       "      <td>456</td>\n",
       "      <td>492</td>\n",
       "      <td>492</td>\n",
       "      <td>429</td>\n",
       "      <td>...</td>\n",
       "      <td>672</td>\n",
       "      <td>738</td>\n",
       "      <td>479</td>\n",
       "      <td>492</td>\n",
       "      <td>684</td>\n",
       "      <td>367</td>\n",
       "      <td>459</td>\n",
       "      <td>474</td>\n",
       "      <td>735</td>\n",
       "      <td>475</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 131 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Apple Braeburn  Apple Crimson Snow  Apple Golden 1  Apple Golden 2  \\\n",
       "0             492                 444             480             492   \n",
       "\n",
       "   Apple Golden 3  Apple Granny Smith  Apple Pink Lady  Apple Red 1  \\\n",
       "0             481                 492              456          492   \n",
       "\n",
       "   Apple Red 2  Apple Red 3  ...  Tomato 2  Tomato 3  Tomato 4  \\\n",
       "0          492          429  ...       672       738       479   \n",
       "\n",
       "   Tomato Cherry Red  Tomato Heart  Tomato Maroon  Tomato Yellow  \\\n",
       "0                492           684            367            459   \n",
       "\n",
       "   Tomato not Ripened  Walnut  Watermelon  \n",
       "0                 474     735         475  \n",
       "\n",
       "[1 rows x 131 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_samplesize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dc77e3f2",
   "metadata": {
    "papermill": {
     "duration": 0.011081,
     "end_time": "2024-06-06T12:39:58.737502",
     "exception": false,
     "start_time": "2024-06-06T12:39:58.726421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e0dca79c",
   "metadata": {
    "papermill": {
     "duration": 0.009351,
     "end_time": "2024-06-06T12:39:58.757489",
     "exception": false,
     "start_time": "2024-06-06T12:39:58.748138",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6291409a",
   "metadata": {
    "papermill": {
     "duration": 0.009764,
     "end_time": "2024-06-06T12:39:58.777027",
     "exception": false,
     "start_time": "2024-06-06T12:39:58.767263",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5857,
     "sourceId": 2609027,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 862.717985,
   "end_time": "2024-06-06T12:40:02.486086",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-06T12:25:39.768101",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
