{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a18341de",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.008314,
     "end_time": "2024-06-04T13:38:39.454217",
     "exception": false,
     "start_time": "2024-06-04T13:38:39.445903",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## ChatGPT Google Reviews Analysis ##"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a512d8d7",
   "metadata": {
    "papermill": {
     "duration": 0.007783,
     "end_time": "2024-06-04T13:38:39.469902",
     "exception": false,
     "start_time": "2024-06-04T13:38:39.462119",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Please upvote it if you are find this note book helpful. My deepest thanks for your all! ###\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7b731147",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:38:39.486725Z",
     "iopub.status.busy": "2024-06-04T13:38:39.486361Z",
     "iopub.status.idle": "2024-06-04T13:39:10.257895Z",
     "shell.execute_reply": "2024-06-04T13:39:10.256851Z"
    },
    "papermill": {
     "duration": 30.782799,
     "end_time": "2024-06-04T13:39:10.260397",
     "exception": false,
     "start_time": "2024-06-04T13:38:39.477598",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-04 13:39:00.785970: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-04 13:39:00.786110: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-04 13:39:00.920583: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import re\n",
    "import string\n",
    "import emoji\n",
    "import nltk\n",
    "import spacy\n",
    "from tqdm import tqdm\n",
    "from nltk.corpus import stopwords\n",
    "from gensim.models import Word2Vec\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n",
    "from sklearn.preprocessing import MinMaxScaler, LabelEncoder, OrdinalEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aaec4d96",
   "metadata": {
    "papermill": {
     "duration": 0.007664,
     "end_time": "2024-06-04T13:39:10.276269",
     "exception": false,
     "start_time": "2024-06-04T13:39:10.268605",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Importing Data ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a9a7e47f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:10.294249Z",
     "iopub.status.busy": "2024-06-04T13:39:10.293176Z",
     "iopub.status.idle": "2024-06-04T13:39:11.165692Z",
     "shell.execute_reply": "2024-06-04T13:39:11.164630Z"
    },
    "papermill": {
     "duration": 0.883905,
     "end_time": "2024-06-04T13:39:11.167963",
     "exception": false,
     "start_time": "2024-06-04T13:39:10.284058",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/2635146516.py:1: DtypeWarning: Columns (5,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')\n"
     ]
    }
   ],
   "source": [
    "dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6322969c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.185879Z",
     "iopub.status.busy": "2024-06-04T13:39:11.184812Z",
     "iopub.status.idle": "2024-06-04T13:39:11.207201Z",
     "shell.execute_reply": "2024-06-04T13:39:11.206217Z"
    },
    "papermill": {
     "duration": 0.033482,
     "end_time": "2024-06-04T13:39:11.209335",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.175853",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>b4d0887a-d493-4e0f-8740-ad29cc2cafa5</td>\n",
       "      <td>Zappi</td>\n",
       "      <td>the apps works great! the speech to text is re...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 22:00:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>852c8123-ea73-4a8d-8d78-63221a882e56</td>\n",
       "      <td>soufiane taku</td>\n",
       "      <td>amazing</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.139</td>\n",
       "      <td>2024-06-02 22:00:34</td>\n",
       "      <td>1.2024.139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9166feae-db4e-45f8-a77f-61a15ad0c092</td>\n",
       "      <td>jahinam singh</td>\n",
       "      <td>very good</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:59:39</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2a8bda00-9a39-4c8d-b979-412b7cd5db66</td>\n",
       "      <td>Nicolai West</td>\n",
       "      <td>you don't need Google u need chat gpy</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:56:36</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>884a3e77-1579-44b7-b17c-1eeb19d51195</td>\n",
       "      <td>Ride Ninja</td>\n",
       "      <td>مك</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:54:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               reviewId       userName  \\\n",
       "0  b4d0887a-d493-4e0f-8740-ad29cc2cafa5          Zappi   \n",
       "1  852c8123-ea73-4a8d-8d78-63221a882e56  soufiane taku   \n",
       "2  9166feae-db4e-45f8-a77f-61a15ad0c092  jahinam singh   \n",
       "3  2a8bda00-9a39-4c8d-b979-412b7cd5db66   Nicolai West   \n",
       "4  884a3e77-1579-44b7-b17c-1eeb19d51195     Ride Ninja   \n",
       "\n",
       "                                             content  score  thumbsUpCount  \\\n",
       "0  the apps works great! the speech to text is re...      5              0   \n",
       "1                                            amazing      5              0   \n",
       "2                                          very good      5              0   \n",
       "3              you don't need Google u need chat gpy      5              0   \n",
       "4                                                 مك      1              0   \n",
       "\n",
       "  reviewCreatedVersion                   at  appVersion  \n",
       "0           1.2024.143  2024-06-02 22:00:48  1.2024.143  \n",
       "1           1.2024.139  2024-06-02 22:00:34  1.2024.139  \n",
       "2           1.2024.143  2024-06-02 21:59:39  1.2024.143  \n",
       "3           1.2024.143  2024-06-02 21:56:36  1.2024.143  \n",
       "4           1.2024.143  2024-06-02 21:54:48  1.2024.143  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "15a4fab2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.227521Z",
     "iopub.status.busy": "2024-06-04T13:39:11.227158Z",
     "iopub.status.idle": "2024-06-04T13:39:11.234118Z",
     "shell.execute_reply": "2024-06-04T13:39:11.233252Z"
    },
    "papermill": {
     "duration": 0.018533,
     "end_time": "2024-06-04T13:39:11.236132",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.217599",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1076368"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d19fa8aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.254572Z",
     "iopub.status.busy": "2024-06-04T13:39:11.253999Z",
     "iopub.status.idle": "2024-06-04T13:39:11.278326Z",
     "shell.execute_reply": "2024-06-04T13:39:11.277412Z"
    },
    "papermill": {
     "duration": 0.036136,
     "end_time": "2024-06-04T13:39:11.280486",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.244350",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>42990</th>\n",
       "      <td>57f5a7ef-98ea-4af5-bdc1-78777ff36d1d</td>\n",
       "      <td>AXEL</td>\n",
       "      <td>enable to star chat responses for quick access...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.010</td>\n",
       "      <td>2024-01-18 13:54:27</td>\n",
       "      <td>1.2024.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26936</th>\n",
       "      <td>082f70d9-ebc1-4926-bea0-f20520531b29</td>\n",
       "      <td>S Ramalakshmi</td>\n",
       "      <td>it is very poor on generating special cases in...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>2024-04-25 04:58:27</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84761</th>\n",
       "      <td>0bb658d1-ec5b-47a5-9e84-1234d1127952</td>\n",
       "      <td>Tarachand</td>\n",
       "      <td>its not an app</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0022</td>\n",
       "      <td>2023-07-26 12:09:55</td>\n",
       "      <td>1.0.0022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57256</th>\n",
       "      <td>66b836e5-cacf-4249-b869-ecd0ed9f2f45</td>\n",
       "      <td>Kailas Kartik</td>\n",
       "      <td>Amazing and wonderful!</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2023-12-25 04:32:03</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93352</th>\n",
       "      <td>a10377a8-f930-4d3f-89e8-46203540cd0d</td>\n",
       "      <td>Nambi Raj</td>\n",
       "      <td>🙂</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>2024-04-30 14:56:57</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   reviewId       userName  \\\n",
       "42990  57f5a7ef-98ea-4af5-bdc1-78777ff36d1d           AXEL   \n",
       "26936  082f70d9-ebc1-4926-bea0-f20520531b29  S Ramalakshmi   \n",
       "84761  0bb658d1-ec5b-47a5-9e84-1234d1127952      Tarachand   \n",
       "57256  66b836e5-cacf-4249-b869-ecd0ed9f2f45  Kailas Kartik   \n",
       "93352  a10377a8-f930-4d3f-89e8-46203540cd0d      Nambi Raj   \n",
       "\n",
       "                                                 content  score  \\\n",
       "42990  enable to star chat responses for quick access...      4   \n",
       "26936  it is very poor on generating special cases in...      1   \n",
       "84761                                     its not an app      1   \n",
       "57256                             Amazing and wonderful!      5   \n",
       "93352                                                  🙂      4   \n",
       "\n",
       "       thumbsUpCount reviewCreatedVersion                   at  appVersion  \n",
       "42990              0           1.2024.010  2024-01-18 13:54:27  1.2024.010  \n",
       "26936              0           1.2024.108  2024-04-25 04:58:27  1.2024.108  \n",
       "84761              0             1.0.0022  2023-07-26 12:09:55    1.0.0022  \n",
       "57256              0           1.2023.314  2023-12-25 04:32:03  1.2023.314  \n",
       "93352              0           1.2024.108  2024-04-30 14:56:57  1.2024.108  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = dx.sample(10000)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5e7350f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.299481Z",
     "iopub.status.busy": "2024-06-04T13:39:11.299121Z",
     "iopub.status.idle": "2024-06-04T13:39:11.304792Z",
     "shell.execute_reply": "2024-06-04T13:39:11.303813Z"
    },
    "papermill": {
     "duration": 0.017725,
     "end_time": "2024-06-04T13:39:11.306961",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.289236",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.rename(columns={'reviewId': 'review_id',\n",
    "                  'userName':'user_name',\n",
    "                  'thumbsUpCount': 'thumbs_up_count',\n",
    "                  'reviewCreatedVersion':'review_created_version',\n",
    "                  'appVersion':'app_version'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f7fb0237",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.326154Z",
     "iopub.status.busy": "2024-06-04T13:39:11.325776Z",
     "iopub.status.idle": "2024-06-04T13:39:11.332594Z",
     "shell.execute_reply": "2024-06-04T13:39:11.331459Z"
    },
    "papermill": {
     "duration": 0.018903,
     "end_time": "2024-06-04T13:39:11.334664",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.315761",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['review_id', 'user_name', 'content', 'score', 'thumbs_up_count',\n",
       "       'review_created_version', 'at', 'app_version'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "87b3ff14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.353737Z",
     "iopub.status.busy": "2024-06-04T13:39:11.353414Z",
     "iopub.status.idle": "2024-06-04T13:39:11.359539Z",
     "shell.execute_reply": "2024-06-04T13:39:11.358641Z"
    },
    "papermill": {
     "duration": 0.017967,
     "end_time": "2024-06-04T13:39:11.361541",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.343574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10000, 8)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "577ee49c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.381028Z",
     "iopub.status.busy": "2024-06-04T13:39:11.380195Z",
     "iopub.status.idle": "2024-06-04T13:39:11.405497Z",
     "shell.execute_reply": "2024-06-04T13:39:11.404299Z"
    },
    "papermill": {
     "duration": 0.037612,
     "end_time": "2024-06-04T13:39:11.407881",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.370269",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 10000 entries, 42990 to 59924\n",
      "Data columns (total 8 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   review_id               10000 non-null  object\n",
      " 1   user_name               9999 non-null   object\n",
      " 2   content                 10000 non-null  object\n",
      " 3   score                   10000 non-null  int64 \n",
      " 4   thumbs_up_count         10000 non-null  int64 \n",
      " 5   review_created_version  9199 non-null   object\n",
      " 6   at                      10000 non-null  object\n",
      " 7   app_version             9199 non-null   object\n",
      "dtypes: int64(2), object(6)\n",
      "memory usage: 703.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "379d404d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.427630Z",
     "iopub.status.busy": "2024-06-04T13:39:11.426883Z",
     "iopub.status.idle": "2024-06-04T13:39:11.440703Z",
     "shell.execute_reply": "2024-06-04T13:39:11.439698Z"
    },
    "papermill": {
     "duration": 0.025824,
     "end_time": "2024-06-04T13:39:11.442731",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.416907",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "review_id                   0\n",
       "user_name                   1\n",
       "content                     0\n",
       "score                       0\n",
       "thumbs_up_count             0\n",
       "review_created_version    801\n",
       "at                          0\n",
       "app_version               801\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "195e9282",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.462496Z",
     "iopub.status.busy": "2024-06-04T13:39:11.462135Z",
     "iopub.status.idle": "2024-06-04T13:39:11.484213Z",
     "shell.execute_reply": "2024-06-04T13:39:11.483267Z"
    },
    "papermill": {
     "duration": 0.034531,
     "end_time": "2024-06-04T13:39:11.486350",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.451819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>score</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>4.4896</td>\n",
       "      <td>1.103274</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>0.4466</td>\n",
       "      <td>11.621026</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>744.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count    mean        std  min  25%  50%  75%    max\n",
       "score            10000.0  4.4896   1.103274  1.0  5.0  5.0  5.0    5.0\n",
       "thumbs_up_count  10000.0  0.4466  11.621026  0.0  0.0  0.0  0.0  744.0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "41cdd45d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.507373Z",
     "iopub.status.busy": "2024-06-04T13:39:11.506462Z",
     "iopub.status.idle": "2024-06-04T13:39:11.529022Z",
     "shell.execute_reply": "2024-06-04T13:39:11.528151Z"
    },
    "papermill": {
     "duration": 0.035563,
     "end_time": "2024-06-04T13:39:11.531366",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.495803",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3e1afbe1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.553229Z",
     "iopub.status.busy": "2024-06-04T13:39:11.552351Z",
     "iopub.status.idle": "2024-06-04T13:39:11.566493Z",
     "shell.execute_reply": "2024-06-04T13:39:11.565662Z"
    },
    "papermill": {
     "duration": 0.027667,
     "end_time": "2024-06-04T13:39:11.568466",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.540799",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "566a7174",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.588987Z",
     "iopub.status.busy": "2024-06-04T13:39:11.588597Z",
     "iopub.status.idle": "2024-06-04T13:39:11.595093Z",
     "shell.execute_reply": "2024-06-04T13:39:11.594023Z"
    },
    "papermill": {
     "duration": 0.019442,
     "end_time": "2024-06-04T13:39:11.597211",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.577769",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9168, 8)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "43174dd5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.617720Z",
     "iopub.status.busy": "2024-06-04T13:39:11.617370Z",
     "iopub.status.idle": "2024-06-04T13:39:11.630334Z",
     "shell.execute_reply": "2024-06-04T13:39:11.629367Z"
    },
    "papermill": {
     "duration": 0.025728,
     "end_time": "2024-06-04T13:39:11.632387",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.606659",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_id</th>\n",
       "      <th>user_name</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>at</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>42990</th>\n",
       "      <td>57f5a7ef-98ea-4af5-bdc1-78777ff36d1d</td>\n",
       "      <td>AXEL</td>\n",
       "      <td>enable to star chat responses for quick access...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.010</td>\n",
       "      <td>2024-01-18 13:54:27</td>\n",
       "      <td>1.2024.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26936</th>\n",
       "      <td>082f70d9-ebc1-4926-bea0-f20520531b29</td>\n",
       "      <td>S Ramalakshmi</td>\n",
       "      <td>it is very poor on generating special cases in...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>2024-04-25 04:58:27</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84761</th>\n",
       "      <td>0bb658d1-ec5b-47a5-9e84-1234d1127952</td>\n",
       "      <td>Tarachand</td>\n",
       "      <td>its not an app</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0022</td>\n",
       "      <td>2023-07-26 12:09:55</td>\n",
       "      <td>1.0.0022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57256</th>\n",
       "      <td>66b836e5-cacf-4249-b869-ecd0ed9f2f45</td>\n",
       "      <td>Kailas Kartik</td>\n",
       "      <td>Amazing and wonderful!</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2023-12-25 04:32:03</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93352</th>\n",
       "      <td>a10377a8-f930-4d3f-89e8-46203540cd0d</td>\n",
       "      <td>Nambi Raj</td>\n",
       "      <td>🙂</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>2024-04-30 14:56:57</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  review_id      user_name  \\\n",
       "42990  57f5a7ef-98ea-4af5-bdc1-78777ff36d1d           AXEL   \n",
       "26936  082f70d9-ebc1-4926-bea0-f20520531b29  S Ramalakshmi   \n",
       "84761  0bb658d1-ec5b-47a5-9e84-1234d1127952      Tarachand   \n",
       "57256  66b836e5-cacf-4249-b869-ecd0ed9f2f45  Kailas Kartik   \n",
       "93352  a10377a8-f930-4d3f-89e8-46203540cd0d      Nambi Raj   \n",
       "\n",
       "                                                 content  score  \\\n",
       "42990  enable to star chat responses for quick access...      4   \n",
       "26936  it is very poor on generating special cases in...      1   \n",
       "84761                                     its not an app      1   \n",
       "57256                             Amazing and wonderful!      5   \n",
       "93352                                                  🙂      4   \n",
       "\n",
       "       thumbs_up_count review_created_version                   at app_version  \n",
       "42990                0             1.2024.010  2024-01-18 13:54:27  1.2024.010  \n",
       "26936                0             1.2024.108  2024-04-25 04:58:27  1.2024.108  \n",
       "84761                0               1.0.0022  2023-07-26 12:09:55    1.0.0022  \n",
       "57256                0             1.2023.314  2023-12-25 04:32:03  1.2023.314  \n",
       "93352                0             1.2024.108  2024-04-30 14:56:57  1.2024.108  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3f949e04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.653200Z",
     "iopub.status.busy": "2024-06-04T13:39:11.652819Z",
     "iopub.status.idle": "2024-06-04T13:39:11.661918Z",
     "shell.execute_reply": "2024-06-04T13:39:11.660857Z"
    },
    "papermill": {
     "duration": 0.022066,
     "end_time": "2024-06-04T13:39:11.664107",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.642041",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "score\n",
       "5    7031\n",
       "4    1092\n",
       "1     516\n",
       "3     394\n",
       "2     135\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "63a92cb1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.685354Z",
     "iopub.status.busy": "2024-06-04T13:39:11.684723Z",
     "iopub.status.idle": "2024-06-04T13:39:11.693103Z",
     "shell.execute_reply": "2024-06-04T13:39:11.692160Z"
    },
    "papermill": {
     "duration": 0.021377,
     "end_time": "2024-06-04T13:39:11.695211",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.673834",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "thumbs_up_count\n",
       "0      8806\n",
       "1       217\n",
       "2        59\n",
       "3        16\n",
       "4        11\n",
       "5         8\n",
       "9         4\n",
       "12        4\n",
       "10        3\n",
       "6         3\n",
       "69        2\n",
       "28        2\n",
       "54        2\n",
       "68        2\n",
       "30        2\n",
       "16        2\n",
       "13        2\n",
       "8         1\n",
       "11        1\n",
       "744       1\n",
       "480       1\n",
       "22        1\n",
       "17        1\n",
       "34        1\n",
       "66        1\n",
       "231       1\n",
       "7         1\n",
       "511       1\n",
       "31        1\n",
       "186       1\n",
       "15        1\n",
       "35        1\n",
       "310       1\n",
       "168       1\n",
       "23        1\n",
       "20        1\n",
       "26        1\n",
       "60        1\n",
       "216       1\n",
       "55        1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['thumbs_up_count'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3b069e0",
   "metadata": {
    "papermill": {
     "duration": 0.009658,
     "end_time": "2024-06-04T13:39:11.714625",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.704967",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Viz ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8ed990a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:11.735763Z",
     "iopub.status.busy": "2024-06-04T13:39:11.735365Z",
     "iopub.status.idle": "2024-06-04T13:39:12.236606Z",
     "shell.execute_reply": "2024-06-04T13:39:12.235513Z"
    },
    "papermill": {
     "duration": 0.514461,
     "end_time": "2024-06-04T13:39:12.238808",
     "exception": false,
     "start_time": "2024-06-04T13:39:11.724347",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.hist(figsize=(15,5))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "19043985",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.261479Z",
     "iopub.status.busy": "2024-06-04T13:39:12.261081Z",
     "iopub.status.idle": "2024-06-04T13:39:12.532000Z",
     "shell.execute_reply": "2024-06-04T13:39:12.530850Z"
    },
    "papermill": {
     "duration": 0.285145,
     "end_time": "2024-06-04T13:39:12.534432",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.249287",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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0FCtW7dOzz//vEJDQ5WQkCCn06ny8nK355WUlCgxMVGSlJiY2ODurPrH9ccAAID/Xh6FnS5dushqtTbYb7Va3S4wbsqoUaNUUFCgnTt3urYhQ4Zo/Pjxrj+HhYUpNzfX9Zx9+/apsLBQNptNkmSz2VRQUOB2zVBOTo4sFotSUlI86R4AADARj1Y9f+SRRzR9+nT9+c9/dp09KS4u1owZM/Too482+3U6duyoiy66yG1fhw4d1KVLF9f+SZMmafr06ercubMsFoumTp0qm82mYcOGSZJGjx6tlJQUTZgwQQsWLFBxcbEeeeQRZWdn+/0CpAAAoO15FHYWL16sAwcOqHv37urevbukHyb2i4iI0JEjR/Tyyy+7jt2+fXurCly4cKGCg4OVmZmp6upqpaen66WXXnK1h4SEaOXKlZo8ebJsNps6dOigrKwszZs3r1XvCwAAzCHI8GC1zrlz5zb72Mcee6ylL9/umrtEPAAA8B/N/f72KOyYDWEHAIDA09zvb79aGwsAAMDbPLpmJzg4+KzrXtXW1npcEAAAgDd5FHaWL1/u9rimpkY7duzQ66+/3qLreQAAANqaV6/ZefPNN/X222/r73//u7desl1wzQ4AAIHHJ9fsDBs2zG0CQAAAAF/zWtg5efKknn/+eZ1zzjneekkAAIBW8+ianU6dOrldoGwYhioqKhQdHa033njDa8UBAAC0lkdh57nnnnN7HBwcrK5du2ro0KEtWhsLAACgrXkUdrKyspp13N1336158+YpLi7Ok7cBAABotTadVPCNN96Qw+Foy7cAAAA4qzYNO6xEAQAAfI3lIgAAgKkRdgAAgKkRdgAAgKkRdgAAgKm1adi57bbbWGsKAAD4lEdhZ/Xq1frss89cj1988UUNHDhQv/zlL/X999+79i9evJg5dgAAgE95FHZmzJjhmj+noKBA999/v6655hodPHhQ06dP92qBAAAAreHRDMoHDx5USkqKJOn999/XtddeqyeffFLbt2/XNddc49UCAQAAWsOjMzvh4eE6ceKEJOmTTz7R6NGjJUmdO3dmxmQAAOBXPDqzc/nll2v69OkaPny4tmzZorfffluS9O9//1vnnnuuVwsEAABoDY/O7LzwwgsKDQ3Ve++9p8WLF+ucc86RJK1atUpXX321VwsEAABojSCDBazkcDhktVplt9u5VR4AgADR3O9vj37GkqTa2lotX75ce/fulST169dPY8eOVWioxy8JAADgdR4lkz179ui6665TSUmJ+vTpI0l6+umn1bVrV61YsUIXXXSRV4sEAADwlEfX7Nxxxx266KKL9O2332r79u3avn27Dh06pNTUVN11113erhEAAMBjHp3Z2blzp7Zt26ZOnTq59nXq1Em//e1vdemll3qtOAAAgNby6MzOhRdeqJKSkgb7S0tL1atXr1YXBQAA4C3NPrPz48kC58+fr3vuuUdz5szRsGHDJEmff/655s2bp6efftr7VQIAgIBjP+FUWaVTjqoaWaLCFNchXNbo8Havo9m3ngcHBysoKMj1uP5p9ft+/Li2ttbbdbYpbj0HAMC7ispP6qH3d2nD/jLXvhG94/RUZqqSYqO88h5ev/X8008/9UphAADA3OwnnA2CjiSt31+mme/v0qJxg9r1DE+zw87IkSPbsg4AAGASZZXOBkGn3vr9ZSqrdPpn2DldVVWVdu3apdLSUtXV1bm1/fznP291YQAAIDA5qmrO2l7RRLu3eXQ31urVq9W9e3cNGzZMP//5zzV27FjXdsMNNzT7dRYvXqzU1FRZLBZZLBbZbDatWrXK1V5VVaXs7Gx16dJFMTExyszMbHAXWGFhoTIyMhQdHa34+HjNmDFDp06d8qRbAADACyyRYWdt79hEu7d5FHamTp2qm2++WYcPH1ZdXZ3b1pKLk88991w99dRTys/P17Zt23TVVVfp+uuv1549eyRJ9913n1asWKF3331X69atU1FRkW688UbX82tra5WRkSGn06lNmzbp9ddf17JlyzR79mxPugUAALwgLiZcI3rHNdo2onec4mLa944sjxYCtVgs2rFjhy644AKvF9S5c2f97ne/00033aSuXbvqzTff1E033SRJ+vLLL9WvXz/l5eVp2LBhWrVqla699loVFRUpISFBkrRkyRI99NBDOnLkiMLDG//LrK6uVnV1teuxw+FQcnIyd2MBAOAlReUnNfP9XVp/2t1YT2emqpu/3o31YzfddJPWrl3r1bBTW1urd999V8ePH5fNZlN+fr5qamqUlpbmOqZv377q3r27K+zk5eVpwIABrqAjSenp6Zo8ebL27NmjQYMGNfpe8+fP19y5c71WOwAAcJcUG6VF4waprNKpiqoadYwMU1yMb+bZ8SjsvPDCC7r55pu1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wJz8JuzU1dVp2rRpGj58uC666CJJUnFxscLDwxUbG+t2bEJCgoqLi13H/Djo1LfXtzVm/vz5slqtri05OdnLvQEAAP7Cb8JOdna2du/erbfeeqvN32vWrFmy2+2u7dChQ23+ngAAwDf8YrmIKVOmaOXKlVq/fr3OPfdc1/7ExEQ5nU6Vl5e7nd0pKSlRYmKi65gtW7a4vV793Vr1x5wuIiJCERERXu4FAMDb7CecKqt0ylFVI0tUmOI6hPvsIlcELp+e2TEMQ1OmTNHy5cu1Zs0a9ezZ06198ODBCgsLU25urmvfvn37VFhYKJvNJkmy2WwqKChQaen/rb+Rk5Mji8WilJSU9ukIAMDrispPaspfd2jUs+t0w0ubNOqZdZr61x0qKj/p69IQYHx6N9bdd9+tN998U3//+9/Vp08f136r1aqoqB/uw588ebL++c9/atmyZbJYLJo6daokadOmTZJ+uPV84MCBSkpK0oIFC1RcXKwJEybojjvu0JNPPtmsOrgbCwD8i/2EU1P+ukMb9pc1aBvRO06Lxg3iDA+a/f3t05+xFi9eLEm64oor3PYvXbpUv/71ryVJCxcuVHBwsDIzM1VdXa309HS99NJLrmNDQkK0cuVKTZ48WTabTR06dFBWVpbmzZvXXt0AAHhZWaWz0aAjSev3l7X7qtkIbH41z46vcGYHAPzLjsLvdcNLm87Y/sHdl2lg907tWBH8UUDOswMAgOR/q2YjsBF2AAB+x99WzUZgI+wAAPyOv62ajcDmF/PsAP6I+T0A36pfNbus0qmKqhp1jAxTXAyfQ7QcYQdoRFH5ST30/i63u0FG9I7TU5mpSoqN8mFlwH8XazThBq3Hz1jAaewnnA2CjvTD7a4z398l+wmnjyoDAHiCsAOcpjnzewAAAgdhBziNo6rmrO0VTbQDAPwLYQc4DfN7AIC5EHaA0zC/BwCYC2EHOA3zewCAuXDrOdAI5vcAAPMg7ABnwPweAGAO/IwFAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMjbADAABMzadhZ/369bruuuuUlJSkoKAgffDBB27thmFo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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x = 'score', y='thumbs_up_count',data=df)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4087fac4",
   "metadata": {
    "papermill": {
     "duration": 0.011302,
     "end_time": "2024-06-04T13:39:12.557542",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.546240",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Feature Engineering ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8dcd86cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.581011Z",
     "iopub.status.busy": "2024-06-04T13:39:12.580273Z",
     "iopub.status.idle": "2024-06-04T13:39:12.587712Z",
     "shell.execute_reply": "2024-06-04T13:39:12.586764Z"
    },
    "papermill": {
     "duration": 0.021302,
     "end_time": "2024-06-04T13:39:12.589656",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.568354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['review_id','user_name','at'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fb49d2f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.612613Z",
     "iopub.status.busy": "2024-06-04T13:39:12.612251Z",
     "iopub.status.idle": "2024-06-04T13:39:12.623258Z",
     "shell.execute_reply": "2024-06-04T13:39:12.622332Z"
    },
    "papermill": {
     "duration": 0.024845,
     "end_time": "2024-06-04T13:39:12.625267",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.600422",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>42990</th>\n",
       "      <td>enable to star chat responses for quick access...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.010</td>\n",
       "      <td>1.2024.010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26936</th>\n",
       "      <td>it is very poor on generating special cases in...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84761</th>\n",
       "      <td>its not an app</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0022</td>\n",
       "      <td>1.0.0022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57256</th>\n",
       "      <td>Amazing and wonderful!</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93352</th>\n",
       "      <td>🙂</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.108</td>\n",
       "      <td>1.2024.108</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content  score  \\\n",
       "42990  enable to star chat responses for quick access...      4   \n",
       "26936  it is very poor on generating special cases in...      1   \n",
       "84761                                     its not an app      1   \n",
       "57256                             Amazing and wonderful!      5   \n",
       "93352                                                  🙂      4   \n",
       "\n",
       "       thumbs_up_count review_created_version app_version  \n",
       "42990                0             1.2024.010  1.2024.010  \n",
       "26936                0             1.2024.108  1.2024.108  \n",
       "84761                0               1.0.0022    1.0.0022  \n",
       "57256                0             1.2023.314  1.2023.314  \n",
       "93352                0             1.2024.108  1.2024.108  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bcef1d3",
   "metadata": {
    "papermill": {
     "duration": 0.010739,
     "end_time": "2024-06-04T13:39:12.646924",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.636185",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Encoding ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e1eb4e79",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.670976Z",
     "iopub.status.busy": "2024-06-04T13:39:12.670072Z",
     "iopub.status.idle": "2024-06-04T13:39:12.678335Z",
     "shell.execute_reply": "2024-06-04T13:39:12.677372Z"
    },
    "papermill": {
     "duration": 0.022706,
     "end_time": "2024-06-04T13:39:12.680413",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.657707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "le = LabelEncoder()\n",
    "df['review_created_version'] = le.fit_transform(df['review_created_version'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f37582c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.704958Z",
     "iopub.status.busy": "2024-06-04T13:39:12.704083Z",
     "iopub.status.idle": "2024-06-04T13:39:12.713813Z",
     "shell.execute_reply": "2024-06-04T13:39:12.712851Z"
    },
    "papermill": {
     "duration": 0.024129,
     "end_time": "2024-06-04T13:39:12.716075",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.691946",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "oe = OrdinalEncoder()\n",
    "df['app_version'] = oe.fit_transform(df[['app_version']]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bcdfa525",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.740152Z",
     "iopub.status.busy": "2024-06-04T13:39:12.739282Z",
     "iopub.status.idle": "2024-06-04T13:39:12.750541Z",
     "shell.execute_reply": "2024-06-04T13:39:12.749619Z"
    },
    "papermill": {
     "duration": 0.025505,
     "end_time": "2024-06-04T13:39:12.752680",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.727175",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>42990</th>\n",
       "      <td>enable to star chat responses for quick access...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>32</td>\n",
       "      <td>32.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26936</th>\n",
       "      <td>it is very poor on generating special cases in...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>84761</th>\n",
       "      <td>its not an app</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57256</th>\n",
       "      <td>Amazing and wonderful!</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93352</th>\n",
       "      <td>🙂</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>45.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content  score  \\\n",
       "42990  enable to star chat responses for quick access...      4   \n",
       "26936  it is very poor on generating special cases in...      1   \n",
       "84761                                     its not an app      1   \n",
       "57256                             Amazing and wonderful!      5   \n",
       "93352                                                  🙂      4   \n",
       "\n",
       "       thumbs_up_count  review_created_version  app_version  \n",
       "42990                0                      32         32.0  \n",
       "26936                0                      45         45.0  \n",
       "84761                0                       1          1.0  \n",
       "57256                0                      24         24.0  \n",
       "93352                0                      45         45.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee501a22",
   "metadata": {
    "papermill": {
     "duration": 0.011196,
     "end_time": "2024-06-04T13:39:12.775345",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.764149",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Applying NLP to Analyze Content ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e7367f8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.799703Z",
     "iopub.status.busy": "2024-06-04T13:39:12.799343Z",
     "iopub.status.idle": "2024-06-04T13:39:12.807855Z",
     "shell.execute_reply": "2024-06-04T13:39:12.806915Z"
    },
    "papermill": {
     "duration": 0.023368,
     "end_time": "2024-06-04T13:39:12.810090",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.786722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990    enable to star chat responses for quick access...\n",
       "26936    it is very poor on generating special cases in...\n",
       "84761                                       its not an app\n",
       "57256                               Amazing and wonderful!\n",
       "93352                                                    🙂\n",
       "                               ...                        \n",
       "42590    Beware!! Malware, this app can NOT be uninstal...\n",
       "78319                  Very good but need more improvement\n",
       "77972                                   appreciate Ai nice\n",
       "95255                                                 nice\n",
       "59924    it have some issues.... but it's ok,,, one can...\n",
       "Name: content, Length: 9168, dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['content']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "90a88cc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.835050Z",
     "iopub.status.busy": "2024-06-04T13:39:12.834657Z",
     "iopub.status.idle": "2024-06-04T13:39:12.848502Z",
     "shell.execute_reply": "2024-06-04T13:39:12.847558Z"
    },
    "papermill": {
     "duration": 0.028621,
     "end_time": "2024-06-04T13:39:12.850570",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.821949",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990    enable to star chat responses for quick access...\n",
       "26936    it is very poor on generating special cases in...\n",
       "84761                                       its not an app\n",
       "57256                               amazing and wonderful!\n",
       "93352                                                    🙂\n",
       "                               ...                        \n",
       "42590    beware!! malware, this app can not be uninstal...\n",
       "78319                  very good but need more improvement\n",
       "77972                                   appreciate ai nice\n",
       "95255                                                 nice\n",
       "59924    it have some issues.... but it's ok,,, one can...\n",
       "Name: content, Length: 9168, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['content'] = df['content'].str.lower()\n",
    "df['content']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "662f2264",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.875287Z",
     "iopub.status.busy": "2024-06-04T13:39:12.874916Z",
     "iopub.status.idle": "2024-06-04T13:39:12.896056Z",
     "shell.execute_reply": "2024-06-04T13:39:12.894973Z"
    },
    "papermill": {
     "duration": 0.036058,
     "end_time": "2024-06-04T13:39:12.898362",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.862304",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990     enable to star chat responses for quick access...\n",
       "26936     it is very poor on generating special cases in...\n",
       "84761                                        its not an app\n",
       "57256                                amazing and wonderful!\n",
       "93352                                                     🙂\n",
       "93065                                               amazing\n",
       "25225     it's really amazing. i can't believe how versa...\n",
       "93740                                            very good.\n",
       "57495     it's really good however the gore factor for c...\n",
       "96731                                               best ai\n",
       "85448                                           good ai bot\n",
       "38354      it help students it make much more better before\n",
       "52068                        useful app for me in studies 😃\n",
       "67180                               this is the best google\n",
       "109963                                          life saver!\n",
       "101783                                incredible technology\n",
       "31446     nice application gives good information as you...\n",
       "119502                                                ওয়াও\n",
       "25870     this app is totally wastage of time. most of t...\n",
       "14735                                             good app!\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def remove_html_tags(text):\n",
    "    clean_text = re.sub('<.*>', '', text)\n",
    "    return clean_text\n",
    "\n",
    "df['content'] = df['content'].apply(remove_html_tags)\n",
    "df['content'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "6c786387",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.923670Z",
     "iopub.status.busy": "2024-06-04T13:39:12.923301Z",
     "iopub.status.idle": "2024-06-04T13:39:12.960420Z",
     "shell.execute_reply": "2024-06-04T13:39:12.959396Z"
    },
    "papermill": {
     "duration": 0.052377,
     "end_time": "2024-06-04T13:39:12.962587",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.910210",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990     enable to star chat responses for quick access...\n",
       "26936     it is very poor on generating special cases in...\n",
       "84761                                        its not an app\n",
       "57256                                amazing and wonderful!\n",
       "93352                                                     🙂\n",
       "93065                                               amazing\n",
       "25225     it's really amazing. i can't believe how versa...\n",
       "93740                                            very good.\n",
       "57495     it's really good however the gore factor for c...\n",
       "96731                                               best ai\n",
       "85448                                           good ai bot\n",
       "38354      it help students it make much more better before\n",
       "52068                        useful app for me in studies 😃\n",
       "67180                               this is the best google\n",
       "109963                                          life saver!\n",
       "101783                                incredible technology\n",
       "31446     nice application gives good information as you...\n",
       "119502                                                ওয়াও\n",
       "25870     this app is totally wastage of time. most of t...\n",
       "14735                                             good app!\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def remove_urls(text):\n",
    "    url_pattern = re.compile(r'https?://\\S+|www\\.\\S+')\n",
    "    clean_text = re.sub(url_pattern, '', text)\n",
    "    return clean_text\n",
    "\n",
    "df['content'] = df['content'].apply(remove_urls)\n",
    "df['content'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1de3dcc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:12.988257Z",
     "iopub.status.busy": "2024-06-04T13:39:12.987889Z",
     "iopub.status.idle": "2024-06-04T13:39:13.038205Z",
     "shell.execute_reply": "2024-06-04T13:39:13.037252Z"
    },
    "papermill": {
     "duration": 0.065444,
     "end_time": "2024-06-04T13:39:13.040180",
     "exception": false,
     "start_time": "2024-06-04T13:39:12.974736",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990     enable to star chat responses for quick access...\n",
       "26936     it is very poor on generating special cases in...\n",
       "84761                                        its not an app\n",
       "57256                                 amazing and wonderful\n",
       "93352                                                     🙂\n",
       "93065                                               amazing\n",
       "25225     its really amazing i cant believe how versatil...\n",
       "93740                                             very good\n",
       "57495     its really good however the gore factor for ch...\n",
       "96731                                               best ai\n",
       "85448                                           good ai bot\n",
       "38354      it help students it make much more better before\n",
       "52068                        useful app for me in studies 😃\n",
       "67180                               this is the best google\n",
       "109963                                           life saver\n",
       "101783                                incredible technology\n",
       "31446     nice application gives good information as you...\n",
       "119502                                                ওয়াও\n",
       "25870     this app is totally wastage of time most of th...\n",
       "14735                                              good app\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def remove_punc(text):\n",
    "    punc = string.punctuation\n",
    "    clean_text = text.translate(str.maketrans('','', punc))\n",
    "    return clean_text\n",
    "\n",
    "df['content'] = df['content'].apply(remove_punc)\n",
    "df['content'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "fce2d3db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:39:13.065782Z",
     "iopub.status.busy": "2024-06-04T13:39:13.065417Z",
     "iopub.status.idle": "2024-06-04T13:39:13.115416Z",
     "shell.execute_reply": "2024-06-04T13:39:13.114467Z"
    },
    "papermill": {
     "duration": 0.065396,
     "end_time": "2024-06-04T13:39:13.117581",
     "exception": false,
     "start_time": "2024-06-04T13:39:13.052185",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42990     enable to star chat responses for quick access...\n",
       "26936     it is very poor on generating special cases in...\n",
       "84761                                        its not an app\n",
       "57256                                 amazing and wonderful\n",
       "93352                                                     🙂\n",
       "93065                                               amazing\n",
       "25225     its really amazing i cant believe how versatil...\n",
       "93740                                             very good\n",
       "57495     its really good however the gore factor for ch...\n",
       "96731                                               best ai\n",
       "85448                                           good ai bot\n",
       "38354      it help students it make much more better before\n",
       "52068                        useful app for me in studies 😃\n",
       "67180                               this is the best google\n",
       "109963                                           life saver\n",
       "101783                                incredible technology\n",
       "31446     nice application gives good information as you...\n",
       "119502                                                ওয়াও\n",
       "25870     this app is totally wastage of time most of th...\n",
       "14735                                              good app\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chat_words_mapping = {\n",
    "    \"lol\": \"laughing out loud\",\n",
    "    \"brb\": \"be right back\",\n",
    "    \"btw\": \"by the way\",\n",
    "    \"afk\": \"away from keyboard\",\n",
    "    \"rofl\": \"rolling on the floor laughing\",\n",
    "    \"ttyl\": \"talk to you later\",\n",
    "    \"np\": \"no problem\",\n",
    "    \"thx\": \"thanks\",\n",
    "    \"omg\": \"oh my god\",\n",
    "    \"idk\": \"I don't know\",\n",
    "    \"np\": \"no problem\",\n",
    "    \"gg\": \"good game\",\n",
    "    \"g2g\": \"got to go\",\n",
    "    \"b4\": \"before\",\n",
    "    \"cu\": \"see you\",\n",
    "    \"yw\": \"you're welcome\",\n",
    "    \"wtf\": \"what the f*ck\",\n",
    "    \"imho\": \"in my humble opinion\",\n",
    "    \"jk\": \"just kidding\",\n",
    "    \"gf\": \"girlfriend\",\n",
    "    \"bf\": \"boyfriend\",\n",
    "    \"u\": \"you\",\n",
    "    \"r\": \"are\",\n",
    "    \"2\": \"to\",\n",
    "    \"4\": \"for\",\n",
    "    \"b\": \"be\",\n",
    "    \"c\": \"see\",\n",
    "    \"y\": \"why\",\n",
    "    \"tho\": \"though\",\n",
    "    \"smh\": \"shaking my head\",\n",
    "    \"lolz\": \"laughing out loud\",\n",
    "    \"h8\": \"hate\",\n",
    "    \"luv\": \"love\",\n",
    "    \"pls\": \"please\",\n",
    "    \"sry\": \"sorry\",\n",
    "    \"tbh\": \"to be honest\",\n",
    "    \"omw\": \"on my way\",\n",
    "    \"omw2syg\": \"on my way to see your girlfriend\",\n",
    "}\n",
    "\n",
    "def expand_chat_words(text):\n",
    "    words = text.split()\n",
    "    expanded_words = [chat_words_mapping.get(word.lower(), word) for word in words]\n",
    "    return ' '.join(expanded_words)\n",
    "\n",
    "df['content'] = df['content'].apply(expand_chat_words)\n",
    "df['content'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "03b8ff14",
   "metadata": {
    "papermill": {
     "duration": 0.012464,
     "end_time": "2024-06-04T13:39:13.142431",
     "exception": false,
     "start_time": "2024-06-04T13:39:13.129967",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4997049,
     "sourceId": 8598172,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 38.992699,
   "end_time": "2024-06-04T13:39:15.883855",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-04T13:38:36.891156",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
