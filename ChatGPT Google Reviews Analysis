{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6bdbaef9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.008026,
     "end_time": "2024-06-04T13:20:51.932609",
     "exception": false,
     "start_time": "2024-06-04T13:20:51.924583",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## ChatGPT Google Reviews Analysis ##"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96d03a7a",
   "metadata": {
    "papermill": {
     "duration": 0.007192,
     "end_time": "2024-06-04T13:20:51.947826",
     "exception": false,
     "start_time": "2024-06-04T13:20:51.940634",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Please upvote it if you are find this note book helpful. My deepest thanks for your all! ###\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6f547568",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:20:51.965673Z",
     "iopub.status.busy": "2024-06-04T13:20:51.964819Z",
     "iopub.status.idle": "2024-06-04T13:21:31.248278Z",
     "shell.execute_reply": "2024-06-04T13:21:31.247144Z"
    },
    "papermill": {
     "duration": 39.295471,
     "end_time": "2024-06-04T13:21:31.251091",
     "exception": false,
     "start_time": "2024-06-04T13:20:51.955620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-04 13:21:20.457722: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-04 13:21:20.457852: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-04 13:21:20.614323: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import re\n",
    "import string\n",
    "import emoji\n",
    "import nltk\n",
    "import spacy\n",
    "from tqdm import tqdm\n",
    "from nltk.corpus import stopwords\n",
    "from gensim.models import Word2Vec\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n",
    "from sklearn.preprocessing import MinMaxScaler, LabelEncoder, OrdinalEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0172ba9c",
   "metadata": {
    "papermill": {
     "duration": 0.007389,
     "end_time": "2024-06-04T13:21:31.266743",
     "exception": false,
     "start_time": "2024-06-04T13:21:31.259354",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Importing Data ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6c339608",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:31.284358Z",
     "iopub.status.busy": "2024-06-04T13:21:31.283635Z",
     "iopub.status.idle": "2024-06-04T13:21:32.166797Z",
     "shell.execute_reply": "2024-06-04T13:21:32.165702Z"
    },
    "papermill": {
     "duration": 0.894713,
     "end_time": "2024-06-04T13:21:32.169089",
     "exception": false,
     "start_time": "2024-06-04T13:21:31.274376",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/2635146516.py:1: DtypeWarning: Columns (5,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')\n"
     ]
    }
   ],
   "source": [
    "dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b618b505",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.186526Z",
     "iopub.status.busy": "2024-06-04T13:21:32.186134Z",
     "iopub.status.idle": "2024-06-04T13:21:32.208937Z",
     "shell.execute_reply": "2024-06-04T13:21:32.207814Z"
    },
    "papermill": {
     "duration": 0.034041,
     "end_time": "2024-06-04T13:21:32.211203",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.177162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>b4d0887a-d493-4e0f-8740-ad29cc2cafa5</td>\n",
       "      <td>Zappi</td>\n",
       "      <td>the apps works great! the speech to text is re...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 22:00:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>852c8123-ea73-4a8d-8d78-63221a882e56</td>\n",
       "      <td>soufiane taku</td>\n",
       "      <td>amazing</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.139</td>\n",
       "      <td>2024-06-02 22:00:34</td>\n",
       "      <td>1.2024.139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9166feae-db4e-45f8-a77f-61a15ad0c092</td>\n",
       "      <td>jahinam singh</td>\n",
       "      <td>very good</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:59:39</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2a8bda00-9a39-4c8d-b979-412b7cd5db66</td>\n",
       "      <td>Nicolai West</td>\n",
       "      <td>you don't need Google u need chat gpy</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:56:36</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>884a3e77-1579-44b7-b17c-1eeb19d51195</td>\n",
       "      <td>Ride Ninja</td>\n",
       "      <td>مك</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:54:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               reviewId       userName  \\\n",
       "0  b4d0887a-d493-4e0f-8740-ad29cc2cafa5          Zappi   \n",
       "1  852c8123-ea73-4a8d-8d78-63221a882e56  soufiane taku   \n",
       "2  9166feae-db4e-45f8-a77f-61a15ad0c092  jahinam singh   \n",
       "3  2a8bda00-9a39-4c8d-b979-412b7cd5db66   Nicolai West   \n",
       "4  884a3e77-1579-44b7-b17c-1eeb19d51195     Ride Ninja   \n",
       "\n",
       "                                             content  score  thumbsUpCount  \\\n",
       "0  the apps works great! the speech to text is re...      5              0   \n",
       "1                                            amazing      5              0   \n",
       "2                                          very good      5              0   \n",
       "3              you don't need Google u need chat gpy      5              0   \n",
       "4                                                 مك      1              0   \n",
       "\n",
       "  reviewCreatedVersion                   at  appVersion  \n",
       "0           1.2024.143  2024-06-02 22:00:48  1.2024.143  \n",
       "1           1.2024.139  2024-06-02 22:00:34  1.2024.139  \n",
       "2           1.2024.143  2024-06-02 21:59:39  1.2024.143  \n",
       "3           1.2024.143  2024-06-02 21:56:36  1.2024.143  \n",
       "4           1.2024.143  2024-06-02 21:54:48  1.2024.143  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d7949abf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.229890Z",
     "iopub.status.busy": "2024-06-04T13:21:32.229154Z",
     "iopub.status.idle": "2024-06-04T13:21:32.236977Z",
     "shell.execute_reply": "2024-06-04T13:21:32.235903Z"
    },
    "papermill": {
     "duration": 0.019387,
     "end_time": "2024-06-04T13:21:32.239158",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.219771",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1076368"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2cfa23a5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.257446Z",
     "iopub.status.busy": "2024-06-04T13:21:32.256669Z",
     "iopub.status.idle": "2024-06-04T13:21:32.284448Z",
     "shell.execute_reply": "2024-06-04T13:21:32.283433Z"
    },
    "papermill": {
     "duration": 0.039514,
     "end_time": "2024-06-04T13:21:32.286797",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.247283",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17573</th>\n",
       "      <td>f6a65e29-0d50-4580-8d27-b693a8fef556</td>\n",
       "      <td>Aamir Khan</td>\n",
       "      <td>a helpful app for everyone around the world li...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-17 08:48:39</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47028</th>\n",
       "      <td>584818d0-6622-4e16-9e97-4d8e618b189f</td>\n",
       "      <td>Ganesh Subramanian</td>\n",
       "      <td>App is really light compared to the web versio...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0032</td>\n",
       "      <td>2023-08-19 15:21:16</td>\n",
       "      <td>1.0.0032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55422</th>\n",
       "      <td>00f1de17-1160-49be-a032-8213c188daab</td>\n",
       "      <td>Curious Hermit</td>\n",
       "      <td>Well done, very accomplished, and get fun</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2023-12-03 16:39:15</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88818</th>\n",
       "      <td>217ea683-d4b8-459c-9e7c-af9395c08fe0</td>\n",
       "      <td>Sreehan Gajula</td>\n",
       "      <td>this is very helpful app it is so good it is h...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-12 05:33:48</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57800</th>\n",
       "      <td>96996a7c-de4e-4de1-a13f-7686b0e2d1a5</td>\n",
       "      <td>Omololu Baruwa</td>\n",
       "      <td>it is helpful in explaining topics</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2024-01-07 15:01:28</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   reviewId            userName  \\\n",
       "17573  f6a65e29-0d50-4580-8d27-b693a8fef556          Aamir Khan   \n",
       "47028  584818d0-6622-4e16-9e97-4d8e618b189f  Ganesh Subramanian   \n",
       "55422  00f1de17-1160-49be-a032-8213c188daab      Curious Hermit   \n",
       "88818  217ea683-d4b8-459c-9e7c-af9395c08fe0      Sreehan Gajula   \n",
       "57800  96996a7c-de4e-4de1-a13f-7686b0e2d1a5      Omololu Baruwa   \n",
       "\n",
       "                                                 content  score  \\\n",
       "17573  a helpful app for everyone around the world li...      5   \n",
       "47028  App is really light compared to the web versio...      4   \n",
       "55422          Well done, very accomplished, and get fun      5   \n",
       "88818  this is very helpful app it is so good it is h...      5   \n",
       "57800                 it is helpful in explaining topics      4   \n",
       "\n",
       "       thumbsUpCount reviewCreatedVersion                   at  appVersion  \n",
       "17573              0           1.2024.122  2024-05-17 08:48:39  1.2024.122  \n",
       "47028              0             1.0.0032  2023-08-19 15:21:16    1.0.0032  \n",
       "55422              0           1.2023.314  2023-12-03 16:39:15  1.2023.314  \n",
       "88818              0           1.2024.122  2024-05-12 05:33:48  1.2024.122  \n",
       "57800              0           1.2023.314  2024-01-07 15:01:28  1.2023.314  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = dx.sample(10000)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ec1c5b62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.305606Z",
     "iopub.status.busy": "2024-06-04T13:21:32.304929Z",
     "iopub.status.idle": "2024-06-04T13:21:32.310783Z",
     "shell.execute_reply": "2024-06-04T13:21:32.309711Z"
    },
    "papermill": {
     "duration": 0.017964,
     "end_time": "2024-06-04T13:21:32.313055",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.295091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.rename(columns={'reviewId': 'review_id',\n",
    "                  'userName':'user_name',\n",
    "                  'thumbsUpCount': 'thumbs_up_count',\n",
    "                  'reviewCreatedVersion':'review_created_version',\n",
    "                  'appVersion':'app_version'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e38992f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.332320Z",
     "iopub.status.busy": "2024-06-04T13:21:32.331558Z",
     "iopub.status.idle": "2024-06-04T13:21:32.338309Z",
     "shell.execute_reply": "2024-06-04T13:21:32.337421Z"
    },
    "papermill": {
     "duration": 0.018837,
     "end_time": "2024-06-04T13:21:32.340360",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.321523",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['review_id', 'user_name', 'content', 'score', 'thumbs_up_count',\n",
       "       'review_created_version', 'at', 'app_version'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e7caaba6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.359922Z",
     "iopub.status.busy": "2024-06-04T13:21:32.359150Z",
     "iopub.status.idle": "2024-06-04T13:21:32.365781Z",
     "shell.execute_reply": "2024-06-04T13:21:32.364704Z"
    },
    "papermill": {
     "duration": 0.018597,
     "end_time": "2024-06-04T13:21:32.367990",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.349393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10000, 8)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a51df16b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.386927Z",
     "iopub.status.busy": "2024-06-04T13:21:32.386555Z",
     "iopub.status.idle": "2024-06-04T13:21:32.415254Z",
     "shell.execute_reply": "2024-06-04T13:21:32.414406Z"
    },
    "papermill": {
     "duration": 0.041565,
     "end_time": "2024-06-04T13:21:32.418095",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.376530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 10000 entries, 17573 to 80561\n",
      "Data columns (total 8 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   review_id               10000 non-null  object\n",
      " 1   user_name               10000 non-null  object\n",
      " 2   content                 10000 non-null  object\n",
      " 3   score                   10000 non-null  int64 \n",
      " 4   thumbs_up_count         10000 non-null  int64 \n",
      " 5   review_created_version  9187 non-null   object\n",
      " 6   at                      10000 non-null  object\n",
      " 7   app_version             9187 non-null   object\n",
      "dtypes: int64(2), object(6)\n",
      "memory usage: 703.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a31d20ab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.437463Z",
     "iopub.status.busy": "2024-06-04T13:21:32.436627Z",
     "iopub.status.idle": "2024-06-04T13:21:32.452614Z",
     "shell.execute_reply": "2024-06-04T13:21:32.450237Z"
    },
    "papermill": {
     "duration": 0.02814,
     "end_time": "2024-06-04T13:21:32.455027",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.426887",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "review_id                   0\n",
       "user_name                   0\n",
       "content                     0\n",
       "score                       0\n",
       "thumbs_up_count             0\n",
       "review_created_version    813\n",
       "at                          0\n",
       "app_version               813\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d03379a7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.481123Z",
     "iopub.status.busy": "2024-06-04T13:21:32.480550Z",
     "iopub.status.idle": "2024-06-04T13:21:32.501176Z",
     "shell.execute_reply": "2024-06-04T13:21:32.500421Z"
    },
    "papermill": {
     "duration": 0.032533,
     "end_time": "2024-06-04T13:21:32.503129",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.470596",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>score</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>4.4991</td>\n",
       "      <td>1.088355</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>0.3538</td>\n",
       "      <td>9.301198</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>695.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count    mean       std  min  25%  50%  75%    max\n",
       "score            10000.0  4.4991  1.088355  1.0  5.0  5.0  5.0    5.0\n",
       "thumbs_up_count  10000.0  0.3538  9.301198  0.0  0.0  0.0  0.0  695.0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "8641db6d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.523182Z",
     "iopub.status.busy": "2024-06-04T13:21:32.522554Z",
     "iopub.status.idle": "2024-06-04T13:21:32.544794Z",
     "shell.execute_reply": "2024-06-04T13:21:32.543964Z"
    },
    "papermill": {
     "duration": 0.03469,
     "end_time": "2024-06-04T13:21:32.546999",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.512309",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9e4cd37a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.566620Z",
     "iopub.status.busy": "2024-06-04T13:21:32.566198Z",
     "iopub.status.idle": "2024-06-04T13:21:32.579951Z",
     "shell.execute_reply": "2024-06-04T13:21:32.578928Z"
    },
    "papermill": {
     "duration": 0.026062,
     "end_time": "2024-06-04T13:21:32.582052",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.555990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0ad96f30",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.601859Z",
     "iopub.status.busy": "2024-06-04T13:21:32.600954Z",
     "iopub.status.idle": "2024-06-04T13:21:32.607374Z",
     "shell.execute_reply": "2024-06-04T13:21:32.606313Z"
    },
    "papermill": {
     "duration": 0.01848,
     "end_time": "2024-06-04T13:21:32.609388",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.590908",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9160, 8)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "5139b4da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.629215Z",
     "iopub.status.busy": "2024-06-04T13:21:32.628474Z",
     "iopub.status.idle": "2024-06-04T13:21:32.641408Z",
     "shell.execute_reply": "2024-06-04T13:21:32.640265Z"
    },
    "papermill": {
     "duration": 0.025222,
     "end_time": "2024-06-04T13:21:32.643577",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.618355",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_id</th>\n",
       "      <th>user_name</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>at</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17573</th>\n",
       "      <td>f6a65e29-0d50-4580-8d27-b693a8fef556</td>\n",
       "      <td>Aamir Khan</td>\n",
       "      <td>a helpful app for everyone around the world li...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-17 08:48:39</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47028</th>\n",
       "      <td>584818d0-6622-4e16-9e97-4d8e618b189f</td>\n",
       "      <td>Ganesh Subramanian</td>\n",
       "      <td>App is really light compared to the web versio...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0032</td>\n",
       "      <td>2023-08-19 15:21:16</td>\n",
       "      <td>1.0.0032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55422</th>\n",
       "      <td>00f1de17-1160-49be-a032-8213c188daab</td>\n",
       "      <td>Curious Hermit</td>\n",
       "      <td>Well done, very accomplished, and get fun</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2023-12-03 16:39:15</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88818</th>\n",
       "      <td>217ea683-d4b8-459c-9e7c-af9395c08fe0</td>\n",
       "      <td>Sreehan Gajula</td>\n",
       "      <td>this is very helpful app it is so good it is h...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-12 05:33:48</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57800</th>\n",
       "      <td>96996a7c-de4e-4de1-a13f-7686b0e2d1a5</td>\n",
       "      <td>Omololu Baruwa</td>\n",
       "      <td>it is helpful in explaining topics</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2024-01-07 15:01:28</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                  review_id           user_name  \\\n",
       "17573  f6a65e29-0d50-4580-8d27-b693a8fef556          Aamir Khan   \n",
       "47028  584818d0-6622-4e16-9e97-4d8e618b189f  Ganesh Subramanian   \n",
       "55422  00f1de17-1160-49be-a032-8213c188daab      Curious Hermit   \n",
       "88818  217ea683-d4b8-459c-9e7c-af9395c08fe0      Sreehan Gajula   \n",
       "57800  96996a7c-de4e-4de1-a13f-7686b0e2d1a5      Omololu Baruwa   \n",
       "\n",
       "                                                 content  score  \\\n",
       "17573  a helpful app for everyone around the world li...      5   \n",
       "47028  App is really light compared to the web versio...      4   \n",
       "55422          Well done, very accomplished, and get fun      5   \n",
       "88818  this is very helpful app it is so good it is h...      5   \n",
       "57800                 it is helpful in explaining topics      4   \n",
       "\n",
       "       thumbs_up_count review_created_version                   at app_version  \n",
       "17573                0             1.2024.122  2024-05-17 08:48:39  1.2024.122  \n",
       "47028                0               1.0.0032  2023-08-19 15:21:16    1.0.0032  \n",
       "55422                0             1.2023.314  2023-12-03 16:39:15  1.2023.314  \n",
       "88818                0             1.2024.122  2024-05-12 05:33:48  1.2024.122  \n",
       "57800                0             1.2023.314  2024-01-07 15:01:28  1.2023.314  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "85a8f064",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.663597Z",
     "iopub.status.busy": "2024-06-04T13:21:32.663182Z",
     "iopub.status.idle": "2024-06-04T13:21:32.672730Z",
     "shell.execute_reply": "2024-06-04T13:21:32.671622Z"
    },
    "papermill": {
     "duration": 0.022139,
     "end_time": "2024-06-04T13:21:32.674855",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.652716",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "score\n",
       "5    7041\n",
       "4    1106\n",
       "1     479\n",
       "3     381\n",
       "2     153\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3c12c008",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.695387Z",
     "iopub.status.busy": "2024-06-04T13:21:32.694742Z",
     "iopub.status.idle": "2024-06-04T13:21:32.703607Z",
     "shell.execute_reply": "2024-06-04T13:21:32.702436Z"
    },
    "papermill": {
     "duration": 0.0218,
     "end_time": "2024-06-04T13:21:32.705923",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.684123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "thumbs_up_count\n",
       "0      8821\n",
       "1       203\n",
       "2        48\n",
       "3        20\n",
       "5        12\n",
       "6         5\n",
       "4         5\n",
       "8         4\n",
       "10        3\n",
       "43        3\n",
       "11        3\n",
       "14        2\n",
       "13        2\n",
       "79        2\n",
       "21        2\n",
       "20        1\n",
       "18        1\n",
       "93        1\n",
       "55        1\n",
       "695       1\n",
       "39        1\n",
       "116       1\n",
       "105       1\n",
       "63        1\n",
       "371       1\n",
       "153       1\n",
       "12        1\n",
       "343       1\n",
       "9         1\n",
       "7         1\n",
       "15        1\n",
       "32        1\n",
       "19        1\n",
       "28        1\n",
       "45        1\n",
       "49        1\n",
       "25        1\n",
       "17        1\n",
       "168       1\n",
       "65        1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['thumbs_up_count'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5e2b94e",
   "metadata": {
    "papermill": {
     "duration": 0.009544,
     "end_time": "2024-06-04T13:21:32.725143",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.715599",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Viz ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2192d61f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:32.746567Z",
     "iopub.status.busy": "2024-06-04T13:21:32.745562Z",
     "iopub.status.idle": "2024-06-04T13:21:33.254536Z",
     "shell.execute_reply": "2024-06-04T13:21:33.253612Z"
    },
    "papermill": {
     "duration": 0.521869,
     "end_time": "2024-06-04T13:21:33.256637",
     "exception": false,
     "start_time": "2024-06-04T13:21:32.734768",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAABMsAAAHDCAYAAAA6Bp1oAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABc+ElEQVR4nO3deXxU1f3/8XcSkkkCTAJoti8hxo19p8IUF5SQiNGHltSKUo2KpdLQGtIvKK0ii4iiiGyCK7E/oQqtUAWEDCBQJCxGUtlEVBC/hSStECIgyZDc3x+5uTKEJRNmyDKv5+ORh8y5Z86cz+dM4sknd+4NMAzDEAAAAAAAAAAF1vUEAAAAAAAAgPqCYhkAAAAAAABgolgGAAAAAAAAmCiWAQAAAAAAACaKZQAAAAAAAICJYhkAAAAAAABgolgGAAAAAAAAmCiWAQAAAAAAACaKZQAAAAAAAICJYhkAAAAA+JmAgACNGDGirqfhpl+/furUqVNdTwMAKJYBAAAAQGO1ceNGjRs3TsXFxXU9FTQAvF+AShTLAAAAAKCR2rhxo8aPH0/xAzXC+wWoRLEMgF86fvx4XU8BAAAAAFAPUSwDUCd++OEHZWZm6oorrpDNZlNUVJQGDBigzz77zOqzefNm3XbbbWrRooWaNm2qLl26aPr06W7jrFmzRjfccIOaNm2qyMhI3Xnnndq9e7dbn3HjxikgIEC7du3SfffdpxYtWuj666+3jr/zzjvq2bOnwsLC1LJlSw0ePFjfffedbxMAAADgY+PGjdOoUaMkSYmJiQoICFBAQID2799v9VmyZIk6deokm82mjh07asWKFW5jPPjgg7riiivOOnZAQIBbW9V10BYtWqQOHTooLCxMDodD27dvlyS9+uqruvrqqxUaGqp+/fq5zeN0eXl5+vnPf66wsDAlJiZq7ty51frMnDlTHTt2VHh4uFq0aKFevXppwYIFNc7N2rVrFRAQoLVr17q179+/XwEBAcrOznbLQbNmzfTNN98oJSVFTZs2VVxcnCZMmCDDMGr8mlW8tcetzdqcb71r8n4B/EWTup4AAP/06KOP6m9/+5tGjBihDh066Pvvv9eGDRu0e/du9ejRQ06nU7fffrtiY2P12GOPKSYmRrt379bSpUv12GOPSZJWrVqlgQMH6sorr9S4ceP0448/aubMmerbt68+++yzapuHu+++W9dcc42effZZa2MzadIkPfXUU/rVr36lRx55RP/5z380c+ZM3Xjjjdq2bZsiIyMvcWYAAAC8Y9CgQfryyy/117/+VdOmTdNll10mSbr88sslSRs2bND777+v3/3ud2revLlmzJihtLQ0HThwQK1atarVa/7zn//UBx98oIyMDEnS5MmTdfvtt2v06NF65ZVX9Lvf/U5HjhzRlClT9PDDD2vNmjVuzz9y5Ihuu+02/epXv9K9996rhQsXavjw4QoJCdHDDz8sSXr99df1hz/8Qb/85S/12GOP6eTJk/r888+1efNm3XfffbVN13mVl5fr1ltvVZ8+fTRlyhStWLFCTz/9tE6dOqUJEybUeBxf7HFr6kLrfaH3C+BXDACoAxEREUZGRsZZj506dcpITEw0EhISjCNHjrgdq6iosP7drVs3Iyoqyvj++++ttn/9619GYGCg8cADD1htTz/9tCHJuPfee93G2r9/vxEUFGRMmjTJrX379u1GkyZNqrUDAAA0NC+88IIhydi3b59buyQjJCTE+Oqrr6y2f/3rX4YkY+bMmVZbenq6kZCQUG3cqv3VmWPabDa313r11VcNSUZMTIxRUlJitY8ZM6bavG666SZDkjF16lSrrbS01NrzlZWVGYZhGHfeeafRsWNHT9JQzccff2xIMj7++GO39n379hmSjHnz5llt6enphiTj97//vdVWUVFhpKamGiEhIcZ//vOfGr2mt/e4nq5NTdb7XO8XwN/wMUwAdSIyMlKbN2/WwYMHqx3btm2b9u3bp8zMzGpndlWdUn7o0CHl5+frwQcfVMuWLa3jXbp00YABA7R8+fJq4z766KNuj99//31VVFToV7/6lf773/9aXzExMbrmmmv08ccfeyFSAACA+ikpKUlXXXWV9bhLly6y2+365ptvaj1m//793c586t27tyQpLS1NzZs3r9Z+5ms1adJEv/3tb63HISEh+u1vf6uioiLl5eVJqtxH/t///Z+2bt1a63nWxogRI6x/V32ssaysTKtWrarR8321x60pX6w30FhRLANQJ6ZMmaIdO3YoPj5e1113ncaNG2f9j/rrr7+WJHXq1Omcz//2228lSW3btq12rH379vrvf/9b7SL+iYmJbo/37t0rwzB0zTXX6PLLL3f72r17t4qKii4qRgAAgPqsTZs21dpatGihI0eOeG3MiIgISVJ8fPxZ2898rbi4ODVt2tSt7dprr5Uk69pZjz/+uJo1a6brrrtO11xzjTIyMvTJJ5/Ues41ERgYqCuvvPK887oQX+1xa8oX6w00VlyzDECd+NWvfqUbbrhBixcvVk5Ojl544QU9//zzev/99332mmFhYW6PKyoqFBAQoI8++khBQUHV+jdr1sxncwEAAKhrZ9v/SHK7aP2ZF4qvUl5e7tGYNXmtmmrfvr327NmjpUuXasWKFfr73/+uV155RWPHjtX48eNrNIancdVH3lqb2qwB0NhxZhmAOhMbG6vf/e53WrJkifbt26dWrVpp0qRJ1unhO3bsOOdzExISJEl79uypduyLL77QZZddVu2vkme66qqrZBiGEhMTlZSUVO2rT58+FxEdAABA3TtXQaWmWrRooeLi4mrtVWdAedvBgwernTn15ZdfSpLbxzubNm2qe+65R/PmzdOBAweUmpqqSZMm6eTJkzV6nRYtWkhStdjOFVdFRUW1jyuebV7n4+09ri/W5mLfL0BjQbEMwCVXXl6uo0ePurVFRUUpLi5OpaWl6tGjhxITE/Xyyy9X2wBU/eUrNjZW3bp109tvv+3WZ8eOHcrJydFtt912wXkMGjRIQUFBGj9+fLW/qBmGoe+//752AQIAANQTVYWVsxVVauKqq67S0aNH9fnnn1tthw4d0uLFi70xvWpOnTqlV1991XpcVlamV199VZdffrl69uwpSdX2aCEhIerQoYMMw5DL5arR6yQkJCgoKEjr1693a3/llVfO+ZxZs2ZZ/zYMQ7NmzVJwcLD69+9fo9f09h7XF2tzse8XoLHgY5gALrkffvhBrVu31i9/+Ut17dpVzZo106pVq7R161ZNnTpVgYGBmjNnju644w5169ZNDz30kGJjY/XFF19o586dWrlypSTphRde0MCBA+VwODR06FDrttoREREaN27cBedx1VVX6ZlnntGYMWO0f/9+3XXXXWrevLn27dunxYsXa9iwYfrf//1fH2cDAADAd6oKTH/+8581ePBgBQcH64477qjx8wcPHqzHH39cv/jFL/SHP/xBJ06c0Jw5c3Tttdfqs88+8/p84+Li9Pzzz2v//v269tpr9d577yk/P1+vvfaagoODJUnJycmKiYlR3759FR0drd27d2vWrFlKTU11u4nA+UREROjuu+/WzJkzFRAQoKuu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DU3sVeGTtaw6exwAAADwhYsqlh07dkxff/217r//fvXs2VPBwcFavXq10tLSJEl79uzRgQMH5HA4JEkOh0OTJk1SUVGRoqKiJFX+xdlut6tDhw5Wn+XLl7u9jtPptMY4F5vNJpvNVq09ODjYZ79w+XLs+sIfYpT8I05/iFHyjziJsfGoaZyl5QGXYDa+4Yu19If3BgAAAOqORxf4/9///V+tW7dO+/fv18aNG/WLX/xCQUFBuvfeexUREaGhQ4cqKytLH3/8sfLy8vTQQw/J4XCoT58+kqTk5GR16NBB999/v/71r39p5cqVevLJJ5WRkWEVuh599FF98803Gj16tL744gu98sorWrhwoUaOHOn96AEAAAAAAIDTeHRm2f/93//p3nvv1ffff6/LL79c119/vTZt2qTLL79ckjRt2jQFBgYqLS1NpaWlSklJ0SuvvGI9PygoSEuXLtXw4cPlcDjUtGlTpaena8KECVafxMRELVu2TCNHjtT06dPVunVrvfHGG0pJSfFSyAAAAAAAAMDZeVQse/fdd897PDQ0VLNnz9bs2bPP2SchIaHaxyzP1K9fP23bts2TqQEAAAAAAAAXzaOPYQIAAAAAAACNGcUyAAAAAAAAwESxDAAAAAAAADBRLAMAAAAAAABMFMsAAAAAAAAAE8UyAAAAAAAAwESxDAAAAAAAADBRLAMAAAAAAABMFMsAAAAAAAAAE8UyAAAA+Ny///1v/frXv1arVq0UFhamzp0769NPP7WOG4ahsWPHKjY2VmFhYUpKStLevXvdxjh8+LCGDBkiu92uyMhIDR06VMeOHXPr8/nnn+uGG25QaGio4uPjNWXKlEsSHwAAaDwolgEAAMCnjhw5or59+yo4OFgfffSRdu3apalTp6pFixZWnylTpmjGjBmaO3euNm/erKZNmyolJUUnT560+gwZMkQ7d+6U0+nU0qVLtX79eg0bNsw6XlJSouTkZCUkJCgvL08vvPCCxo0bp9dee+2SxgsAABq2JnU9AQAAADRuzz//vOLj4zVv3jyrLTEx0fq3YRh6+eWX9eSTT+rOO++UJP3lL39RdHS0lixZosGDB2v37t1asWKFtm7dql69ekmSZs6cqdtuu00vvvii4uLiNH/+fJWVlemtt95SSEiIOnbsqPz8fL300ktuRTUAAIDz4cwyAAAA+NQHH3ygXr16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SKo//qz89ttvtWrVKj3yyCNWW315T1Asu0gOh0OrV692a3M6nee9zlBjkZ+fr9jY2LqexjkZhqERI0Zo8eLFWrNmjRITEy/4nIa2nrWJ8Uzl5eXavn17vV7Ls6moqFBpaelZjzW0dTyX88V4poawjv3799f27duVn59vffXq1UtDhgxRfn6+goKCqj2nIa5lbeI8U0NYz9MdO3ZMX3/99Tnn2xDXEfCWkJAQ9ezZ0+17oKKiQqtXr/ab74HExETFxMS45aCkpESbN2+2cuBwOFRcXKy8vDyrz5o1a1RRUaHevXtf8jnX1oX2Zj179lRwcLBbLvbs2aMDBw645WL79u1uvxA7nU7Z7fYGfUZ91b7Gn3JwoT1Br169/CYXpzt93+BP74e+fftqz549bm1ffvmlEhISJPnXz8oq8+bNU1RUlFJTU622evOe8MptAhqRH374wdi2bZuxbds2Q5Lx0ksvGdu2bTO+/fZbwzAM44knnjDuv/9+q/8333xjhIeHG6NGjTJ2795tzJ492wgKCjJWrFhRVyHUiKdxTps2zViyZImxd+9eY/v27cZjjz1mBAYGGqtWraqrEC5o+PDhRkREhLF27Vrj0KFD1teJEyesPvfff7/xxBNPWI8/+eQTo0mTJsaLL75o7N6923j66aeN4OBgY/v27XURwgXVJsbx48cbK1euNL7++msjLy/PGDx4sBEaGmrs3LmzLkKokSeeeMJYt26dsW/fPuPzzz83nnjiCSMgIMDIyckxDKPhr6NheB5jQ1zHsznzLpGNYS3P5kJxNrT1/OMf/2isXbvW2Ldvn/HJJ58YSUlJxmWXXWYUFRUZhtF41xGorXfffdew2WxGdna2sWvXLmPYsGFGZGSk2128GroL7S2fe+45IzIy0vjHP/5hfP7558add95pJCYmGj/++KM1xq233mp0797d2Lx5s7FhwwbjmmuuMe699966CqlWarI3e/TRR402bdoYa9asMT799FPD4XAYDofDOn7q1CmjU6dORnJyspGfn2+sWLHCuPzyy40xY8bURUi1cqF9jT/k4FzO3BP4Qy4utG/whxwYhmFs2bLFaNKkiTFp0iRj7969xvz5843w8HDjnXfesfr4y89Kw6i8M3SbNm2Mxx9/vNqx+vCeoFh2ho8//tiQVO0rPT3dMAzDSE9PN2666aZqz+nWrZsREhJiXHnllca8efMu+bw95Wmczz//vHHVVVcZoaGhRsuWLY1+/foZa9asqZvJ19DZ4pPktj433XSTFXOVhQsXGtdee60REhJidOzY0Vi2bNmlnbgHahNjZmam0aZNGyMkJMSIjo42brvtNuOzzz679JP3wMMPP2wkJCQYISEhxuWXX27079/f2mwZRsNfR8PwPMaGuI5nc+aGsTGs5dlcKM6Gtp733HOPERsba4SEhBj/8z//Y9xzzz3GV199ZR1vrOsIXIyZM2da3+fXXXedsWnTprqeklddaG9ZUVFhPPXUU0Z0dLRhs9mM/v37G3v27HEb4/vvvzfuvfdeo1mzZobdbjceeugh44cffqiDaGqvJnuzH3/80fjd735ntGjRwggPDzd+8YtfGIcOHXIbZ//+/cbAgQONsLAw47LLLjP++Mc/Gi6X6xJHU3sX2tf4Qw7O5cw9gT/k4kL7Bn/IQZUPP/zQ6NSpk2Gz2Yx27doZr732mttxf/lZaRiGsXLlSkNStfgMo368JwIMwzC8c44aAAAAAAAA0LBxzTIAAAAAAADARLEMAAAAAAAAMFEsAwAAAAAAAEwUywAAAAAAAAATxTIAAAAAAADARLEMAAAAAAAAMFEsAwAAAAAAAEwUywAAAAAAAAATxTIAAAAAAADARLEMAAAAAAAAMFEsAwAAAAAAAEwUywAAAAAAAADT/wedqGwVjP7yBwAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 1500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.hist(figsize=(15,5))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "f2cd30f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.278443Z",
     "iopub.status.busy": "2024-06-04T13:21:33.278014Z",
     "iopub.status.idle": "2024-06-04T13:21:33.555984Z",
     "shell.execute_reply": "2024-06-04T13:21:33.554842Z"
    },
    "papermill": {
     "duration": 0.291619,
     "end_time": "2024-06-04T13:21:33.558323",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.266704",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x = 'score', y='thumbs_up_count',data=df)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f330322",
   "metadata": {
    "papermill": {
     "duration": 0.00995,
     "end_time": "2024-06-04T13:21:33.578683",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.568733",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Feature Engineering ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "902ce115",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.601270Z",
     "iopub.status.busy": "2024-06-04T13:21:33.600372Z",
     "iopub.status.idle": "2024-06-04T13:21:33.608565Z",
     "shell.execute_reply": "2024-06-04T13:21:33.607680Z"
    },
    "papermill": {
     "duration": 0.021865,
     "end_time": "2024-06-04T13:21:33.610835",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.588970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop(columns=['review_id','user_name','at'], inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3f45917a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.633269Z",
     "iopub.status.busy": "2024-06-04T13:21:33.632638Z",
     "iopub.status.idle": "2024-06-04T13:21:33.643843Z",
     "shell.execute_reply": "2024-06-04T13:21:33.642683Z"
    },
    "papermill": {
     "duration": 0.024727,
     "end_time": "2024-06-04T13:21:33.645879",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.621152",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17573</th>\n",
       "      <td>a helpful app for everyone around the world li...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47028</th>\n",
       "      <td>App is really light compared to the web versio...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.0.0032</td>\n",
       "      <td>1.0.0032</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55422</th>\n",
       "      <td>Well done, very accomplished, and get fun</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88818</th>\n",
       "      <td>this is very helpful app it is so good it is h...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57800</th>\n",
       "      <td>it is helpful in explaining topics</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content  score  \\\n",
       "17573  a helpful app for everyone around the world li...      5   \n",
       "47028  App is really light compared to the web versio...      4   \n",
       "55422          Well done, very accomplished, and get fun      5   \n",
       "88818  this is very helpful app it is so good it is h...      5   \n",
       "57800                 it is helpful in explaining topics      4   \n",
       "\n",
       "       thumbs_up_count review_created_version app_version  \n",
       "17573                0             1.2024.122  1.2024.122  \n",
       "47028                0               1.0.0032    1.0.0032  \n",
       "55422                0             1.2023.314  1.2023.314  \n",
       "88818                0             1.2024.122  1.2024.122  \n",
       "57800                0             1.2023.314  1.2023.314  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16c1f394",
   "metadata": {
    "papermill": {
     "duration": 0.010154,
     "end_time": "2024-06-04T13:21:33.666760",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.656606",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Encoding ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "46add0f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.689542Z",
     "iopub.status.busy": "2024-06-04T13:21:33.689100Z",
     "iopub.status.idle": "2024-06-04T13:21:33.697300Z",
     "shell.execute_reply": "2024-06-04T13:21:33.696135Z"
    },
    "papermill": {
     "duration": 0.021998,
     "end_time": "2024-06-04T13:21:33.699309",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.677311",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "le = LabelEncoder()\n",
    "df['review_created_version'] = le.fit_transform(df['review_created_version'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4449a884",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.723115Z",
     "iopub.status.busy": "2024-06-04T13:21:33.722710Z",
     "iopub.status.idle": "2024-06-04T13:21:33.732494Z",
     "shell.execute_reply": "2024-06-04T13:21:33.731382Z"
    },
    "papermill": {
     "duration": 0.024034,
     "end_time": "2024-06-04T13:21:33.734778",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.710744",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "oe = OrdinalEncoder()\n",
    "df['app_version'] = oe.fit_transform(df[['app_version']]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "e94c5410",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.766063Z",
     "iopub.status.busy": "2024-06-04T13:21:33.765500Z",
     "iopub.status.idle": "2024-06-04T13:21:33.781224Z",
     "shell.execute_reply": "2024-06-04T13:21:33.779247Z"
    },
    "papermill": {
     "duration": 0.037572,
     "end_time": "2024-06-04T13:21:33.783987",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.746415",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17573</th>\n",
       "      <td>a helpful app for everyone around the world li...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47028</th>\n",
       "      <td>App is really light compared to the web versio...</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55422</th>\n",
       "      <td>Well done, very accomplished, and get fun</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88818</th>\n",
       "      <td>this is very helpful app it is so good it is h...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57800</th>\n",
       "      <td>it is helpful in explaining topics</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>22</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 content  score  \\\n",
       "17573  a helpful app for everyone around the world li...      5   \n",
       "47028  App is really light compared to the web versio...      4   \n",
       "55422          Well done, very accomplished, and get fun      5   \n",
       "88818  this is very helpful app it is so good it is h...      5   \n",
       "57800                 it is helpful in explaining topics      4   \n",
       "\n",
       "       thumbs_up_count  review_created_version  app_version  \n",
       "17573                0                      46         46.0  \n",
       "47028                0                       6          6.0  \n",
       "55422                0                      22         22.0  \n",
       "88818                0                      46         46.0  \n",
       "57800                0                      22         22.0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5af0fdd9",
   "metadata": {
    "papermill": {
     "duration": 0.015847,
     "end_time": "2024-06-04T13:21:33.817408",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.801561",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Applying NLP to Analyze Content ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "523111f4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.840935Z",
     "iopub.status.busy": "2024-06-04T13:21:33.840573Z",
     "iopub.status.idle": "2024-06-04T13:21:33.848037Z",
     "shell.execute_reply": "2024-06-04T13:21:33.847265Z"
    },
    "papermill": {
     "duration": 0.021219,
     "end_time": "2024-06-04T13:21:33.849804",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.828585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17573     a helpful app for everyone around the world li...\n",
       "47028     App is really light compared to the web versio...\n",
       "55422             Well done, very accomplished, and get fun\n",
       "88818     this is very helpful app it is so good it is h...\n",
       "57800                    it is helpful in explaining topics\n",
       "                                ...                        \n",
       "98071                                                     🥴\n",
       "107224                                     More information\n",
       "96363                                                  best\n",
       "33573                       it is very helpful for students\n",
       "80561                Finally we can use ChatGpt in Android.\n",
       "Name: content, Length: 9160, dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['content']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "bac6ced2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.873827Z",
     "iopub.status.busy": "2024-06-04T13:21:33.873121Z",
     "iopub.status.idle": "2024-06-04T13:21:33.885995Z",
     "shell.execute_reply": "2024-06-04T13:21:33.885056Z"
    },
    "papermill": {
     "duration": 0.027009,
     "end_time": "2024-06-04T13:21:33.887942",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.860933",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17573     a helpful app for everyone around the world li...\n",
       "47028     app is really light compared to the web versio...\n",
       "55422             well done, very accomplished, and get fun\n",
       "88818     this is very helpful app it is so good it is h...\n",
       "57800                    it is helpful in explaining topics\n",
       "                                ...                        \n",
       "98071                                                     🥴\n",
       "107224                                     more information\n",
       "96363                                                  best\n",
       "33573                       it is very helpful for students\n",
       "80561                finally we can use chatgpt in android.\n",
       "Name: content, Length: 9160, dtype: object"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['content'] = df['content'].str.lower()\n",
    "df['content']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "3d471466",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:21:33.914392Z",
     "iopub.status.busy": "2024-06-04T13:21:33.913665Z",
     "iopub.status.idle": "2024-06-04T13:21:33.932256Z",
     "shell.execute_reply": "2024-06-04T13:21:33.931545Z"
    },
    "papermill": {
     "duration": 0.035027,
     "end_time": "2024-06-04T13:21:33.934189",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.899162",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17573     a helpful app for everyone around the world li...\n",
       "47028     app is really light compared to the web versio...\n",
       "55422             well done, very accomplished, and get fun\n",
       "88818     this is very helpful app it is so good it is h...\n",
       "57800                    it is helpful in explaining topics\n",
       "30291     wow, this is now my new ai teacher, lol. i am ...\n",
       "50069      all you want to know in just a click of a button\n",
       "95496                                       8888⁸⁸8888888⁸i\n",
       "30673     biggest source of academic fraud ever, and als...\n",
       "130600                                                 good\n",
       "107927                                                 good\n",
       "97825                                                     👍\n",
       "58511     it was great to use, and the app helps with my...\n",
       "55444                                        love it so far\n",
       "122756                                            excellent\n",
       "128860                                                 nice\n",
       "114200                                             good app\n",
       "104663                                                 nice\n",
       "57207                                   so easy and awesome\n",
       "93498                                                    ok\n",
       "Name: content, dtype: object"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def remove_html_tags(text):\n",
    "    clean_text = re.sub('<.*>', '', text)\n",
    "    return clean_text\n",
    "\n",
    "df['content'] = df['content'].apply(remove_html_tags)\n",
    "df['content'].head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bf9f450",
   "metadata": {
    "papermill": {
     "duration": 0.011071,
     "end_time": "2024-06-04T13:21:33.957101",
     "exception": false,
     "start_time": "2024-06-04T13:21:33.946030",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4997049,
     "sourceId": 8598172,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 48.095626,
   "end_time": "2024-06-04T13:21:37.212850",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-04T13:20:49.117224",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
