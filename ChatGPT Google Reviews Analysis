{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "026f06e0",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.008476,
     "end_time": "2024-06-04T13:08:54.813793",
     "exception": false,
     "start_time": "2024-06-04T13:08:54.805317",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**ChatGPT Google Reviews Analysis**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b7f76dc",
   "metadata": {
    "papermill": {
     "duration": 0.007616,
     "end_time": "2024-06-04T13:08:54.829494",
     "exception": false,
     "start_time": "2024-06-04T13:08:54.821878",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "***Please upvote it if you are find this note book helpful. My deepest thanks for your all!***\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f93edaf8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:08:54.847236Z",
     "iopub.status.busy": "2024-06-04T13:08:54.846809Z",
     "iopub.status.idle": "2024-06-04T13:09:46.106110Z",
     "shell.execute_reply": "2024-06-04T13:09:46.104915Z"
    },
    "papermill": {
     "duration": 51.271683,
     "end_time": "2024-06-04T13:09:46.109197",
     "exception": false,
     "start_time": "2024-06-04T13:08:54.837514",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-04 13:09:33.352984: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-04 13:09:33.353152: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-04 13:09:33.546104: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import re\n",
    "import string\n",
    "import emoji\n",
    "import nltk\n",
    "import spacy\n",
    "from tqdm import tqdm\n",
    "from nltk.corpus import stopwords\n",
    "from gensim.models import Word2Vec\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.metrics import classification_report\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n",
    "from sklearn.preprocessing import MinMaxScaler, LabelEncoder, OrdinalEncoder"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17fa9602",
   "metadata": {
    "papermill": {
     "duration": 0.010112,
     "end_time": "2024-06-04T13:09:46.138608",
     "exception": false,
     "start_time": "2024-06-04T13:09:46.128496",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Importing Data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "45349ecb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:46.157814Z",
     "iopub.status.busy": "2024-06-04T13:09:46.157013Z",
     "iopub.status.idle": "2024-06-04T13:09:47.188471Z",
     "shell.execute_reply": "2024-06-04T13:09:47.187030Z"
    },
    "papermill": {
     "duration": 1.044556,
     "end_time": "2024-06-04T13:09:47.191610",
     "exception": false,
     "start_time": "2024-06-04T13:09:46.147054",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_18/2635146516.py:1: DtypeWarning: Columns (5,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')\n"
     ]
    }
   ],
   "source": [
    "dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bec92484",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.210564Z",
     "iopub.status.busy": "2024-06-04T13:09:47.210064Z",
     "iopub.status.idle": "2024-06-04T13:09:47.238480Z",
     "shell.execute_reply": "2024-06-04T13:09:47.237009Z"
    },
    "papermill": {
     "duration": 0.041675,
     "end_time": "2024-06-04T13:09:47.241543",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.199868",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>b4d0887a-d493-4e0f-8740-ad29cc2cafa5</td>\n",
       "      <td>Zappi</td>\n",
       "      <td>the apps works great! the speech to text is re...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 22:00:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>852c8123-ea73-4a8d-8d78-63221a882e56</td>\n",
       "      <td>soufiane taku</td>\n",
       "      <td>amazing</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.139</td>\n",
       "      <td>2024-06-02 22:00:34</td>\n",
       "      <td>1.2024.139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>9166feae-db4e-45f8-a77f-61a15ad0c092</td>\n",
       "      <td>jahinam singh</td>\n",
       "      <td>very good</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:59:39</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2a8bda00-9a39-4c8d-b979-412b7cd5db66</td>\n",
       "      <td>Nicolai West</td>\n",
       "      <td>you don't need Google u need chat gpy</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:56:36</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>884a3e77-1579-44b7-b17c-1eeb19d51195</td>\n",
       "      <td>Ride Ninja</td>\n",
       "      <td>مك</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.143</td>\n",
       "      <td>2024-06-02 21:54:48</td>\n",
       "      <td>1.2024.143</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               reviewId       userName  \\\n",
       "0  b4d0887a-d493-4e0f-8740-ad29cc2cafa5          Zappi   \n",
       "1  852c8123-ea73-4a8d-8d78-63221a882e56  soufiane taku   \n",
       "2  9166feae-db4e-45f8-a77f-61a15ad0c092  jahinam singh   \n",
       "3  2a8bda00-9a39-4c8d-b979-412b7cd5db66   Nicolai West   \n",
       "4  884a3e77-1579-44b7-b17c-1eeb19d51195     Ride Ninja   \n",
       "\n",
       "                                             content  score  thumbsUpCount  \\\n",
       "0  the apps works great! the speech to text is re...      5              0   \n",
       "1                                            amazing      5              0   \n",
       "2                                          very good      5              0   \n",
       "3              you don't need Google u need chat gpy      5              0   \n",
       "4                                                 مك      1              0   \n",
       "\n",
       "  reviewCreatedVersion                   at  appVersion  \n",
       "0           1.2024.143  2024-06-02 22:00:48  1.2024.143  \n",
       "1           1.2024.139  2024-06-02 22:00:34  1.2024.139  \n",
       "2           1.2024.143  2024-06-02 21:59:39  1.2024.143  \n",
       "3           1.2024.143  2024-06-02 21:56:36  1.2024.143  \n",
       "4           1.2024.143  2024-06-02 21:54:48  1.2024.143  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ce6c5526",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.261375Z",
     "iopub.status.busy": "2024-06-04T13:09:47.260476Z",
     "iopub.status.idle": "2024-06-04T13:09:47.269410Z",
     "shell.execute_reply": "2024-06-04T13:09:47.268295Z"
    },
    "papermill": {
     "duration": 0.021725,
     "end_time": "2024-06-04T13:09:47.271857",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.250132",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1076368"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dx.size"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "944cde41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.290911Z",
     "iopub.status.busy": "2024-06-04T13:09:47.290470Z",
     "iopub.status.idle": "2024-06-04T13:09:47.323856Z",
     "shell.execute_reply": "2024-06-04T13:09:47.322679Z"
    },
    "papermill": {
     "duration": 0.046354,
     "end_time": "2024-06-04T13:09:47.326922",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.280568",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviewId</th>\n",
       "      <th>userName</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbsUpCount</th>\n",
       "      <th>reviewCreatedVersion</th>\n",
       "      <th>at</th>\n",
       "      <th>appVersion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18693</th>\n",
       "      <td>e8290d14-857c-4762-bc27-25d861b14583</td>\n",
       "      <td>srabon Islam</td>\n",
       "      <td>good app</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-14 22:41:26</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107231</th>\n",
       "      <td>331ae128-149c-4d34-ac11-7fb00bd3cbf9</td>\n",
       "      <td>Avi Mehra</td>\n",
       "      <td>Help ful</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.073</td>\n",
       "      <td>2024-03-19 15:19:12</td>\n",
       "      <td>1.2024.073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38562</th>\n",
       "      <td>c95a8a0e-7ac9-4c90-af36-bc4c9e6fa673</td>\n",
       "      <td>Bethel Ukachukwu</td>\n",
       "      <td>This application is lovely, so accurate in ans...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.073</td>\n",
       "      <td>2024-03-27 10:11:27</td>\n",
       "      <td>1.2024.073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49522</th>\n",
       "      <td>ada3516e-7c72-4589-8bca-1884305f6de2</td>\n",
       "      <td>Effiong Crown</td>\n",
       "      <td>I think there's a glitch somewhere, I've downl...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2024-01-16 10:43:13</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50249</th>\n",
       "      <td>06491de7-85ee-4970-9706-26683e70d7f3</td>\n",
       "      <td>pinaki biswas</td>\n",
       "      <td>I just like this ai as it helps me in my studi...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.094</td>\n",
       "      <td>2024-04-17 15:32:16</td>\n",
       "      <td>1.2024.094</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    reviewId          userName  \\\n",
       "18693   e8290d14-857c-4762-bc27-25d861b14583      srabon Islam   \n",
       "107231  331ae128-149c-4d34-ac11-7fb00bd3cbf9         Avi Mehra   \n",
       "38562   c95a8a0e-7ac9-4c90-af36-bc4c9e6fa673  Bethel Ukachukwu   \n",
       "49522   ada3516e-7c72-4589-8bca-1884305f6de2     Effiong Crown   \n",
       "50249   06491de7-85ee-4970-9706-26683e70d7f3     pinaki biswas   \n",
       "\n",
       "                                                  content  score  \\\n",
       "18693                                            good app      5   \n",
       "107231                                           Help ful      5   \n",
       "38562   This application is lovely, so accurate in ans...      5   \n",
       "49522   I think there's a glitch somewhere, I've downl...      1   \n",
       "50249   I just like this ai as it helps me in my studi...      5   \n",
       "\n",
       "        thumbsUpCount reviewCreatedVersion                   at  appVersion  \n",
       "18693               0           1.2024.122  2024-05-14 22:41:26  1.2024.122  \n",
       "107231              0           1.2024.073  2024-03-19 15:19:12  1.2024.073  \n",
       "38562               0           1.2024.073  2024-03-27 10:11:27  1.2024.073  \n",
       "49522               0                  NaN  2024-01-16 10:43:13         NaN  \n",
       "50249               0           1.2024.094  2024-04-17 15:32:16  1.2024.094  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = dx.sample(10000)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "03b061da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.347303Z",
     "iopub.status.busy": "2024-06-04T13:09:47.346878Z",
     "iopub.status.idle": "2024-06-04T13:09:47.354055Z",
     "shell.execute_reply": "2024-06-04T13:09:47.352827Z"
    },
    "papermill": {
     "duration": 0.020528,
     "end_time": "2024-06-04T13:09:47.356929",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.336401",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.rename(columns={'reviewId': 'review_id',\n",
    "                  'userName':'user_name',\n",
    "                  'thumbsUpCount': 'thumbs_up_count',\n",
    "                  'reviewCreatedVersion':'review_created_version',\n",
    "                  'appVersion':'app_version'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c4921dc6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.376777Z",
     "iopub.status.busy": "2024-06-04T13:09:47.376337Z",
     "iopub.status.idle": "2024-06-04T13:09:47.384077Z",
     "shell.execute_reply": "2024-06-04T13:09:47.382718Z"
    },
    "papermill": {
     "duration": 0.020935,
     "end_time": "2024-06-04T13:09:47.386844",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.365909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['review_id', 'user_name', 'content', 'score', 'thumbs_up_count',\n",
       "       'review_created_version', 'at', 'app_version'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "472bd65d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.407432Z",
     "iopub.status.busy": "2024-06-04T13:09:47.407002Z",
     "iopub.status.idle": "2024-06-04T13:09:47.414411Z",
     "shell.execute_reply": "2024-06-04T13:09:47.413300Z"
    },
    "papermill": {
     "duration": 0.020562,
     "end_time": "2024-06-04T13:09:47.417049",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.396487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(10000, 8)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "199e6abb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.437395Z",
     "iopub.status.busy": "2024-06-04T13:09:47.436978Z",
     "iopub.status.idle": "2024-06-04T13:09:47.473313Z",
     "shell.execute_reply": "2024-06-04T13:09:47.472033Z"
    },
    "papermill": {
     "duration": 0.049701,
     "end_time": "2024-06-04T13:09:47.476066",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.426365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 10000 entries, 18693 to 20363\n",
      "Data columns (total 8 columns):\n",
      " #   Column                  Non-Null Count  Dtype \n",
      "---  ------                  --------------  ----- \n",
      " 0   review_id               10000 non-null  object\n",
      " 1   user_name               10000 non-null  object\n",
      " 2   content                 10000 non-null  object\n",
      " 3   score                   10000 non-null  int64 \n",
      " 4   thumbs_up_count         10000 non-null  int64 \n",
      " 5   review_created_version  9207 non-null   object\n",
      " 6   at                      10000 non-null  object\n",
      " 7   app_version             9207 non-null   object\n",
      "dtypes: int64(2), object(6)\n",
      "memory usage: 703.1+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dcdf7a29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.496762Z",
     "iopub.status.busy": "2024-06-04T13:09:47.496312Z",
     "iopub.status.idle": "2024-06-04T13:09:47.514591Z",
     "shell.execute_reply": "2024-06-04T13:09:47.513488Z"
    },
    "papermill": {
     "duration": 0.031838,
     "end_time": "2024-06-04T13:09:47.517494",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.485656",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "review_id                   0\n",
       "user_name                   0\n",
       "content                     0\n",
       "score                       0\n",
       "thumbs_up_count             0\n",
       "review_created_version    793\n",
       "at                          0\n",
       "app_version               793\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "4d134ca2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.539194Z",
     "iopub.status.busy": "2024-06-04T13:09:47.538774Z",
     "iopub.status.idle": "2024-06-04T13:09:47.565414Z",
     "shell.execute_reply": "2024-06-04T13:09:47.564211Z"
    },
    "papermill": {
     "duration": 0.04069,
     "end_time": "2024-06-04T13:09:47.568297",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.527607",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>score</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>4.5219</td>\n",
       "      <td>1.055856</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <td>10000.0</td>\n",
       "      <td>0.6918</td>\n",
       "      <td>16.169340</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1068.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   count    mean        std  min  25%  50%  75%     max\n",
       "score            10000.0  4.5219   1.055856  1.0  5.0  5.0  5.0     5.0\n",
       "thumbs_up_count  10000.0  0.6918  16.169340  0.0  0.0  0.0  0.0  1068.0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1347df08",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.590548Z",
     "iopub.status.busy": "2024-06-04T13:09:47.590108Z",
     "iopub.status.idle": "2024-06-04T13:09:47.619060Z",
     "shell.execute_reply": "2024-06-04T13:09:47.617741Z"
    },
    "papermill": {
     "duration": 0.043147,
     "end_time": "2024-06-04T13:09:47.622090",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.578943",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "909fc655",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.645279Z",
     "iopub.status.busy": "2024-06-04T13:09:47.644856Z",
     "iopub.status.idle": "2024-06-04T13:09:47.664049Z",
     "shell.execute_reply": "2024-06-04T13:09:47.662642Z"
    },
    "papermill": {
     "duration": 0.034009,
     "end_time": "2024-06-04T13:09:47.666978",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.632969",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cb4a7362",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.689023Z",
     "iopub.status.busy": "2024-06-04T13:09:47.688524Z",
     "iopub.status.idle": "2024-06-04T13:09:47.696740Z",
     "shell.execute_reply": "2024-06-04T13:09:47.695172Z"
    },
    "papermill": {
     "duration": 0.022429,
     "end_time": "2024-06-04T13:09:47.699544",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.677115",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9181, 8)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4c3ac318",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.722011Z",
     "iopub.status.busy": "2024-06-04T13:09:47.721571Z",
     "iopub.status.idle": "2024-06-04T13:09:47.738653Z",
     "shell.execute_reply": "2024-06-04T13:09:47.737362Z"
    },
    "papermill": {
     "duration": 0.031412,
     "end_time": "2024-06-04T13:09:47.741575",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.710163",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>review_id</th>\n",
       "      <th>user_name</th>\n",
       "      <th>content</th>\n",
       "      <th>score</th>\n",
       "      <th>thumbs_up_count</th>\n",
       "      <th>review_created_version</th>\n",
       "      <th>at</th>\n",
       "      <th>app_version</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>18693</th>\n",
       "      <td>e8290d14-857c-4762-bc27-25d861b14583</td>\n",
       "      <td>srabon Islam</td>\n",
       "      <td>good app</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.122</td>\n",
       "      <td>2024-05-14 22:41:26</td>\n",
       "      <td>1.2024.122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107231</th>\n",
       "      <td>331ae128-149c-4d34-ac11-7fb00bd3cbf9</td>\n",
       "      <td>Avi Mehra</td>\n",
       "      <td>Help ful</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.073</td>\n",
       "      <td>2024-03-19 15:19:12</td>\n",
       "      <td>1.2024.073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38562</th>\n",
       "      <td>c95a8a0e-7ac9-4c90-af36-bc4c9e6fa673</td>\n",
       "      <td>Bethel Ukachukwu</td>\n",
       "      <td>This application is lovely, so accurate in ans...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.073</td>\n",
       "      <td>2024-03-27 10:11:27</td>\n",
       "      <td>1.2024.073</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50249</th>\n",
       "      <td>06491de7-85ee-4970-9706-26683e70d7f3</td>\n",
       "      <td>pinaki biswas</td>\n",
       "      <td>I just like this ai as it helps me in my studi...</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2024.094</td>\n",
       "      <td>2024-04-17 15:32:16</td>\n",
       "      <td>1.2024.094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118080</th>\n",
       "      <td>a658e959-7f58-4601-bf0b-9fced5f73e23</td>\n",
       "      <td>Stephen</td>\n",
       "      <td>Badass</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1.2023.314</td>\n",
       "      <td>2023-12-11 16:40:42</td>\n",
       "      <td>1.2023.314</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                   review_id         user_name  \\\n",
       "18693   e8290d14-857c-4762-bc27-25d861b14583      srabon Islam   \n",
       "107231  331ae128-149c-4d34-ac11-7fb00bd3cbf9         Avi Mehra   \n",
       "38562   c95a8a0e-7ac9-4c90-af36-bc4c9e6fa673  Bethel Ukachukwu   \n",
       "50249   06491de7-85ee-4970-9706-26683e70d7f3     pinaki biswas   \n",
       "118080  a658e959-7f58-4601-bf0b-9fced5f73e23           Stephen   \n",
       "\n",
       "                                                  content  score  \\\n",
       "18693                                            good app      5   \n",
       "107231                                           Help ful      5   \n",
       "38562   This application is lovely, so accurate in ans...      5   \n",
       "50249   I just like this ai as it helps me in my studi...      5   \n",
       "118080                                             Badass      4   \n",
       "\n",
       "        thumbs_up_count review_created_version                   at  \\\n",
       "18693                 0             1.2024.122  2024-05-14 22:41:26   \n",
       "107231                0             1.2024.073  2024-03-19 15:19:12   \n",
       "38562                 0             1.2024.073  2024-03-27 10:11:27   \n",
       "50249                 0             1.2024.094  2024-04-17 15:32:16   \n",
       "118080                0             1.2023.314  2023-12-11 16:40:42   \n",
       "\n",
       "       app_version  \n",
       "18693   1.2024.122  \n",
       "107231  1.2024.073  \n",
       "38562   1.2024.073  \n",
       "50249   1.2024.094  \n",
       "118080  1.2023.314  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "47ea14df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.764260Z",
     "iopub.status.busy": "2024-06-04T13:09:47.763818Z",
     "iopub.status.idle": "2024-06-04T13:09:47.774734Z",
     "shell.execute_reply": "2024-06-04T13:09:47.773640Z"
    },
    "papermill": {
     "duration": 0.025202,
     "end_time": "2024-06-04T13:09:47.777293",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.752091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "score\n",
       "5    7090\n",
       "4    1116\n",
       "1     460\n",
       "3     383\n",
       "2     132\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "739f32f0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.800547Z",
     "iopub.status.busy": "2024-06-04T13:09:47.799650Z",
     "iopub.status.idle": "2024-06-04T13:09:47.810549Z",
     "shell.execute_reply": "2024-06-04T13:09:47.809173Z"
    },
    "papermill": {
     "duration": 0.02554,
     "end_time": "2024-06-04T13:09:47.813282",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.787742",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "thumbs_up_count\n",
       "0       8791\n",
       "1        212\n",
       "2         55\n",
       "3         20\n",
       "5         14\n",
       "4         12\n",
       "9          7\n",
       "6          7\n",
       "7          6\n",
       "8          5\n",
       "10         4\n",
       "11         3\n",
       "13         3\n",
       "14         2\n",
       "12         2\n",
       "16         2\n",
       "1068       1\n",
       "28         1\n",
       "79         1\n",
       "39         1\n",
       "90         1\n",
       "278        1\n",
       "118        1\n",
       "24         1\n",
       "22         1\n",
       "17         1\n",
       "53         1\n",
       "339        1\n",
       "89         1\n",
       "75         1\n",
       "231        1\n",
       "104        1\n",
       "744        1\n",
       "35         1\n",
       "77         1\n",
       "47         1\n",
       "49         1\n",
       "50         1\n",
       "288        1\n",
       "210        1\n",
       "38         1\n",
       "348        1\n",
       "52         1\n",
       "60         1\n",
       "84         1\n",
       "29         1\n",
       "285        1\n",
       "155        1\n",
       "80         1\n",
       "435        1\n",
       "152        1\n",
       "113        1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['thumbs_up_count'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11eb9c1c",
   "metadata": {
    "papermill": {
     "duration": 0.010664,
     "end_time": "2024-06-04T13:09:47.835290",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.824626",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data Viz**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "2dd32738",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:47.858488Z",
     "iopub.status.busy": "2024-06-04T13:09:47.858039Z",
     "iopub.status.idle": "2024-06-04T13:09:48.448667Z",
     "shell.execute_reply": "2024-06-04T13:09:48.447400Z"
    },
    "papermill": {
     "duration": 0.605425,
     "end_time": "2024-06-04T13:09:48.451316",
     "exception": false,
     "start_time": "2024-06-04T13:09:47.845891",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.hist(figsize=(15,5))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c74c4833",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T13:09:48.475531Z",
     "iopub.status.busy": "2024-06-04T13:09:48.475119Z",
     "iopub.status.idle": "2024-06-04T13:09:48.796578Z",
     "shell.execute_reply": "2024-06-04T13:09:48.795193Z"
    },
    "papermill": {
     "duration": 0.336622,
     "end_time": "2024-06-04T13:09:48.799312",
     "exception": false,
     "start_time": "2024-06-04T13:09:48.462690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x = 'score', y='thumbs_up_count',data=df)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44048041",
   "metadata": {
    "papermill": {
     "duration": 0.011207,
     "end_time": "2024-06-04T13:09:48.822059",
     "exception": false,
     "start_time": "2024-06-04T13:09:48.810852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4997049,
     "sourceId": 8598172,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 60.2661,
   "end_time": "2024-06-04T13:09:51.728192",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-04T13:08:51.462092",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
