{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8607697,"sourceType":"datasetVersion","datasetId":4997049}],"dockerImageVersionId":30715,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## ChatGPT Google Reviews Analysis ##","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"markdown","source":"### Please upvote it if you are find this note book helpful. My deepest thanks for your all! ###\n","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport re\nimport string\nimport emoji\nimport nltk\nimport spacy\nfrom tqdm import tqdm\nfrom nltk.corpus import stopwords\nfrom gensim.models import Word2Vec\nfrom tensorflow.keras.preprocessing.text import Tokenizer\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.metrics import classification_report\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\nfrom sklearn.preprocessing import MinMaxScaler, LabelEncoder, OrdinalEncoder\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.svm import SVC\nfrom sklearn.model_selection import GridSearchCV","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:15:40.480214Z","iopub.execute_input":"2024-06-05T12:15:40.480886Z","iopub.status.idle":"2024-06-05T12:15:40.494277Z","shell.execute_reply.started":"2024-06-05T12:15:40.480840Z","shell.execute_reply":"2024-06-05T12:15:40.492481Z"},"trusted":true},"execution_count":73,"outputs":[]},{"cell_type":"markdown","source":"## Importing Data ##","metadata":{}},{"cell_type":"code","source":"dx = pd.read_csv('/kaggle/input/chatgpt-reviews-daily-updated/chatgpt_reviews.csv')","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:02:51.322743Z","iopub.execute_input":"2024-06-05T11:02:51.323857Z","iopub.status.idle":"2024-06-05T11:02:52.300313Z","shell.execute_reply.started":"2024-06-05T11:02:51.323800Z","shell.execute_reply":"2024-06-05T11:02:52.298630Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"dx.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:02:56.591774Z","iopub.execute_input":"2024-06-05T11:02:56.592231Z","iopub.status.idle":"2024-06-05T11:02:56.617529Z","shell.execute_reply.started":"2024-06-05T11:02:56.592200Z","shell.execute_reply":"2024-06-05T11:02:56.615875Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"                               reviewId            userName  \\\n0  30e0315f-729a-4709-b26b-ed91d2842ce8      Marwan Mohamed   \n1  cbb56939-c726-411d-a147-89c52b23c033  Murendeni Mulaudzi   \n2  2fb70124-54a8-47b5-bcc6-acff14e88fe2        NEERAJ KUMAR   \n3  5378c013-27d8-48cd-9043-05d2fa898eda         Ziaul Haque   \n4  6478c49c-7499-4669-96f1-eea74c294b5d        Ifra Fariyal   \n\n                                             content  score  thumbsUpCount  \\\n0  this app Very cool, but he does not remember i...      4              0   \n1                    i love it it is so historicalü•∫ü§ü      5              0   \n2                                            amazing      5              0   \n3                     this is the best app helpful üëç      5              0   \n4                                          excellent      4              0   \n\n  reviewCreatedVersion                   at  appVersion  \n0           1.2024.143  2024-06-03 14:59:30  1.2024.143  \n1           1.2024.143  2024-06-03 14:57:37  1.2024.143  \n2           1.2024.143  2024-06-03 14:57:17  1.2024.143  \n3           1.2024.143  2024-06-03 14:55:52  1.2024.143  \n4           1.2024.139  2024-06-03 14:55:37  1.2024.139  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>reviewId</th>\n      <th>userName</th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbsUpCount</th>\n      <th>reviewCreatedVersion</th>\n      <th>at</th>\n      <th>appVersion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>30e0315f-729a-4709-b26b-ed91d2842ce8</td>\n      <td>Marwan Mohamed</td>\n      <td>this app Very cool, but he does not remember i...</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1.2024.143</td>\n      <td>2024-06-03 14:59:30</td>\n      <td>1.2024.143</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>cbb56939-c726-411d-a147-89c52b23c033</td>\n      <td>Murendeni Mulaudzi</td>\n      <td>i love it it is so historicalü•∫ü§ü</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.143</td>\n      <td>2024-06-03 14:57:37</td>\n      <td>1.2024.143</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2fb70124-54a8-47b5-bcc6-acff14e88fe2</td>\n      <td>NEERAJ KUMAR</td>\n      <td>amazing</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.143</td>\n      <td>2024-06-03 14:57:17</td>\n      <td>1.2024.143</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>5378c013-27d8-48cd-9043-05d2fa898eda</td>\n      <td>Ziaul Haque</td>\n      <td>this is the best app helpful üëç</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.143</td>\n      <td>2024-06-03 14:55:52</td>\n      <td>1.2024.143</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6478c49c-7499-4669-96f1-eea74c294b5d</td>\n      <td>Ifra Fariyal</td>\n      <td>excellent</td>\n      <td>4</td>\n      <td>0</td>\n      <td>1.2024.139</td>\n      <td>2024-06-03 14:55:37</td>\n      <td>1.2024.139</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"dx.size","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:02:59.601726Z","iopub.execute_input":"2024-06-05T11:02:59.602275Z","iopub.status.idle":"2024-06-05T11:02:59.612496Z","shell.execute_reply.started":"2024-06-05T11:02:59.602236Z","shell.execute_reply":"2024-06-05T11:02:59.610611Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"1081224"},"metadata":{}}]},{"cell_type":"code","source":"df = dx.sample(10000)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:02.399865Z","iopub.execute_input":"2024-06-05T11:03:02.400388Z","iopub.status.idle":"2024-06-05T11:03:02.431588Z","shell.execute_reply.started":"2024-06-05T11:03:02.400352Z","shell.execute_reply":"2024-06-05T11:03:02.430097Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"                                   reviewId               userName  \\\n95949  02b528a4-e727-4050-8d1b-51cc962b2249  Haran Md Joshim Uddin   \n61359  c39b4a70-9e7b-4461-9910-01e6a7bdb04b            Ph√°t Nguy·ªÖn   \n27401  98dac2b2-13d1-4062-baed-a7e976c56b72     Minhaj khan Marwat   \n65863  832c4ad6-c82d-43a5-bd22-fb1358453c4c       Arcane Guide6242   \n43785  244037cc-2818-4cef-8893-b9ee558a67ea     Syed afaq ali shah   \n\n                                                 content  score  \\\n95949                                               good      5   \n61359  the app using auto correct from swiftkey, so t...      2   \n27401  I am very grateful to you, you are teaching ve...      5   \n65863                              Bring back voice chat      1   \n43785                       a very good and valuable app      5   \n\n       thumbsUpCount reviewCreatedVersion                   at  appVersion  \n95949              0           1.2024.101  2024-04-25 09:31:09  1.2024.101  \n61359              0             1.0.0026  2023-08-03 17:49:25    1.0.0026  \n27401              0           1.2024.101  2024-04-25 20:37:40  1.2024.101  \n65863              0           1.2024.087  2024-04-07 21:02:17  1.2024.087  \n43785              0           1.2024.108  2024-04-26 07:18:26  1.2024.108  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>reviewId</th>\n      <th>userName</th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbsUpCount</th>\n      <th>reviewCreatedVersion</th>\n      <th>at</th>\n      <th>appVersion</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>02b528a4-e727-4050-8d1b-51cc962b2249</td>\n      <td>Haran Md Joshim Uddin</td>\n      <td>good</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>2024-04-25 09:31:09</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>c39b4a70-9e7b-4461-9910-01e6a7bdb04b</td>\n      <td>Ph√°t Nguy·ªÖn</td>\n      <td>the app using auto correct from swiftkey, so t...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1.0.0026</td>\n      <td>2023-08-03 17:49:25</td>\n      <td>1.0.0026</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>98dac2b2-13d1-4062-baed-a7e976c56b72</td>\n      <td>Minhaj khan Marwat</td>\n      <td>I am very grateful to you, you are teaching ve...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>2024-04-25 20:37:40</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>832c4ad6-c82d-43a5-bd22-fb1358453c4c</td>\n      <td>Arcane Guide6242</td>\n      <td>Bring back voice chat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1.2024.087</td>\n      <td>2024-04-07 21:02:17</td>\n      <td>1.2024.087</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>244037cc-2818-4cef-8893-b9ee558a67ea</td>\n      <td>Syed afaq ali shah</td>\n      <td>a very good and valuable app</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.108</td>\n      <td>2024-04-26 07:18:26</td>\n      <td>1.2024.108</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.rename(columns={'reviewId': 'review_id',\n                  'userName':'user_name',\n                  'thumbsUpCount': 'thumbs_up_count',\n                  'reviewCreatedVersion':'review_created_version',\n                  'appVersion':'app_version'}, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:05.355688Z","iopub.execute_input":"2024-06-05T11:03:05.356194Z","iopub.status.idle":"2024-06-05T11:03:05.364655Z","shell.execute_reply.started":"2024-06-05T11:03:05.356153Z","shell.execute_reply":"2024-06-05T11:03:05.362792Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"df.columns","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:06.936981Z","iopub.execute_input":"2024-06-05T11:03:06.937526Z","iopub.status.idle":"2024-06-05T11:03:06.947287Z","shell.execute_reply.started":"2024-06-05T11:03:06.937486Z","shell.execute_reply":"2024-06-05T11:03:06.945691Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"Index(['review_id', 'user_name', 'content', 'score', 'thumbs_up_count',\n       'review_created_version', 'at', 'app_version'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:09.639084Z","iopub.execute_input":"2024-06-05T11:03:09.639521Z","iopub.status.idle":"2024-06-05T11:03:09.648023Z","shell.execute_reply.started":"2024-06-05T11:03:09.639487Z","shell.execute_reply":"2024-06-05T11:03:09.646303Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"(10000, 8)"},"metadata":{}}]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:11.769860Z","iopub.execute_input":"2024-06-05T11:03:11.770459Z","iopub.status.idle":"2024-06-05T11:03:11.799145Z","shell.execute_reply.started":"2024-06-05T11:03:11.770412Z","shell.execute_reply":"2024-06-05T11:03:11.797404Z"},"trusted":true},"execution_count":9,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 10000 entries, 95949 to 92930\nData columns (total 8 columns):\n #   Column                  Non-Null Count  Dtype \n---  ------                  --------------  ----- \n 0   review_id               10000 non-null  object\n 1   user_name               10000 non-null  object\n 2   content                 10000 non-null  object\n 3   score                   10000 non-null  int64 \n 4   thumbs_up_count         10000 non-null  int64 \n 5   review_created_version  9194 non-null   object\n 6   at                      10000 non-null  object\n 7   app_version             9194 non-null   object\ndtypes: int64(2), object(6)\nmemory usage: 703.1+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:13.329827Z","iopub.execute_input":"2024-06-05T11:03:13.330621Z","iopub.status.idle":"2024-06-05T11:03:13.359796Z","shell.execute_reply.started":"2024-06-05T11:03:13.330561Z","shell.execute_reply":"2024-06-05T11:03:13.357906Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"review_id                   0\nuser_name                   0\ncontent                     0\nscore                       0\nthumbs_up_count             0\nreview_created_version    806\nat                          0\napp_version               806\ndtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df.describe().T","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:14.238227Z","iopub.execute_input":"2024-06-05T11:03:14.238797Z","iopub.status.idle":"2024-06-05T11:03:14.269652Z","shell.execute_reply.started":"2024-06-05T11:03:14.238731Z","shell.execute_reply":"2024-06-05T11:03:14.268307Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"                   count    mean       std  min  25%  50%  75%    max\nscore            10000.0  4.5027  1.087985  1.0  5.0  5.0  5.0    5.0\nthumbs_up_count  10000.0  0.4076  9.637248  0.0  0.0  0.0  0.0  637.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>score</th>\n      <td>10000.0</td>\n      <td>4.5027</td>\n      <td>1.087985</td>\n      <td>1.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>thumbs_up_count</th>\n      <td>10000.0</td>\n      <td>0.4076</td>\n      <td>9.637248</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>637.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df = df.drop_duplicates()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:14.818543Z","iopub.execute_input":"2024-06-05T11:03:14.819033Z","iopub.status.idle":"2024-06-05T11:03:14.856927Z","shell.execute_reply.started":"2024-06-05T11:03:14.818999Z","shell.execute_reply":"2024-06-05T11:03:14.855338Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"df = df.dropna()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:15.566266Z","iopub.execute_input":"2024-06-05T11:03:15.567380Z","iopub.status.idle":"2024-06-05T11:03:15.587041Z","shell.execute_reply.started":"2024-06-05T11:03:15.567336Z","shell.execute_reply":"2024-06-05T11:03:15.585638Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:19.194472Z","iopub.execute_input":"2024-06-05T11:03:19.195993Z","iopub.status.idle":"2024-06-05T11:03:19.204084Z","shell.execute_reply.started":"2024-06-05T11:03:19.195941Z","shell.execute_reply":"2024-06-05T11:03:19.202563Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"(9161, 8)"},"metadata":{}}]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:20.587893Z","iopub.execute_input":"2024-06-05T11:03:20.588307Z","iopub.status.idle":"2024-06-05T11:03:20.607902Z","shell.execute_reply.started":"2024-06-05T11:03:20.588275Z","shell.execute_reply":"2024-06-05T11:03:20.606195Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"                                  review_id              user_name  \\\n95949  02b528a4-e727-4050-8d1b-51cc962b2249  Haran Md Joshim Uddin   \n61359  c39b4a70-9e7b-4461-9910-01e6a7bdb04b            Ph√°t Nguy·ªÖn   \n27401  98dac2b2-13d1-4062-baed-a7e976c56b72     Minhaj khan Marwat   \n65863  832c4ad6-c82d-43a5-bd22-fb1358453c4c       Arcane Guide6242   \n43785  244037cc-2818-4cef-8893-b9ee558a67ea     Syed afaq ali shah   \n\n                                                 content  score  \\\n95949                                               good      5   \n61359  the app using auto correct from swiftkey, so t...      2   \n27401  I am very grateful to you, you are teaching ve...      5   \n65863                              Bring back voice chat      1   \n43785                       a very good and valuable app      5   \n\n       thumbs_up_count review_created_version                   at app_version  \n95949                0             1.2024.101  2024-04-25 09:31:09  1.2024.101  \n61359                0               1.0.0026  2023-08-03 17:49:25    1.0.0026  \n27401                0             1.2024.101  2024-04-25 20:37:40  1.2024.101  \n65863                0             1.2024.087  2024-04-07 21:02:17  1.2024.087  \n43785                0             1.2024.108  2024-04-26 07:18:26  1.2024.108  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>review_id</th>\n      <th>user_name</th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbs_up_count</th>\n      <th>review_created_version</th>\n      <th>at</th>\n      <th>app_version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>02b528a4-e727-4050-8d1b-51cc962b2249</td>\n      <td>Haran Md Joshim Uddin</td>\n      <td>good</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>2024-04-25 09:31:09</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>c39b4a70-9e7b-4461-9910-01e6a7bdb04b</td>\n      <td>Ph√°t Nguy·ªÖn</td>\n      <td>the app using auto correct from swiftkey, so t...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1.0.0026</td>\n      <td>2023-08-03 17:49:25</td>\n      <td>1.0.0026</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>98dac2b2-13d1-4062-baed-a7e976c56b72</td>\n      <td>Minhaj khan Marwat</td>\n      <td>I am very grateful to you, you are teaching ve...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>2024-04-25 20:37:40</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>832c4ad6-c82d-43a5-bd22-fb1358453c4c</td>\n      <td>Arcane Guide6242</td>\n      <td>Bring back voice chat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1.2024.087</td>\n      <td>2024-04-07 21:02:17</td>\n      <td>1.2024.087</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>244037cc-2818-4cef-8893-b9ee558a67ea</td>\n      <td>Syed afaq ali shah</td>\n      <td>a very good and valuable app</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.108</td>\n      <td>2024-04-26 07:18:26</td>\n      <td>1.2024.108</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['score'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:24.243468Z","iopub.execute_input":"2024-06-05T11:03:24.245169Z","iopub.status.idle":"2024-06-05T11:03:24.257551Z","shell.execute_reply.started":"2024-06-05T11:03:24.245099Z","shell.execute_reply":"2024-06-05T11:03:24.255899Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"score\n5    7076\n4    1108\n1     473\n3     358\n2     146\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['thumbs_up_count'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:25.347560Z","iopub.execute_input":"2024-06-05T11:03:25.348102Z","iopub.status.idle":"2024-06-05T11:03:25.360319Z","shell.execute_reply.started":"2024-06-05T11:03:25.348062Z","shell.execute_reply":"2024-06-05T11:03:25.358865Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"thumbs_up_count\n0      8808\n1       199\n2        44\n3        24\n4        14\n7         6\n6         6\n8         5\n11        5\n15        4\n10        4\n9         4\n5         4\n13        2\n12        2\n18        2\n152       2\n155       1\n37        1\n79        1\n30        1\n511       1\n190       1\n216       1\n39        1\n181       1\n150       1\n52        1\n23        1\n70        1\n68        1\n45        1\n110       1\n33        1\n637       1\n72        1\n24        1\n32        1\n34        1\n14        1\n53        1\n20        1\n16        1\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"## Data Viz ##","metadata":{}},{"cell_type":"code","source":"df.hist(figsize=(15,5))\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:26.927618Z","iopub.execute_input":"2024-06-05T11:03:26.928137Z","iopub.status.idle":"2024-06-05T11:03:27.499586Z","shell.execute_reply.started":"2024-06-05T11:03:26.928100Z","shell.execute_reply":"2024-06-05T11:03:27.497864Z"},"trusted":true},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"sns.scatterplot(x = 'score', y='thumbs_up_count',data=df)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:28.442115Z","iopub.execute_input":"2024-06-05T11:03:28.442610Z","iopub.status.idle":"2024-06-05T11:03:28.744813Z","shell.execute_reply.started":"2024-06-05T11:03:28.442574Z","shell.execute_reply":"2024-06-05T11:03:28.743151Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Feature Engineering ##","metadata":{}},{"cell_type":"code","source":"df.drop(columns=['review_id','user_name','at'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:31.050598Z","iopub.execute_input":"2024-06-05T11:03:31.051096Z","iopub.status.idle":"2024-06-05T11:03:31.060559Z","shell.execute_reply.started":"2024-06-05T11:03:31.051059Z","shell.execute_reply":"2024-06-05T11:03:31.058882Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:32.225672Z","iopub.execute_input":"2024-06-05T11:03:32.226258Z","iopub.status.idle":"2024-06-05T11:03:32.243205Z","shell.execute_reply.started":"2024-06-05T11:03:32.226218Z","shell.execute_reply":"2024-06-05T11:03:32.241296Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"                                                 content  score  \\\n95949                                               good      5   \n61359  the app using auto correct from swiftkey, so t...      2   \n27401  I am very grateful to you, you are teaching ve...      5   \n65863                              Bring back voice chat      1   \n43785                       a very good and valuable app      5   \n\n       thumbs_up_count review_created_version app_version  \n95949                0             1.2024.101  1.2024.101  \n61359                0               1.0.0026    1.0.0026  \n27401                0             1.2024.101  1.2024.101  \n65863                0             1.2024.087  1.2024.087  \n43785                0             1.2024.108  1.2024.108  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbs_up_count</th>\n      <th>review_created_version</th>\n      <th>app_version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>good</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>the app using auto correct from swiftkey, so t...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1.0.0026</td>\n      <td>1.0.0026</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>I am very grateful to you, you are teaching ve...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.101</td>\n      <td>1.2024.101</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>Bring back voice chat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1.2024.087</td>\n      <td>1.2024.087</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>a very good and valuable app</td>\n      <td>5</td>\n      <td>0</td>\n      <td>1.2024.108</td>\n      <td>1.2024.108</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Encoding ##","metadata":{}},{"cell_type":"code","source":"le = LabelEncoder()\ndf['review_created_version'] = le.fit_transform(df['review_created_version'])","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:33.902002Z","iopub.execute_input":"2024-06-05T11:03:33.902557Z","iopub.status.idle":"2024-06-05T11:03:33.914596Z","shell.execute_reply.started":"2024-06-05T11:03:33.902513Z","shell.execute_reply":"2024-06-05T11:03:33.912896Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"oe = OrdinalEncoder()\ndf['app_version'] = oe.fit_transform(df[['app_version']]) ","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:35.500182Z","iopub.execute_input":"2024-06-05T11:03:35.500657Z","iopub.status.idle":"2024-06-05T11:03:35.514616Z","shell.execute_reply.started":"2024-06-05T11:03:35.500621Z","shell.execute_reply":"2024-06-05T11:03:35.513082Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:39.197809Z","iopub.execute_input":"2024-06-05T11:03:39.198316Z","iopub.status.idle":"2024-06-05T11:03:39.215546Z","shell.execute_reply.started":"2024-06-05T11:03:39.198279Z","shell.execute_reply":"2024-06-05T11:03:39.213737Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"                                                 content  score  \\\n95949                                               good      5   \n61359  the app using auto correct from swiftkey, so t...      2   \n27401  I am very grateful to you, you are teaching ve...      5   \n65863                              Bring back voice chat      1   \n43785                       a very good and valuable app      5   \n\n       thumbs_up_count  review_created_version  app_version  \n95949                0                      46         46.0  \n61359                0                       3          3.0  \n27401                0                      46         46.0  \n65863                0                      44         44.0  \n43785                0                      47         47.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbs_up_count</th>\n      <th>review_created_version</th>\n      <th>app_version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>good</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>the app using auto correct from swiftkey, so t...</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>I am very grateful to you, you are teaching ve...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>Bring back voice chat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>44</td>\n      <td>44.0</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>a very good and valuable app</td>\n      <td>5</td>\n      <td>0</td>\n      <td>47</td>\n      <td>47.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Applying NLP to Analyze Content ##","metadata":{}},{"cell_type":"code","source":"df['content']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:43.193624Z","iopub.execute_input":"2024-06-05T11:03:43.194159Z","iopub.status.idle":"2024-06-05T11:03:43.207803Z","shell.execute_reply.started":"2024-06-05T11:03:43.194119Z","shell.execute_reply":"2024-06-05T11:03:43.206416Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey, so t...\n27401     I am very grateful to you, you are teaching ve...\n65863                                 Bring back voice chat\n43785                          a very good and valuable app\n                                ...                        \n45803                           include Picture for example\n112446                                                 good\n120897                                            excellent\n64267                                        very very nice\n92930                                              good one\nName: content, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"df['content'] = df['content'].str.lower()\ndf['content']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:44.320621Z","iopub.execute_input":"2024-06-05T11:03:44.321087Z","iopub.status.idle":"2024-06-05T11:03:44.344757Z","shell.execute_reply.started":"2024-06-05T11:03:44.321053Z","shell.execute_reply":"2024-06-05T11:03:44.343151Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey, so t...\n27401     i am very grateful to you, you are teaching ve...\n65863                                 bring back voice chat\n43785                          a very good and valuable app\n                                ...                        \n45803                           include picture for example\n112446                                                 good\n120897                                            excellent\n64267                                        very very nice\n92930                                              good one\nName: content, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def remove_html_tags(text):\n    clean_text = re.sub('<.*>', '', text)\n    return clean_text\n\ndf['content'] = df['content'].apply(remove_html_tags)\ndf['content'].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:44.638429Z","iopub.execute_input":"2024-06-05T11:03:44.638947Z","iopub.status.idle":"2024-06-05T11:03:44.671471Z","shell.execute_reply.started":"2024-06-05T11:03:44.638909Z","shell.execute_reply":"2024-06-05T11:03:44.669789Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey, so t...\n27401     i am very grateful to you, you are teaching ve...\n65863                                 bring back voice chat\n43785                          a very good and valuable app\n64195                                      very much useful\n71130     absolute must have for a student ... alwase fo...\n116796                                         best chatgpt\n124640                                      good experience\n109804                                                  wow\n8686      it's amazing app though yet to learn more abou...\n128732                                                  owo\n126713                                       perfectly good\n107308                                                super\n71411                                 man.this is greatt..!\n21669                              very useful üëå üëçüèæ üëè üòÄ üôÇ üòä\n80235             this is a good app its solve's properly üëç\n102284                                       very satisfied\n76658              best app ever for the knowledge seekers.\n60809                                          voice is bad\nName: content, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def remove_urls(text):\n    url_pattern = re.compile(r'https?://\\S+|www\\.\\S+')\n    clean_text = re.sub(url_pattern, '', text)\n    return clean_text\n\ndf['content'] = df['content'].apply(remove_urls)\ndf['content'].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:46.999359Z","iopub.execute_input":"2024-06-05T11:03:46.999926Z","iopub.status.idle":"2024-06-05T11:03:47.066210Z","shell.execute_reply.started":"2024-06-05T11:03:46.999886Z","shell.execute_reply":"2024-06-05T11:03:47.064502Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey, so t...\n27401     i am very grateful to you, you are teaching ve...\n65863                                 bring back voice chat\n43785                          a very good and valuable app\n64195                                      very much useful\n71130     absolute must have for a student ... alwase fo...\n116796                                         best chatgpt\n124640                                      good experience\n109804                                                  wow\n8686      it's amazing app though yet to learn more abou...\n128732                                                  owo\n126713                                       perfectly good\n107308                                                super\n71411                                 man.this is greatt..!\n21669                              very useful üëå üëçüèæ üëè üòÄ üôÇ üòä\n80235             this is a good app its solve's properly üëç\n102284                                       very satisfied\n76658              best app ever for the knowledge seekers.\n60809                                          voice is bad\nName: content, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def remove_punc(text):\n    punc = string.punctuation\n    clean_text = text.translate(str.maketrans('','', punc))\n    return clean_text\n\ndf['content'] = df['content'].apply(remove_punc)\ndf['content'].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:47.533997Z","iopub.execute_input":"2024-06-05T11:03:47.534405Z","iopub.status.idle":"2024-06-05T11:03:47.597598Z","shell.execute_reply.started":"2024-06-05T11:03:47.534370Z","shell.execute_reply":"2024-06-05T11:03:47.595997Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey so th...\n27401     i am very grateful to you you are teaching ver...\n65863                                 bring back voice chat\n43785                          a very good and valuable app\n64195                                      very much useful\n71130     absolute must have for a student  alwase found...\n116796                                         best chatgpt\n124640                                      good experience\n109804                                                  wow\n8686      its amazing app though yet to learn more about...\n128732                                                  owo\n126713                                       perfectly good\n107308                                                super\n71411                                     manthis is greatt\n21669                              very useful üëå üëçüèæ üëè üòÄ üôÇ üòä\n80235              this is a good app its solves properly üëç\n102284                                       very satisfied\n76658               best app ever for the knowledge seekers\n60809                                          voice is bad\nName: content, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"chat_words_mapping = {\n    \"lol\": \"laughing out loud\",\n    \"brb\": \"be right back\",\n    \"btw\": \"by the way\",\n    \"afk\": \"away from keyboard\",\n    \"rofl\": \"rolling on the floor laughing\",\n    \"ttyl\": \"talk to you later\",\n    \"np\": \"no problem\",\n    \"thx\": \"thanks\",\n    \"omg\": \"oh my god\",\n    \"idk\": \"I don't know\",\n    \"np\": \"no problem\",\n    \"gg\": \"good game\",\n    \"g2g\": \"got to go\",\n    \"b4\": \"before\",\n    \"cu\": \"see you\",\n    \"yw\": \"you're welcome\",\n    \"wtf\": \"what the f*ck\",\n    \"imho\": \"in my humble opinion\",\n    \"jk\": \"just kidding\",\n    \"gf\": \"girlfriend\",\n    \"bf\": \"boyfriend\",\n    \"u\": \"you\",\n    \"r\": \"are\",\n    \"2\": \"to\",\n    \"4\": \"for\",\n    \"b\": \"be\",\n    \"c\": \"see\",\n    \"y\": \"why\",\n    \"tho\": \"though\",\n    \"smh\": \"shaking my head\",\n    \"lolz\": \"laughing out loud\",\n    \"h8\": \"hate\",\n    \"luv\": \"love\",\n    \"pls\": \"please\",\n    \"sry\": \"sorry\",\n    \"tbh\": \"to be honest\",\n    \"omw\": \"on my way\",\n    \"omw2syg\": \"on my way to see your girlfriend\",\n}\n\ndef expand_chat_words(text):\n    words = text.split()\n    expanded_words = [chat_words_mapping.get(word.lower(), word) for word in words]\n    return ' '.join(expanded_words)\n\ndf['content'] = df['content'].apply(expand_chat_words)\ndf['content'].head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:48.423866Z","iopub.execute_input":"2024-06-05T11:03:48.424388Z","iopub.status.idle":"2024-06-05T11:03:48.504042Z","shell.execute_reply.started":"2024-06-05T11:03:48.424354Z","shell.execute_reply":"2024-06-05T11:03:48.502371Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359     the app using auto correct from swiftkey so th...\n27401     i am very grateful to you you are teaching ver...\n65863                                 bring back voice chat\n43785                          a very good and valuable app\n64195                                      very much useful\n71130     absolute must have for a student alwase found ...\n116796                                         best chatgpt\n124640                                      good experience\n109804                                                  wow\n8686      its amazing app though yet to learn more about...\n128732                                                  owo\n126713                                       perfectly good\n107308                                                super\n71411                                     manthis is greatt\n21669                              very useful üëå üëçüèæ üëè üòÄ üôÇ üòä\n80235              this is a good app its solves properly üëç\n102284                                       very satisfied\n76658               best app ever for the knowledge seekers\n60809                                          voice is bad\nName: content, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def remove_stop_words(text):\n    tokens = nltk.word_tokenize(text)\n    stop_words = set(stopwords.words('english'))\n    filtered_tokens = [token for token in tokens if token not in stop_words]\n    preprocessed_text = ''.join(filtered_tokens)\n    return preprocessed_text","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:49.994534Z","iopub.execute_input":"2024-06-05T11:03:49.995011Z","iopub.status.idle":"2024-06-05T11:03:50.003971Z","shell.execute_reply.started":"2024-06-05T11:03:49.994976Z","shell.execute_reply":"2024-06-05T11:03:50.002186Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"df['content'] = df['content'].apply(remove_stop_words)\ndf['content']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:52.143375Z","iopub.execute_input":"2024-06-05T11:03:52.143804Z","iopub.status.idle":"2024-06-05T11:03:55.793175Z","shell.execute_reply.started":"2024-06-05T11:03:52.143756Z","shell.execute_reply":"2024-06-05T11:03:55.791208Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359                appusingautocorrectswiftkeybuglanguage\n27401     gratefulteachingwellprovidingusinformationgood...\n65863                                    bringbackvoicechat\n43785                                       goodvaluableapp\n                                ...                        \n45803                                 includepictureexample\n112446                                                 good\n120897                                            excellent\n64267                                                  nice\n92930                                               goodone\nName: content, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def replace_emojis_with_meanings(text):\n    def replace(match):\n        emoji_char = match.group()\n        emoji_meaning = emoji.demojize(emoji_char)\n        return emoji_meaning\n\n    emoji_pattern = re.compile(\"[\"\n                            u\"\\U0001F600-\\U0001F64F\"\n                            u\"\\U0001F300-\\U0001F5FF\"\n                            u\"\\U0001F680-\\U0001F6FF\"\n                            u\"\\U0001F1E0-\\U0001F1FF\"\n                            u\"\\U00002500-\\U00002BEF\"\n                            u\"\\U00002702-\\U000027B0\"\n                            u\"\\U00002702-\\U000027B0\"\n                            u\"\\U000024C2-\\U0001F251\"\n                            u\"\\U0001f926-\\U0001f937\"\n                            u\"\\U00010000-\\U0010ffff\"\n                            u\"\\u2640-\\u2642\"\n                            u\"\\u2600-\\u2B55\"\n                            u\"\\u200d\"\n                            u\"\\u23cf\"\n                            u\"\\u23e9\"\n                            u\"\\u231a\"\n                            u\"\\ufe0f\"\n                            u\"\\u3030\"\n                            \"]+\", flags=re.UNICODE)\n    text_with_meanings = emoji_pattern.sub(replace, text)\n    return text_with_meanings","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:58.057594Z","iopub.execute_input":"2024-06-05T11:03:58.058246Z","iopub.status.idle":"2024-06-05T11:03:58.068550Z","shell.execute_reply.started":"2024-06-05T11:03:58.058204Z","shell.execute_reply":"2024-06-05T11:03:58.066383Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"df['content'] = df['content'].apply(replace_emojis_with_meanings)\ndf['content']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:58.733921Z","iopub.execute_input":"2024-06-05T11:03:58.734447Z","iopub.status.idle":"2024-06-05T11:03:58.847999Z","shell.execute_reply.started":"2024-06-05T11:03:58.734409Z","shell.execute_reply":"2024-06-05T11:03:58.846249Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"95949                                                  good\n61359                appusingautocorrectswiftkeybuglanguage\n27401     gratefulteachingwellprovidingusinformationgood...\n65863                                    bringbackvoicechat\n43785                                       goodvaluableapp\n                                ...                        \n45803                                 includepictureexample\n112446                                                 good\n120897                                            excellent\n64267                                                  nice\n92930                                               goodone\nName: content, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"def word_tokenization(text):\n    return nltk.word_tokenize(text)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:03:59.935810Z","iopub.execute_input":"2024-06-05T11:03:59.936364Z","iopub.status.idle":"2024-06-05T11:03:59.943315Z","shell.execute_reply.started":"2024-06-05T11:03:59.936322Z","shell.execute_reply":"2024-06-05T11:03:59.941732Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"df['token_content'] = df['content'].apply(word_tokenization)\ndf['token_content']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:04:00.871383Z","iopub.execute_input":"2024-06-05T11:04:00.873124Z","iopub.status.idle":"2024-06-05T11:04:02.928241Z","shell.execute_reply.started":"2024-06-05T11:04:00.873077Z","shell.execute_reply":"2024-06-05T11:04:02.926555Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"95949                                                [good]\n61359              [appusingautocorrectswiftkeybuglanguage]\n27401     [gratefulteachingwellprovidingusinformationgoo...\n65863                                  [bringbackvoicechat]\n43785                                     [goodvaluableapp]\n                                ...                        \n45803                               [includepictureexample]\n112446                                               [good]\n120897                                          [excellent]\n64267                                                [nice]\n92930                                             [goodone]\nName: token_content, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"## Part of Speech Tagging (POS Tagging) ##","metadata":{}},{"cell_type":"code","source":"nlp = spacy.load('en_core_web_sm', disable=['ner', 'textcat'])\n\ndef batch_pos_tagging(texts):\n    docs = list(nlp.pipe(texts, batch_size=50))\n    return [[(token.text, token.pos_) for token in doc] for doc in docs]\n\nbatch_size = 50\nnum_batches = len(df) // batch_size + 1\n\npos_tags = []\nfor i in tqdm(range(num_batches)):\n    start = i * batch_size\n    end = start + batch_size\n    batch_texts = df['content'][start:end].tolist()\n    pos_tags.extend(batch_pos_tagging(batch_texts))\n\ndf['POS_Tags'] = pos_tags","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:04:06.132483Z","iopub.execute_input":"2024-06-05T11:04:06.133051Z","iopub.status.idle":"2024-06-05T11:04:14.526915Z","shell.execute_reply.started":"2024-06-05T11:04:06.133008Z","shell.execute_reply":"2024-06-05T11:04:14.525397Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stderr","text":"100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 184/184 [00:06<00:00, 26.52it/s]\n","output_type":"stream"}]},{"cell_type":"code","source":"df.rename(columns={'POS_Tags': 'pos_tags'}, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:09:02.353407Z","iopub.execute_input":"2024-06-05T11:09:02.354193Z","iopub.status.idle":"2024-06-05T11:09:02.363323Z","shell.execute_reply.started":"2024-06-05T11:09:02.354136Z","shell.execute_reply":"2024-06-05T11:09:02.361207Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"df['pos_tags']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:09:08.571570Z","iopub.execute_input":"2024-06-05T11:09:08.572139Z","iopub.status.idle":"2024-06-05T11:09:08.588740Z","shell.execute_reply.started":"2024-06-05T11:09:08.572098Z","shell.execute_reply":"2024-06-05T11:09:08.587434Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"95949                                         [(good, ADJ)]\n61359      [(appusingautocorrectswiftkeybuglanguage, NOUN)]\n27401     [(gratefulteachingwellprovidingusinformationgo...\n65863                          [(bringbackvoicechat, PRON)]\n43785                             [(goodvaluableapp, NOUN)]\n                                ...                        \n45803                       [(includepictureexample, NOUN)]\n112446                                        [(good, ADJ)]\n120897                                   [(excellent, ADJ)]\n64267                                         [(nice, ADJ)]\n92930                                      [(goodone, ADV)]\nName: pos_tags, Length: 9161, dtype: object"},"metadata":{}}]},{"cell_type":"code","source":"df.head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:09:13.329721Z","iopub.execute_input":"2024-06-05T11:09:13.330883Z","iopub.status.idle":"2024-06-05T11:09:13.399418Z","shell.execute_reply.started":"2024-06-05T11:09:13.330830Z","shell.execute_reply":"2024-06-05T11:09:13.395788Z"},"trusted":true},"execution_count":42,"outputs":[{"execution_count":42,"output_type":"execute_result","data":{"text/plain":"                                                  content  score  \\\n95949                                                good      5   \n61359              appusingautocorrectswiftkeybuglanguage      2   \n27401   gratefulteachingwellprovidingusinformationgood...      5   \n65863                                  bringbackvoicechat      1   \n43785                                     goodvaluableapp      5   \n64195                                          muchuseful      5   \n71130   absolutemuststudentalwasefoundsuggestionswhene...      5   \n116796                                        bestchatgpt      5   \n124640                                     goodexperience      5   \n109804                                                wow      5   \n8686    amazingappthoughyetlearntimegoesknowmuchbenefi...      3   \n128732                                                owo      5   \n126713                                      perfectlygood      4   \n107308                                              super      4   \n71411                                       manthisgreatt      5   \n21669   useful:OK_hand::thumbs_up_medium-dark_skin_ton...      5   \n80235                    goodappsolvesproperly:thumbs_up:      4   \n102284                                          satisfied      5   \n76658                         bestappeverknowledgeseekers      5   \n60809                                            voicebad      5   \n\n        thumbs_up_count  review_created_version  app_version  \\\n95949                 0                      46         46.0   \n61359                 0                       3          3.0   \n27401                 0                      46         46.0   \n65863                 0                      44         44.0   \n43785                 0                      47         47.0   \n64195                 0                      37         37.0   \n71130                 0                       0          0.0   \n116796                0                      27         27.0   \n124640                0                      12         12.0   \n109804                0                      38         38.0   \n8686                  0                      51         51.0   \n128732                0                       6          6.0   \n126713                0                       8          8.0   \n107308                0                      42         42.0   \n71411                 0                      38         38.0   \n21669                 0                      49         49.0   \n80235                 0                       7          7.0   \n102284                0                      43         43.0   \n76658                 0                       3          3.0   \n60809                 0                      45         45.0   \n\n                                            token_content  \\\n95949                                              [good]   \n61359            [appusingautocorrectswiftkeybuglanguage]   \n27401   [gratefulteachingwellprovidingusinformationgoo...   \n65863                                [bringbackvoicechat]   \n43785                                   [goodvaluableapp]   \n64195                                        [muchuseful]   \n71130   [absolutemuststudentalwasefoundsuggestionswhen...   \n116796                                      [bestchatgpt]   \n124640                                   [goodexperience]   \n109804                                              [wow]   \n8686    [amazingappthoughyetlearntimegoesknowmuchbenef...   \n128732                                              [owo]   \n126713                                    [perfectlygood]   \n107308                                            [super]   \n71411                                     [manthisgreatt]   \n21669   [useful, :, OK_hand, :, :thumbs_up_medium-dark...   \n80235            [goodappsolvesproperly, :, thumbs_up, :]   \n102284                                        [satisfied]   \n76658                       [bestappeverknowledgeseekers]   \n60809                                          [voicebad]   \n\n                                                 pos_tags  \n95949                                       [(good, ADJ)]  \n61359    [(appusingautocorrectswiftkeybuglanguage, NOUN)]  \n27401   [(gratefulteachingwellprovidingusinformationgo...  \n65863                        [(bringbackvoicechat, PRON)]  \n43785                           [(goodvaluableapp, NOUN)]  \n64195                                 [(muchuseful, ADJ)]  \n71130   [(absolutemuststudentalwasefoundsuggestionswhe...  \n116796                              [(bestchatgpt, NOUN)]  \n124640                           [(goodexperience, NOUN)]  \n109804                                      [(wow, INTJ)]  \n8686    [(amazingappthoughyetlearntimegoesknowmuchbene...  \n128732                                     [(owo, PROPN)]  \n126713                            [(perfectlygood, NOUN)]  \n107308                                       [(super, X)]  \n71411                            [(manthisgreatt, PROPN)]  \n21669   [(useful, ADJ), (:, PUNCT), (OK_hand::thumbs_u...  \n80235   [(goodappsolvesproperly, ADV), (:, PUNCT), (th...  \n102284                                 [(satisfied, ADJ)]  \n76658               [(bestappeverknowledgeseekers, NOUN)]  \n60809                                 [(voicebad, PROPN)]  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbs_up_count</th>\n      <th>review_created_version</th>\n      <th>app_version</th>\n      <th>token_content</th>\n      <th>pos_tags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>good</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n      <td>[good]</td>\n      <td>[(good, ADJ)]</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>appusingautocorrectswiftkeybuglanguage</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3.0</td>\n      <td>[appusingautocorrectswiftkeybuglanguage]</td>\n      <td>[(appusingautocorrectswiftkeybuglanguage, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>gratefulteachingwellprovidingusinformationgood...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n      <td>[gratefulteachingwellprovidingusinformationgoo...</td>\n      <td>[(gratefulteachingwellprovidingusinformationgo...</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>bringbackvoicechat</td>\n      <td>1</td>\n      <td>0</td>\n      <td>44</td>\n      <td>44.0</td>\n      <td>[bringbackvoicechat]</td>\n      <td>[(bringbackvoicechat, PRON)]</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>goodvaluableapp</td>\n      <td>5</td>\n      <td>0</td>\n      <td>47</td>\n      <td>47.0</td>\n      <td>[goodvaluableapp]</td>\n      <td>[(goodvaluableapp, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>64195</th>\n      <td>muchuseful</td>\n      <td>5</td>\n      <td>0</td>\n      <td>37</td>\n      <td>37.0</td>\n      <td>[muchuseful]</td>\n      <td>[(muchuseful, ADJ)]</td>\n    </tr>\n    <tr>\n      <th>71130</th>\n      <td>absolutemuststudentalwasefoundsuggestionswhene...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>[absolutemuststudentalwasefoundsuggestionswhen...</td>\n      <td>[(absolutemuststudentalwasefoundsuggestionswhe...</td>\n    </tr>\n    <tr>\n      <th>116796</th>\n      <td>bestchatgpt</td>\n      <td>5</td>\n      <td>0</td>\n      <td>27</td>\n      <td>27.0</td>\n      <td>[bestchatgpt]</td>\n      <td>[(bestchatgpt, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>124640</th>\n      <td>goodexperience</td>\n      <td>5</td>\n      <td>0</td>\n      <td>12</td>\n      <td>12.0</td>\n      <td>[goodexperience]</td>\n      <td>[(goodexperience, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>109804</th>\n      <td>wow</td>\n      <td>5</td>\n      <td>0</td>\n      <td>38</td>\n      <td>38.0</td>\n      <td>[wow]</td>\n      <td>[(wow, INTJ)]</td>\n    </tr>\n    <tr>\n      <th>8686</th>\n      <td>amazingappthoughyetlearntimegoesknowmuchbenefi...</td>\n      <td>3</td>\n      <td>0</td>\n      <td>51</td>\n      <td>51.0</td>\n      <td>[amazingappthoughyetlearntimegoesknowmuchbenef...</td>\n      <td>[(amazingappthoughyetlearntimegoesknowmuchbene...</td>\n    </tr>\n    <tr>\n      <th>128732</th>\n      <td>owo</td>\n      <td>5</td>\n      <td>0</td>\n      <td>6</td>\n      <td>6.0</td>\n      <td>[owo]</td>\n      <td>[(owo, PROPN)]</td>\n    </tr>\n    <tr>\n      <th>126713</th>\n      <td>perfectlygood</td>\n      <td>4</td>\n      <td>0</td>\n      <td>8</td>\n      <td>8.0</td>\n      <td>[perfectlygood]</td>\n      <td>[(perfectlygood, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>107308</th>\n      <td>super</td>\n      <td>4</td>\n      <td>0</td>\n      <td>42</td>\n      <td>42.0</td>\n      <td>[super]</td>\n      <td>[(super, X)]</td>\n    </tr>\n    <tr>\n      <th>71411</th>\n      <td>manthisgreatt</td>\n      <td>5</td>\n      <td>0</td>\n      <td>38</td>\n      <td>38.0</td>\n      <td>[manthisgreatt]</td>\n      <td>[(manthisgreatt, PROPN)]</td>\n    </tr>\n    <tr>\n      <th>21669</th>\n      <td>useful:OK_hand::thumbs_up_medium-dark_skin_ton...</td>\n      <td>5</td>\n      <td>0</td>\n      <td>49</td>\n      <td>49.0</td>\n      <td>[useful, :, OK_hand, :, :thumbs_up_medium-dark...</td>\n      <td>[(useful, ADJ), (:, PUNCT), (OK_hand::thumbs_u...</td>\n    </tr>\n    <tr>\n      <th>80235</th>\n      <td>goodappsolvesproperly:thumbs_up:</td>\n      <td>4</td>\n      <td>0</td>\n      <td>7</td>\n      <td>7.0</td>\n      <td>[goodappsolvesproperly, :, thumbs_up, :]</td>\n      <td>[(goodappsolvesproperly, ADV), (:, PUNCT), (th...</td>\n    </tr>\n    <tr>\n      <th>102284</th>\n      <td>satisfied</td>\n      <td>5</td>\n      <td>0</td>\n      <td>43</td>\n      <td>43.0</td>\n      <td>[satisfied]</td>\n      <td>[(satisfied, ADJ)]</td>\n    </tr>\n    <tr>\n      <th>76658</th>\n      <td>bestappeverknowledgeseekers</td>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3.0</td>\n      <td>[bestappeverknowledgeseekers]</td>\n      <td>[(bestappeverknowledgeseekers, NOUN)]</td>\n    </tr>\n    <tr>\n      <th>60809</th>\n      <td>voicebad</td>\n      <td>5</td>\n      <td>0</td>\n      <td>45</td>\n      <td>45.0</td>\n      <td>[voicebad]</td>\n      <td>[(voicebad, PROPN)]</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Bag of Words ##","metadata":{}},{"cell_type":"code","source":"df['content'] = df['content'].apply(lambda x: ' '.join(x) \n                                    if isinstance(x, list) \n                                    else x)\ndf['token_content'] = df['token_content'].apply(lambda x: ' '.join(x) \n                                                if isinstance(x, list) \n                                                else x)\ndf['pos_tags'] = df['pos_tags'].apply(lambda x: ' '.join(str(i) for i in x) \n                                      if isinstance(x, list) \n                                      else x)\n\nvectorizer = CountVectorizer(ngram_range = (2,2))\n\nbow_c = vectorizer.fit_transform(df['content'])\nbow_t = vectorizer.fit_transform(df['token_content'])\nbow_p = vectorizer.fit_transform(df['pos_tags'])\n\ndf['content'] = bow_c.toarray()\ndf['token_content'] = bow_t.toarray()\ndf['pos_tags'] = bow_p.toarray()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:14:36.342949Z","iopub.execute_input":"2024-06-05T11:14:36.343478Z","iopub.status.idle":"2024-06-05T11:14:37.571004Z","shell.execute_reply.started":"2024-06-05T11:14:36.343437Z","shell.execute_reply":"2024-06-05T11:14:37.569509Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"df.head(20)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:14:45.538505Z","iopub.execute_input":"2024-06-05T11:14:45.539021Z","iopub.status.idle":"2024-06-05T11:14:45.561155Z","shell.execute_reply.started":"2024-06-05T11:14:45.538985Z","shell.execute_reply":"2024-06-05T11:14:45.559560Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"        content  score  thumbs_up_count  review_created_version  app_version  \\\n95949         0      5                0                      46         46.0   \n61359         0      2                0                       3          3.0   \n27401         0      5                0                      46         46.0   \n65863         0      1                0                      44         44.0   \n43785         0      5                0                      47         47.0   \n64195         0      5                0                      37         37.0   \n71130         0      5                0                       0          0.0   \n116796        0      5                0                      27         27.0   \n124640        0      5                0                      12         12.0   \n109804        0      5                0                      38         38.0   \n8686          0      3                0                      51         51.0   \n128732        0      5                0                       6          6.0   \n126713        0      4                0                       8          8.0   \n107308        0      4                0                      42         42.0   \n71411         0      5                0                      38         38.0   \n21669         0      5                0                      49         49.0   \n80235         0      4                0                       7          7.0   \n102284        0      5                0                      43         43.0   \n76658         0      5                0                       3          3.0   \n60809         0      5                0                      45         45.0   \n\n        token_content  pos_tags  \n95949               0         0  \n61359               0         0  \n27401               0         0  \n65863               0         0  \n43785               0         0  \n64195               0         0  \n71130               0         0  \n116796              0         0  \n124640              0         0  \n109804              0         0  \n8686                0         0  \n128732              0         0  \n126713              0         0  \n107308              0         0  \n71411               0         0  \n21669               0         0  \n80235               0         0  \n102284              0         0  \n76658               0         0  \n60809               0         0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>content</th>\n      <th>score</th>\n      <th>thumbs_up_count</th>\n      <th>review_created_version</th>\n      <th>app_version</th>\n      <th>token_content</th>\n      <th>pos_tags</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>95949</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>61359</th>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27401</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>46</td>\n      <td>46.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>65863</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>44</td>\n      <td>44.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>43785</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>47</td>\n      <td>47.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>64195</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>37</td>\n      <td>37.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>71130</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>116796</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>27</td>\n      <td>27.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>124640</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>12</td>\n      <td>12.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>109804</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>38</td>\n      <td>38.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8686</th>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>51</td>\n      <td>51.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>128732</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>6</td>\n      <td>6.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>126713</th>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>8</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>107308</th>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>42</td>\n      <td>42.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>71411</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>38</td>\n      <td>38.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>21669</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>49</td>\n      <td>49.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>80235</th>\n      <td>0</td>\n      <td>4</td>\n      <td>0</td>\n      <td>7</td>\n      <td>7.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>102284</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>43</td>\n      <td>43.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>76658</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>3</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>60809</th>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>45</td>\n      <td>45.0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Test Train Split ##","metadata":{}},{"cell_type":"code","source":"X = df.drop(columns=['score'])\ny = df['score']","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:25:52.695430Z","iopub.execute_input":"2024-06-05T11:25:52.696033Z","iopub.status.idle":"2024-06-05T11:25:52.705616Z","shell.execute_reply.started":"2024-06-05T11:25:52.695995Z","shell.execute_reply":"2024-06-05T11:25:52.703883Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"X_train, X_test, y_train, y_test = train_test_split(X, y,\n                                                   test_size = 0.2,\n                                                   random_state = 42)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:26:57.122245Z","iopub.execute_input":"2024-06-05T11:26:57.122727Z","iopub.status.idle":"2024-06-05T11:26:57.135165Z","shell.execute_reply.started":"2024-06-05T11:26:57.122692Z","shell.execute_reply":"2024-06-05T11:26:57.133527Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"markdown","source":"### Decision Tree Classifier ##","metadata":{}},{"cell_type":"code","source":"dt = DecisionTreeClassifier()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:27:21.704685Z","iopub.execute_input":"2024-06-05T11:27:21.705189Z","iopub.status.idle":"2024-06-05T11:27:21.711271Z","shell.execute_reply.started":"2024-06-05T11:27:21.705157Z","shell.execute_reply":"2024-06-05T11:27:21.709669Z"},"trusted":true},"execution_count":47,"outputs":[]},{"cell_type":"code","source":"dt.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:27:39.674072Z","iopub.execute_input":"2024-06-05T11:27:39.674601Z","iopub.status.idle":"2024-06-05T11:27:39.698675Z","shell.execute_reply.started":"2024-06-05T11:27:39.674562Z","shell.execute_reply":"2024-06-05T11:27:39.697196Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"DecisionTreeClassifier()","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = dt.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:28:14.520076Z","iopub.execute_input":"2024-06-05T11:28:14.520539Z","iopub.status.idle":"2024-06-05T11:28:14.530033Z","shell.execute_reply.started":"2024-06-05T11:28:14.520504Z","shell.execute_reply":"2024-06-05T11:28:14.528813Z"},"trusted":true},"execution_count":49,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred, zero_division = 0))","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:33:36.894227Z","iopub.execute_input":"2024-06-05T11:33:36.895685Z","iopub.status.idle":"2024-06-05T11:33:36.915954Z","shell.execute_reply.started":"2024-06-05T11:33:36.895632Z","shell.execute_reply":"2024-06-05T11:33:36.914706Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           1       0.33      0.10      0.15        93\n           2       0.00      0.00      0.00        34\n           3       0.00      0.00      0.00        66\n           4       0.17      0.00      0.01       214\n           5       0.78      0.98      0.87      1426\n\n    accuracy                           0.77      1833\n   macro avg       0.26      0.22      0.21      1833\nweighted avg       0.65      0.77      0.69      1833\n\n","output_type":"stream"}]},{"cell_type":"code","source":"cm = confusion_matrix(y_test, y_pred)\ncm_display = ConfusionMatrixDisplay(confusion_matrix = cm)\n\nfig, ax = plt.subplots(figsize = (5,5))\ncm_display.plot(ax = ax)\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:56:31.397521Z","iopub.execute_input":"2024-06-05T11:56:31.398615Z","iopub.status.idle":"2024-06-05T11:56:31.768204Z","shell.execute_reply.started":"2024-06-05T11:56:31.398569Z","shell.execute_reply":"2024-06-05T11:56:31.766644Z"},"trusted":true},"execution_count":51,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### Random Forest Classifier ###","metadata":{}},{"cell_type":"code","source":"rf = RandomForestClassifier()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:57:22.618910Z","iopub.execute_input":"2024-06-05T11:57:22.619411Z","iopub.status.idle":"2024-06-05T11:57:22.626128Z","shell.execute_reply.started":"2024-06-05T11:57:22.619373Z","shell.execute_reply":"2024-06-05T11:57:22.624463Z"},"trusted":true},"execution_count":52,"outputs":[]},{"cell_type":"code","source":"rf.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:57:41.796188Z","iopub.execute_input":"2024-06-05T11:57:41.796729Z","iopub.status.idle":"2024-06-05T11:57:42.398800Z","shell.execute_reply.started":"2024-06-05T11:57:41.796689Z","shell.execute_reply":"2024-06-05T11:57:42.397451Z"},"trusted":true},"execution_count":54,"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = rf.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:58:15.949948Z","iopub.execute_input":"2024-06-05T11:58:15.950482Z","iopub.status.idle":"2024-06-05T11:58:15.999968Z","shell.execute_reply.started":"2024-06-05T11:58:15.950444Z","shell.execute_reply":"2024-06-05T11:58:15.998207Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred, zero_division=0))","metadata":{"execution":{"iopub.status.busy":"2024-06-05T11:58:50.208049Z","iopub.execute_input":"2024-06-05T11:58:50.208591Z","iopub.status.idle":"2024-06-05T11:58:50.232732Z","shell.execute_reply.started":"2024-06-05T11:58:50.208548Z","shell.execute_reply":"2024-06-05T11:58:50.230288Z"},"trusted":true},"execution_count":56,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           1       0.43      0.11      0.17        93\n           2       0.00      0.00      0.00        34\n           3       0.00      0.00      0.00        66\n           4       0.25      0.00      0.01       214\n           5       0.78      0.99      0.87      1426\n\n    accuracy                           0.77      1833\n   macro avg       0.29      0.22      0.21      1833\nweighted avg       0.66      0.77      0.69      1833\n\n","output_type":"stream"}]},{"cell_type":"code","source":"cm1 = confusion_matrix(y_test, y_pred)\ncm1_display = ConfusionMatrixDisplay(confusion_matrix = cm1)\n\nfig, ax = plt.subplots(figsize = (5,5))\ncm1_display.plot(ax=ax)\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:03:13.836872Z","iopub.execute_input":"2024-06-05T12:03:13.837319Z","iopub.status.idle":"2024-06-05T12:03:14.189725Z","shell.execute_reply.started":"2024-06-05T12:03:13.837289Z","shell.execute_reply":"2024-06-05T12:03:14.188478Z"},"trusted":true},"execution_count":58,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### Support Vector Machines ###","metadata":{}},{"cell_type":"code","source":"svm = SVC()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:05:14.002999Z","iopub.execute_input":"2024-06-05T12:05:14.004185Z","iopub.status.idle":"2024-06-05T12:05:14.009781Z","shell.execute_reply.started":"2024-06-05T12:05:14.004141Z","shell.execute_reply":"2024-06-05T12:05:14.008496Z"},"trusted":true},"execution_count":60,"outputs":[]},{"cell_type":"code","source":"svm.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:05:34.674731Z","iopub.execute_input":"2024-06-05T12:05:34.675221Z","iopub.status.idle":"2024-06-05T12:05:35.958170Z","shell.execute_reply.started":"2024-06-05T12:05:34.675174Z","shell.execute_reply":"2024-06-05T12:05:35.956728Z"},"trusted":true},"execution_count":61,"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"SVC()","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = svm.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:05:57.605632Z","iopub.execute_input":"2024-06-05T12:05:57.606131Z","iopub.status.idle":"2024-06-05T12:05:57.919260Z","shell.execute_reply.started":"2024-06-05T12:05:57.606097Z","shell.execute_reply":"2024-06-05T12:05:57.916622Z"},"trusted":true},"execution_count":62,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred, zero_division=0))","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:06:12.885233Z","iopub.execute_input":"2024-06-05T12:06:12.885790Z","iopub.status.idle":"2024-06-05T12:06:12.908615Z","shell.execute_reply.started":"2024-06-05T12:06:12.885729Z","shell.execute_reply":"2024-06-05T12:06:12.906846Z"},"trusted":true},"execution_count":63,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           1       0.00      0.00      0.00        93\n           2       0.00      0.00      0.00        34\n           3       0.00      0.00      0.00        66\n           4       0.50      0.00      0.01       214\n           5       0.78      1.00      0.88      1426\n\n    accuracy                           0.78      1833\n   macro avg       0.26      0.20      0.18      1833\nweighted avg       0.66      0.78      0.68      1833\n\n","output_type":"stream"}]},{"cell_type":"code","source":"cm2 = confusion_matrix(y_test, y_pred)\ncm2_display = ConfusionMatrixDisplay(confusion_matrix = cm2)\n\nfig, ax = plt.subplots(figsize = (5,5))\ncm2_display.plot(ax=ax)\nplt.title('Confusion Matrix')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:07:06.591975Z","iopub.execute_input":"2024-06-05T12:07:06.592471Z","iopub.status.idle":"2024-06-05T12:07:06.918751Z","shell.execute_reply.started":"2024-06-05T12:07:06.592435Z","shell.execute_reply":"2024-06-05T12:07:06.917076Z"},"trusted":true},"execution_count":66,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 500x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"### KNN ###","metadata":{}},{"cell_type":"code","source":"knn = KNeighborsClassifier(n_neighbors=3)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:13:41.207279Z","iopub.execute_input":"2024-06-05T12:13:41.207748Z","iopub.status.idle":"2024-06-05T12:13:41.214139Z","shell.execute_reply.started":"2024-06-05T12:13:41.207717Z","shell.execute_reply":"2024-06-05T12:13:41.212551Z"},"trusted":true},"execution_count":69,"outputs":[]},{"cell_type":"code","source":"knn.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:17:57.540615Z","iopub.execute_input":"2024-06-05T12:17:57.541091Z","iopub.status.idle":"2024-06-05T12:17:57.561468Z","shell.execute_reply.started":"2024-06-05T12:17:57.541056Z","shell.execute_reply":"2024-06-05T12:17:57.560139Z"},"trusted":true},"execution_count":86,"outputs":[{"execution_count":86,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=9)","text/html":"<style>#sk-container-id-8 {color: black;background-color: white;}#sk-container-id-8 pre{padding: 0;}#sk-container-id-8 div.sk-toggleable {background-color: white;}#sk-container-id-8 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-8 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-8 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-8 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-8 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-8 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-8 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-8 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-8 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-8 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-8 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-8 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-8 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-8 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-8 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-8 div.sk-item {position: relative;z-index: 1;}#sk-container-id-8 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-8 div.sk-item::before, #sk-container-id-8 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-8 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-8 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-8 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-8 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-8 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-8 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-8 div.sk-label-container {text-align: center;}#sk-container-id-8 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-8 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-8\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=9)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" checked><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=9)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = knn.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:14:33.605070Z","iopub.execute_input":"2024-06-05T12:14:33.605562Z","iopub.status.idle":"2024-06-05T12:14:33.756739Z","shell.execute_reply.started":"2024-06-05T12:14:33.605527Z","shell.execute_reply":"2024-06-05T12:14:33.755128Z"},"trusted":true},"execution_count":71,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred, zero_division=0))","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:14:44.583965Z","iopub.execute_input":"2024-06-05T12:14:44.584465Z","iopub.status.idle":"2024-06-05T12:14:44.605682Z","shell.execute_reply.started":"2024-06-05T12:14:44.584428Z","shell.execute_reply":"2024-06-05T12:14:44.604358Z"},"trusted":true},"execution_count":72,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           1       0.17      0.15      0.16        93\n           2       0.08      0.03      0.04        34\n           3       0.00      0.00      0.00        66\n           4       0.16      0.02      0.03       214\n           5       0.79      0.94      0.86      1426\n\n    accuracy                           0.75      1833\n   macro avg       0.24      0.23      0.22      1833\nweighted avg       0.64      0.75      0.68      1833\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"#### GridSearchCV for KNN ####","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:19:24.529721Z","iopub.execute_input":"2024-06-05T12:19:24.531205Z","iopub.status.idle":"2024-06-05T12:19:24.536399Z","shell.execute_reply.started":"2024-06-05T12:19:24.531152Z","shell.execute_reply":"2024-06-05T12:19:24.534856Z"}}},{"cell_type":"code","source":"param_grid = {'n_neighbors': [1, 3, 5, 7, 9, 12, 15, 25, 50, 75, 100]}","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:20:56.052563Z","iopub.execute_input":"2024-06-05T12:20:56.053047Z","iopub.status.idle":"2024-06-05T12:20:56.060234Z","shell.execute_reply.started":"2024-06-05T12:20:56.053014Z","shell.execute_reply":"2024-06-05T12:20:56.058600Z"},"trusted":true},"execution_count":93,"outputs":[]},{"cell_type":"code","source":"grid_search = GridSearchCV(knn, param_grid, cv=5, scoring='accuracy')\ngrid_search.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:20:57.073145Z","iopub.execute_input":"2024-06-05T12:20:57.073582Z","iopub.status.idle":"2024-06-05T12:21:04.014903Z","shell.execute_reply.started":"2024-06-05T12:20:57.073549Z","shell.execute_reply":"2024-06-05T12:21:04.012730Z"},"trusted":true},"execution_count":94,"outputs":[{"execution_count":94,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=5, estimator=KNeighborsClassifier(n_neighbors=9),\n             param_grid={'n_neighbors': [1, 3, 5, 7, 9, 12, 15, 25, 50, 75,\n                                         100]},\n             scoring='accuracy')","text/html":"<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=KNeighborsClassifier(n_neighbors=9),\n             param_grid={&#x27;n_neighbors&#x27;: [1, 3, 5, 7, 9, 12, 15, 25, 50, 75,\n                                         100]},\n             scoring=&#x27;accuracy&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=KNeighborsClassifier(n_neighbors=9),\n             param_grid={&#x27;n_neighbors&#x27;: [1, 3, 5, 7, 9, 12, 15, 25, 50, 75,\n                                         100]},\n             scoring=&#x27;accuracy&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=9)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=9)</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"best_k = grid_search.best_params_['n_neighbors']\nprint(\"Best k Value:\", best_k)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:21:08.645191Z","iopub.execute_input":"2024-06-05T12:21:08.645638Z","iopub.status.idle":"2024-06-05T12:21:08.652955Z","shell.execute_reply.started":"2024-06-05T12:21:08.645609Z","shell.execute_reply":"2024-06-05T12:21:08.651408Z"},"trusted":true},"execution_count":95,"outputs":[{"name":"stdout","text":"Best k Value: 50\n","output_type":"stream"}]},{"cell_type":"code","source":"knn1 = KNeighborsClassifier(n_neighbors=50)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:21:10.102202Z","iopub.execute_input":"2024-06-05T12:21:10.102744Z","iopub.status.idle":"2024-06-05T12:21:10.110395Z","shell.execute_reply.started":"2024-06-05T12:21:10.102706Z","shell.execute_reply":"2024-06-05T12:21:10.108816Z"},"trusted":true},"execution_count":96,"outputs":[]},{"cell_type":"code","source":"knn1.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:21:12.098782Z","iopub.execute_input":"2024-06-05T12:21:12.099296Z","iopub.status.idle":"2024-06-05T12:21:12.121490Z","shell.execute_reply.started":"2024-06-05T12:21:12.099259Z","shell.execute_reply":"2024-06-05T12:21:12.119993Z"},"trusted":true},"execution_count":97,"outputs":[{"execution_count":97,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=50)","text/html":"<style>#sk-container-id-12 {color: black;background-color: white;}#sk-container-id-12 pre{padding: 0;}#sk-container-id-12 div.sk-toggleable {background-color: white;}#sk-container-id-12 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-12 label.sk-toggleable__label-arrow:before {content: \"‚ñ∏\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-12 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-12 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-12 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"‚ñæ\";}#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-12 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-12 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-12 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-12 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-12 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-12 div.sk-item {position: relative;z-index: 1;}#sk-container-id-12 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-12 div.sk-item::before, #sk-container-id-12 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-12 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-12 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-12 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-12 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-12 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-12 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-12 div.sk-label-container {text-align: center;}#sk-container-id-12 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-12 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=50)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=50)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"y_pred1 = knn1.predict(X_test)","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:21:14.683946Z","iopub.execute_input":"2024-06-05T12:21:14.684562Z","iopub.status.idle":"2024-06-05T12:21:14.854702Z","shell.execute_reply.started":"2024-06-05T12:21:14.684515Z","shell.execute_reply":"2024-06-05T12:21:14.853179Z"},"trusted":true},"execution_count":98,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test, y_pred1, zero_division=0))","metadata":{"execution":{"iopub.status.busy":"2024-06-05T12:21:15.812665Z","iopub.execute_input":"2024-06-05T12:21:15.813680Z","iopub.status.idle":"2024-06-05T12:21:15.833804Z","shell.execute_reply.started":"2024-06-05T12:21:15.813635Z","shell.execute_reply":"2024-06-05T12:21:15.832579Z"},"trusted":true},"execution_count":99,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           1       0.00      0.00      0.00        93\n           2       0.00      0.00      0.00        34\n           3       0.00      0.00      0.00        66\n           4       0.00      0.00      0.00       214\n           5       0.78      1.00      0.87      1426\n\n    accuracy                           0.78      1833\n   macro avg       0.16      0.20      0.17      1833\nweighted avg       0.61      0.78      0.68      1833\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Thanks all! ##","metadata":{}}]}