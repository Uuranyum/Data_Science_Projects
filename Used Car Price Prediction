{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "03a70792",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:29.373045Z",
     "iopub.status.busy": "2024-06-10T13:35:29.372478Z",
     "iopub.status.idle": "2024-06-10T13:35:32.689023Z",
     "shell.execute_reply": "2024-06-10T13:35:32.686754Z"
    },
    "papermill": {
     "duration": 3.329979,
     "end_time": "2024-06-10T13:35:32.694366",
     "exception": false,
     "start_time": "2024-06-10T13:35:29.364387",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error, accuracy_score, precision_score, recall_score, f1_score\n",
    "from sklearn.feature_selection import mutual_info_regression\n",
    "from sklearn.linear_model import LassoCV\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "0e56ce7e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.713449Z",
     "iopub.status.busy": "2024-06-10T13:35:32.712071Z",
     "iopub.status.idle": "2024-06-10T13:35:32.781261Z",
     "shell.execute_reply": "2024-06-10T13:35:32.779671Z"
    },
    "papermill": {
     "duration": 0.082599,
     "end_time": "2024-06-10T13:35:32.786179",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.703580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Car_Name</th>\n",
       "      <th>Year</th>\n",
       "      <th>Selling_Price</th>\n",
       "      <th>Present_Price</th>\n",
       "      <th>Driven_kms</th>\n",
       "      <th>Fuel_Type</th>\n",
       "      <th>Selling_type</th>\n",
       "      <th>Transmission</th>\n",
       "      <th>Owner</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ritz</td>\n",
       "      <td>2014</td>\n",
       "      <td>3.35</td>\n",
       "      <td>5.59</td>\n",
       "      <td>27000</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>sx4</td>\n",
       "      <td>2013</td>\n",
       "      <td>4.75</td>\n",
       "      <td>9.54</td>\n",
       "      <td>43000</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2017</td>\n",
       "      <td>7.25</td>\n",
       "      <td>9.85</td>\n",
       "      <td>6900</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>wagon r</td>\n",
       "      <td>2011</td>\n",
       "      <td>2.85</td>\n",
       "      <td>4.15</td>\n",
       "      <td>5200</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>swift</td>\n",
       "      <td>2014</td>\n",
       "      <td>4.60</td>\n",
       "      <td>6.87</td>\n",
       "      <td>42450</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>vitara brezza</td>\n",
       "      <td>2018</td>\n",
       "      <td>9.25</td>\n",
       "      <td>9.83</td>\n",
       "      <td>2071</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2015</td>\n",
       "      <td>6.75</td>\n",
       "      <td>8.12</td>\n",
       "      <td>18796</td>\n",
       "      <td>Petrol</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>s cross</td>\n",
       "      <td>2015</td>\n",
       "      <td>6.50</td>\n",
       "      <td>8.61</td>\n",
       "      <td>33429</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2016</td>\n",
       "      <td>8.75</td>\n",
       "      <td>8.89</td>\n",
       "      <td>20273</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>ciaz</td>\n",
       "      <td>2015</td>\n",
       "      <td>7.45</td>\n",
       "      <td>8.92</td>\n",
       "      <td>42367</td>\n",
       "      <td>Diesel</td>\n",
       "      <td>Dealer</td>\n",
       "      <td>Manual</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Car_Name  Year  Selling_Price  Present_Price  Driven_kms Fuel_Type  \\\n",
       "0           ritz  2014           3.35           5.59       27000    Petrol   \n",
       "1            sx4  2013           4.75           9.54       43000    Diesel   \n",
       "2           ciaz  2017           7.25           9.85        6900    Petrol   \n",
       "3        wagon r  2011           2.85           4.15        5200    Petrol   \n",
       "4          swift  2014           4.60           6.87       42450    Diesel   \n",
       "5  vitara brezza  2018           9.25           9.83        2071    Diesel   \n",
       "6           ciaz  2015           6.75           8.12       18796    Petrol   \n",
       "7        s cross  2015           6.50           8.61       33429    Diesel   \n",
       "8           ciaz  2016           8.75           8.89       20273    Diesel   \n",
       "9           ciaz  2015           7.45           8.92       42367    Diesel   \n",
       "\n",
       "  Selling_type Transmission  Owner  \n",
       "0       Dealer       Manual      0  \n",
       "1       Dealer       Manual      0  \n",
       "2       Dealer       Manual      0  \n",
       "3       Dealer       Manual      0  \n",
       "4       Dealer       Manual      0  \n",
       "5       Dealer       Manual      0  \n",
       "6       Dealer       Manual      0  \n",
       "7       Dealer       Manual      0  \n",
       "8       Dealer       Manual      0  \n",
       "9       Dealer       Manual      0  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/kaggle/input/car-price-predictionused-cars/car data.csv')\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7ec7a8f2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.801023Z",
     "iopub.status.busy": "2024-06-10T13:35:32.800532Z",
     "iopub.status.idle": "2024-06-10T13:35:32.836941Z",
     "shell.execute_reply": "2024-06-10T13:35:32.835285Z"
    },
    "papermill": {
     "duration": 0.047657,
     "end_time": "2024-06-10T13:35:32.840588",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.792931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 301 entries, 0 to 300\n",
      "Data columns (total 9 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   Car_Name       301 non-null    object \n",
      " 1   Year           301 non-null    int64  \n",
      " 2   Selling_Price  301 non-null    float64\n",
      " 3   Present_Price  301 non-null    float64\n",
      " 4   Driven_kms     301 non-null    int64  \n",
      " 5   Fuel_Type      301 non-null    object \n",
      " 6   Selling_type   301 non-null    object \n",
      " 7   Transmission   301 non-null    object \n",
      " 8   Owner          301 non-null    int64  \n",
      "dtypes: float64(2), int64(3), object(4)\n",
      "memory usage: 21.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "94cd866a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.854619Z",
     "iopub.status.busy": "2024-06-10T13:35:32.854191Z",
     "iopub.status.idle": "2024-06-10T13:35:32.866252Z",
     "shell.execute_reply": "2024-06-10T13:35:32.864790Z"
    },
    "papermill": {
     "duration": 0.022887,
     "end_time": "2024-06-10T13:35:32.869549",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.846662",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Car_Name         0\n",
       "Year             0\n",
       "Selling_Price    0\n",
       "Present_Price    0\n",
       "Driven_kms       0\n",
       "Fuel_Type        0\n",
       "Selling_type     0\n",
       "Transmission     0\n",
       "Owner            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eaa9663b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.884497Z",
     "iopub.status.busy": "2024-06-10T13:35:32.883242Z",
     "iopub.status.idle": "2024-06-10T13:35:32.894841Z",
     "shell.execute_reply": "2024-06-10T13:35:32.893395Z"
    },
    "papermill": {
     "duration": 0.022604,
     "end_time": "2024-06-10T13:35:32.898298",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.875694",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "4f0b9445",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.917189Z",
     "iopub.status.busy": "2024-06-10T13:35:32.915910Z",
     "iopub.status.idle": "2024-06-10T13:35:32.929982Z",
     "shell.execute_reply": "2024-06-10T13:35:32.928522Z"
    },
    "papermill": {
     "duration": 0.027208,
     "end_time": "2024-06-10T13:35:32.935021",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.907813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.drop_duplicates(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e2d94ae0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.954328Z",
     "iopub.status.busy": "2024-06-10T13:35:32.952930Z",
     "iopub.status.idle": "2024-06-10T13:35:32.966306Z",
     "shell.execute_reply": "2024-06-10T13:35:32.964885Z"
    },
    "papermill": {
     "duration": 0.025064,
     "end_time": "2024-06-10T13:35:32.969140",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.944076",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "89f6d60b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:32.987099Z",
     "iopub.status.busy": "2024-06-10T13:35:32.986585Z",
     "iopub.status.idle": "2024-06-10T13:35:32.995656Z",
     "shell.execute_reply": "2024-06-10T13:35:32.994248Z"
    },
    "papermill": {
     "duration": 0.022461,
     "end_time": "2024-06-10T13:35:32.998485",
     "exception": false,
     "start_time": "2024-06-10T13:35:32.976024",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(299, 9)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0e634197",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:33.017571Z",
     "iopub.status.busy": "2024-06-10T13:35:33.016192Z",
     "iopub.status.idle": "2024-06-10T13:35:33.053097Z",
     "shell.execute_reply": "2024-06-10T13:35:33.051848Z"
    },
    "papermill": {
     "duration": 0.048544,
     "end_time": "2024-06-10T13:35:33.055909",
     "exception": false,
     "start_time": "2024-06-10T13:35:33.007365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <td>299.0</td>\n",
       "      <td>2013.615385</td>\n",
       "      <td>2.896868</td>\n",
       "      <td>2003.00</td>\n",
       "      <td>2012.00</td>\n",
       "      <td>2014.00</td>\n",
       "      <td>2016.00</td>\n",
       "      <td>2018.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Selling_Price</th>\n",
       "      <td>299.0</td>\n",
       "      <td>4.589632</td>\n",
       "      <td>4.984240</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.85</td>\n",
       "      <td>3.51</td>\n",
       "      <td>6.00</td>\n",
       "      <td>35.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Present_Price</th>\n",
       "      <td>299.0</td>\n",
       "      <td>7.541037</td>\n",
       "      <td>8.566332</td>\n",
       "      <td>0.32</td>\n",
       "      <td>1.20</td>\n",
       "      <td>6.10</td>\n",
       "      <td>9.84</td>\n",
       "      <td>92.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Driven_kms</th>\n",
       "      <td>299.0</td>\n",
       "      <td>36916.752508</td>\n",
       "      <td>39015.170352</td>\n",
       "      <td>500.00</td>\n",
       "      <td>15000.00</td>\n",
       "      <td>32000.00</td>\n",
       "      <td>48883.50</td>\n",
       "      <td>500000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Owner</th>\n",
       "      <td>299.0</td>\n",
       "      <td>0.043478</td>\n",
       "      <td>0.248720</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean           std      min       25%       50%  \\\n",
       "Year           299.0   2013.615385      2.896868  2003.00   2012.00   2014.00   \n",
       "Selling_Price  299.0      4.589632      4.984240     0.10      0.85      3.51   \n",
       "Present_Price  299.0      7.541037      8.566332     0.32      1.20      6.10   \n",
       "Driven_kms     299.0  36916.752508  39015.170352   500.00  15000.00  32000.00   \n",
       "Owner          299.0      0.043478      0.248720     0.00      0.00      0.00   \n",
       "\n",
       "                    75%       max  \n",
       "Year            2016.00    2018.0  \n",
       "Selling_Price      6.00      35.0  \n",
       "Present_Price      9.84      92.6  \n",
       "Driven_kms     48883.50  500000.0  \n",
       "Owner              0.00       3.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "3fdd9dd1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-10T13:35:33.072503Z",
     "iopub.status.busy": "2024-06-10T13:35:33.070976Z",
     "iopub.status.idle": "2024-06-10T13:35:33.227804Z",
     "shell.execute_reply": "2024-06-10T13:35:33.226307Z"
    },
    "papermill": {
     "duration": 0.168149,
     "end_time": "2024-06-10T13:35:33.230851",
     "exception": false,
     "start_time": "2024-06-10T13:35:33.062702",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_4d369_row0_col0, #T_4d369_row0_col2, #T_4d369_row1_col0, #T_4d369_row1_col1, #T_4d369_row1_col2, #T_4d369_row1_col3, #T_4d369_row1_col4, #T_4d369_row1_col5, #T_4d369_row1_col6, #T_4d369_row1_col7, #T_4d369_row2_col0, #T_4d369_row2_col1, #T_4d369_row2_col2, #T_4d369_row2_col3, #T_4d369_row2_col4, #T_4d369_row2_col5, #T_4d369_row2_col6, #T_4d369_row2_col7, #T_4d369_row3_col0, #T_4d369_row4_col0, #T_4d369_row4_col1, #T_4d369_row4_col2, #T_4d369_row4_col3, #T_4d369_row4_col4, #T_4d369_row4_col5, #T_4d369_row4_col6, #T_4d369_row4_col7 {\n",
       "  background-color: #000004;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row0_col1 {\n",
       "  background-color: #08051d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row0_col3, #T_4d369_row3_col1, #T_4d369_row3_col2, #T_4d369_row3_col4, #T_4d369_row3_col5, #T_4d369_row3_col6, #T_4d369_row3_col7 {\n",
       "  background-color: #fcffa4;\n",
       "  color: #000000;\n",
       "}\n",
       "#T_4d369_row0_col4 {\n",
       "  background-color: #240c4f;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row0_col5 {\n",
       "  background-color: #0b0724;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row0_col6 {\n",
       "  background-color: #050417;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row0_col7 {\n",
       "  background-color: #010005;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "#T_4d369_row3_col3 {\n",
       "  background-color: #550f6d;\n",
       "  color: #f1f1f1;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_4d369\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_4d369_level0_col0\" class=\"col_heading level0 col0\" >count</th>\n",
       "      <th id=\"T_4d369_level0_col1\" class=\"col_heading level0 col1\" >mean</th>\n",
       "      <th id=\"T_4d369_level0_col2\" class=\"col_heading level0 col2\" >std</th>\n",
       "      <th id=\"T_4d369_level0_col3\" class=\"col_heading level0 col3\" >min</th>\n",
       "      <th id=\"T_4d369_level0_col4\" class=\"col_heading level0 col4\" >25%</th>\n",
       "      <th id=\"T_4d369_level0_col5\" class=\"col_heading level0 col5\" >50%</th>\n",
       "      <th id=\"T_4d369_level0_col6\" class=\"col_heading level0 col6\" >75%</th>\n",
       "      <th id=\"T_4d369_level0_col7\" class=\"col_heading level0 col7\" >max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_4d369_level0_row0\" class=\"row_heading level0 row0\" >Year</th>\n",
       "      <td id=\"T_4d369_row0_col0\" class=\"data row0 col0\" >299.000000</td>\n",
       "      <td id=\"T_4d369_row0_col1\" class=\"data row0 col1\" >2013.615385</td>\n",
       "      <td id=\"T_4d369_row0_col2\" class=\"data row0 col2\" >2.896868</td>\n",
       "      <td id=\"T_4d369_row0_col3\" class=\"data row0 col3\" >2003.000000</td>\n",
       "      <td id=\"T_4d369_row0_col4\" class=\"data row0 col4\" >2012.000000</td>\n",
       "      <td id=\"T_4d369_row0_col5\" class=\"data row0 col5\" >2014.000000</td>\n",
       "      <td id=\"T_4d369_row0_col6\" class=\"data row0 col6\" >2016.000000</td>\n",
       "      <td id=\"T_4d369_row0_col7\" class=\"data row0 col7\" >2018.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4d369_level0_row1\" class=\"row_heading level0 row1\" >Selling_Price</th>\n",
       "      <td id=\"T_4d369_row1_col0\" class=\"data row1 col0\" >299.000000</td>\n",
       "      <td id=\"T_4d369_row1_col1\" class=\"data row1 col1\" >4.589632</td>\n",
       "      <td id=\"T_4d369_row1_col2\" class=\"data row1 col2\" >4.984240</td>\n",
       "      <td id=\"T_4d369_row1_col3\" class=\"data row1 col3\" >0.100000</td>\n",
       "      <td id=\"T_4d369_row1_col4\" class=\"data row1 col4\" >0.850000</td>\n",
       "      <td id=\"T_4d369_row1_col5\" class=\"data row1 col5\" >3.510000</td>\n",
       "      <td id=\"T_4d369_row1_col6\" class=\"data row1 col6\" >6.000000</td>\n",
       "      <td id=\"T_4d369_row1_col7\" class=\"data row1 col7\" >35.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4d369_level0_row2\" class=\"row_heading level0 row2\" >Present_Price</th>\n",
       "      <td id=\"T_4d369_row2_col0\" class=\"data row2 col0\" >299.000000</td>\n",
       "      <td id=\"T_4d369_row2_col1\" class=\"data row2 col1\" >7.541037</td>\n",
       "      <td id=\"T_4d369_row2_col2\" class=\"data row2 col2\" >8.566332</td>\n",
       "      <td id=\"T_4d369_row2_col3\" class=\"data row2 col3\" >0.320000</td>\n",
       "      <td id=\"T_4d369_row2_col4\" class=\"data row2 col4\" >1.200000</td>\n",
       "      <td id=\"T_4d369_row2_col5\" class=\"data row2 col5\" >6.100000</td>\n",
       "      <td id=\"T_4d369_row2_col6\" class=\"data row2 col6\" >9.840000</td>\n",
       "      <td id=\"T_4d369_row2_col7\" class=\"data row2 col7\" >92.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4d369_level0_row3\" class=\"row_heading level0 row3\" >Driven_kms</th>\n",
       "      <td id=\"T_4d369_row3_col0\" class=\"data row3 col0\" >299.000000</td>\n",
       "      <td id=\"T_4d369_row3_col1\" class=\"data row3 col1\" >36916.752508</td>\n",
       "      <td id=\"T_4d369_row3_col2\" class=\"data row3 col2\" >39015.170352</td>\n",
       "      <td id=\"T_4d369_row3_col3\" class=\"data row3 col3\" >500.000000</td>\n",
       "      <td id=\"T_4d369_row3_col4\" class=\"data row3 col4\" >15000.000000</td>\n",
       "      <td id=\"T_4d369_row3_col5\" class=\"data row3 col5\" >32000.000000</td>\n",
       "      <td id=\"T_4d369_row3_col6\" class=\"data row3 col6\" >48883.500000</td>\n",
       "      <td id=\"T_4d369_row3_col7\" class=\"data row3 col7\" >500000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_4d369_level0_row4\" class=\"row_heading level0 row4\" >Owner</th>\n",
       "      <td id=\"T_4d369_row4_col0\" class=\"data row4 col0\" >299.000000</td>\n",
       "      <td id=\"T_4d369_row4_col1\" class=\"data row4 col1\" >0.043478</td>\n",
       "      <td id=\"T_4d369_row4_col2\" class=\"data row4 col2\" >0.248720</td>\n",
       "      <td id=\"T_4d369_row4_col3\" class=\"data row4 col3\" >0.000000</td>\n",
       "      <td id=\"T_4d369_row4_col4\" class=\"data row4 col4\" >0.000000</td>\n",
       "      <td id=\"T_4d369_row4_col5\" class=\"data row4 col5\" >0.000000</td>\n",
       "      <td id=\"T_4d369_row4_col6\" class=\"data row4 col6\" >0.000000</td>\n",
       "      <td id=\"T_4d369_row4_col7\" class=\"data row4 col7\" >3.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7d03fe182ef0>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num_sum = df.describe().T\n",
    "palette = sns.color_palette('inferno', as_cmap=True)\n",
    "num_sum.style.background_gradient(cmap=palette)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ca2867e",
   "metadata": {
    "papermill": {
     "duration": 0.007093,
     "end_time": "2024-06-10T13:35:33.245292",
     "exception": false,
     "start_time": "2024-06-10T13:35:33.238199",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## EDA ##"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "797626df",
   "metadata": {
    "papermill": {
     "duration": 0.006604,
     "end_time": "2024-06-10T13:35:33.259047",
     "exception": false,
     "start_time": "2024-06-10T13:35:33.252443",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 2491159,
     "sourceId": 4226692,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.684602,
   "end_time": "2024-06-10T13:35:34.293219",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-10T13:35:25.608617",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
